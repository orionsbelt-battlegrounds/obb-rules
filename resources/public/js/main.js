if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return name in goog.loadedModules_ ? goog.loadedModules_[name] : goog.getObjectByName(name);
    } else {
      return null;
    }
  }
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareTestMethods = function() {
  if (!goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareTestMethods must be called from " + "within a goog.module");
  }
  goog.moduleLoaderState_.declareTestMethods = true;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_isModule) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      deps.pathIsModule[path] = !!opt_isModule;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      } else {
        return null;
      }
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return null;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    goog.logToConsole_(errorMessage);
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathIsModule:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("SCRIPT");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var script = (scripts[i]);
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !goog.global.atob && goog.global.document && goog.global.document.all;
  goog.importModule_ = function(src) {
    var bootstrap = 'goog.retrieveAndExecModule_("' + src + '");';
    if (goog.importScript_("", bootstrap)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL\x3d" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0;i < count;i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && goog.dependencies_.pathIsModule[path]) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModule = function(moduleDef) {
    var previousState = goog.moduleLoaderState_;
    try {
      goog.moduleLoaderState_ = {moduleName:undefined, declareTestMethods:false};
      var exports;
      if (goog.isFunction(moduleDef)) {
        exports = moduleDef.call(goog.global, {});
      } else {
        if (goog.isString(moduleDef)) {
          exports = goog.loadModuleFromSource_.call(goog.global, moduleDef);
        } else {
          throw Error("Invalid module definition");
        }
      }
      var moduleName = goog.moduleLoaderState_.moduleName;
      if (!goog.isString(moduleName) || !moduleName) {
        throw Error('Invalid module name "' + moduleName + '"');
      }
      if (goog.moduleLoaderState_.declareLegacyNamespace) {
        goog.constructNamespace_(moduleName, exports);
      } else {
        if (goog.SEAL_MODULE_EXPORTS && Object.seal) {
          Object.seal(exports);
        }
      }
      goog.loadedModules_[moduleName] = exports;
      if (goog.moduleLoaderState_.declareTestMethods) {
        for (var entry in exports) {
          if (entry.indexOf("test", 0) === 0 || entry == "tearDown" || entry == "setUp" || entry == "setUpPage" || entry == "tearDownPage") {
            goog.global[entry] = exports[entry];
          }
        }
      }
    } finally {
      goog.moduleLoaderState_ = previousState;
    }
  };
  goog.loadModuleFromSource_ = function(source) {
    var exports = {};
    eval(arguments[0]);
    return exports;
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = doc.createElement("script");
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      var isOldIE = goog.IS_OLD_IE_;
      if (opt_sourceText === undefined) {
        if (!isOldIE) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          var state = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"' + state + "\x3e\x3c/" + "script\x3e");
        }
      } else {
        doc.write('\x3cscript type\x3d"text/javascript"\x3e' + opt_sourceText + "\x3c/" + "script\x3e");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    var loadingModule = false;
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      if (path) {
        if (!deps.pathIsModule[path]) {
          goog.importScript_(goog.basePath + path);
        } else {
          loadingModule = true;
          goog.importModule_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    var xhr = new goog.global["XMLHttpRequest"];
    xhr.open("get", src, false);
    xhr.send();
    return xhr.responseText;
  }
};
goog.retrieveAndExecModule_ = function(src) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText != null) {
      var execModuleScript = goog.wrapModule_(src, scriptText);
      var isOldIE = goog.IS_OLD_IE_;
      if (isOldIE) {
        goog.dependencies_.deferred[originalPath] = execModuleScript;
        goog.queuedModules_.push(originalPath);
      } else {
        importScript(src, execModuleScript);
      }
    } else {
      throw new Error("load of " + src + "failed");
    }
  }
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return (fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("SCRIPT");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2;i < arguments.length;i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1;i < arguments.length;i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2;i < arguments.length;i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0;i < b.length + 1;i++) {
    v0[i] = i;
  }
  for (var i = 0;i < a.length;i++) {
    v1[0] = i + 1;
    for (var j = 0;j < b.length;j++) {
      var cost = a[i] != b[j];
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0;j < v0.length;j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call(opt_obj, val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0;j < len2;j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0;c < element.length;c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0;r < recurseResult.length;r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.provide("cljs.core");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-3308";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_target_STAR_ = "default";
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function cljs$core$_STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__8857__delegate = function(args) {
      return console.log.apply(console, function() {
        var G__8856 = args;
        return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__8856) : cljs.core.into_array.call(null, G__8856);
      }());
    };
    var G__8857 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__8858__i = 0, G__8858__a = new Array(arguments.length - 0);
        while (G__8858__i < G__8858__a.length) {
          G__8858__a[G__8858__i] = arguments[G__8858__i + 0];
          ++G__8858__i;
        }
        args = new cljs.core.IndexedSeq(G__8858__a, 0);
      }
      return G__8857__delegate.call(this, args);
    };
    G__8857.cljs$lang$maxFixedArity = 0;
    G__8857.cljs$lang$applyTo = function(arglist__8859) {
      var args = cljs.core.seq(arglist__8859);
      return G__8857__delegate(args);
    };
    G__8857.cljs$core$IFn$_invoke$arity$variadic = G__8857__delegate;
    return G__8857;
  }();
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  var G__8861 = x;
  return goog.isString(G__8861);
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[function() {
    var G__8863 = x__$1;
    return goog.typeOf(G__8863);
  }()]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__6742__auto__ = ty;
    if (cljs.core.truth_(and__6742__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__6742__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : function() {
    var G__8865 = obj;
    return goog.typeOf(G__8865);
  }();
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4423__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4423__auto__)) {
    var s = temp__4423__auto__;
    return s;
  } else {
    return [cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && function() {
  var G__8867 = Symbol;
  return goog.typeOf(G__8867);
}() === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function cljs$core$make_array() {
  var G__8869 = arguments.length;
  switch(G__8869) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__7639__auto___8871 = len;
  var i_8872 = 0;
  while (true) {
    if (i_8872 < n__7639__auto___8871) {
      new_arr[i_8872] = arr[i_8872];
      var G__8873 = i_8872 + 1;
      i_8872 = G__8873;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__8874 = i + 1;
      i = G__8874;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function cljs$core$aget() {
  var G__8879 = arguments.length;
  switch(G__8879) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return array[i];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, i, idxs) {
  var G__8880 = cljs.core.aget;
  var G__8881 = array[i];
  var G__8882 = idxs;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__8880, G__8881, G__8882) : cljs.core.apply.call(null, G__8880, G__8881, G__8882);
};
cljs.core.aget.cljs$lang$applyTo = function(seq8875) {
  var G__8876 = cljs.core.first(seq8875);
  var seq8875__$1 = cljs.core.next(seq8875);
  var G__8877 = cljs.core.first(seq8875__$1);
  var seq8875__$2 = cljs.core.next(seq8875__$1);
  return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(G__8876, G__8877, seq8875__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset() {
  var G__8889 = arguments.length;
  switch(G__8889) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7805__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, i, val) {
  return array[i] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  var G__8890 = cljs.core.aset;
  var G__8891 = array[idx];
  var G__8892 = idx2;
  var G__8893 = idxv;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__8890, G__8891, G__8892, G__8893) : cljs.core.apply.call(null, G__8890, G__8891, G__8892, G__8893);
};
cljs.core.aset.cljs$lang$applyTo = function(seq8884) {
  var G__8885 = cljs.core.first(seq8884);
  var seq8884__$1 = cljs.core.next(seq8884);
  var G__8886 = cljs.core.first(seq8884__$1);
  var seq8884__$2 = cljs.core.next(seq8884__$1);
  var G__8887 = cljs.core.first(seq8884__$2);
  var seq8884__$3 = cljs.core.next(seq8884__$2);
  return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(G__8885, G__8886, G__8887, seq8884__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array() {
  var G__8896 = arguments.length;
  switch(G__8896) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  var G__8897 = function(a, x) {
    a.push(x);
    return a;
  };
  var G__8898 = [];
  var G__8899 = aseq;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__8897, G__8898, G__8899) : cljs.core.reduce.call(null, G__8897, G__8898, G__8899);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke() {
  var argseq__7794__auto__ = 2 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7794__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq8901) {
  var G__8902 = cljs.core.first(seq8901);
  var seq8901__$1 = cljs.core.next(seq8901);
  var G__8903 = cljs.core.first(seq8901__$1);
  var seq8901__$2 = cljs.core.next(seq8901__$1);
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(G__8902, G__8903, seq8901__$2);
};
cljs.core.Fn = function() {
  var obj8905 = {};
  return obj8905;
}();
cljs.core.IFn = function() {
  var obj8907 = {};
  return obj8907;
}();
cljs.core._invoke = function cljs$core$_invoke() {
  var G__8909 = arguments.length;
  switch(G__8909) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (function() {
    var and__6742__auto__ = this$;
    if (and__6742__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__7390__auto__ = this$ == null ? null : this$;
    return function() {
      var or__6754__auto__ = cljs.core._invoke[function() {
        var G__8911 = x__7390__auto__;
        return goog.typeOf(G__8911);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._invoke["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (function() {
    var and__6742__auto__ = this$;
    if (and__6742__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$2;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__7390__auto__ = this$ == null ? null : this$;
    return function() {
      var or__6754__auto__ = cljs.core._invoke[function() {
        var G__8913 = x__7390__auto__;
        return goog.typeOf(G__8913);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._invoke["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (function() {
    var and__6742__auto__ = this$;
    if (and__6742__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$3;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__7390__auto__ = this$ == null ? null : this$;
    return function() {
      var or__6754__auto__ = cljs.core._invoke[function() {
        var G__8915 = x__7390__auto__;
        return goog.typeOf(G__8915);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._invoke["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (function() {
    var and__6742__auto__ = this$;
    if (and__6742__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$4;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__7390__auto__ = this$ == null ? null : this$;
    return function() {
      var or__6754__auto__ = cljs.core._invoke[function() {
        var G__8917 = x__7390__auto__;
        return goog.typeOf(G__8917);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._invoke["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (function() {
    var and__6742__auto__ = this$;
    if (and__6742__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$5;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__7390__auto__ = this$ == null ? null : this$;
    return function() {
      var or__6754__auto__ = cljs.core._invoke[function() {
        var G__8919 = x__7390__auto__;
        return goog.typeOf(G__8919);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._invoke["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (function() {
    var and__6742__auto__ = this$;
    if (and__6742__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$6;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__7390__auto__ = this$ == null ? null : this$;
    return function() {
      var or__6754__auto__ = cljs.core._invoke[function() {
        var G__8921 = x__7390__auto__;
        return goog.typeOf(G__8921);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._invoke["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (function() {
    var and__6742__auto__ = this$;
    if (and__6742__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$7;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__7390__auto__ = this$ == null ? null : this$;
    return function() {
      var or__6754__auto__ = cljs.core._invoke[function() {
        var G__8923 = x__7390__auto__;
        return goog.typeOf(G__8923);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._invoke["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (function() {
    var and__6742__auto__ = this$;
    if (and__6742__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$8;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__7390__auto__ = this$ == null ? null : this$;
    return function() {
      var or__6754__auto__ = cljs.core._invoke[function() {
        var G__8925 = x__7390__auto__;
        return goog.typeOf(G__8925);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._invoke["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (function() {
    var and__6742__auto__ = this$;
    if (and__6742__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$9;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__7390__auto__ = this$ == null ? null : this$;
    return function() {
      var or__6754__auto__ = cljs.core._invoke[function() {
        var G__8927 = x__7390__auto__;
        return goog.typeOf(G__8927);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._invoke["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (function() {
    var and__6742__auto__ = this$;
    if (and__6742__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$10;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__7390__auto__ = this$ == null ? null : this$;
    return function() {
      var or__6754__auto__ = cljs.core._invoke[function() {
        var G__8929 = x__7390__auto__;
        return goog.typeOf(G__8929);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._invoke["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (function() {
    var and__6742__auto__ = this$;
    if (and__6742__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$11;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__7390__auto__ = this$ == null ? null : this$;
    return function() {
      var or__6754__auto__ = cljs.core._invoke[function() {
        var G__8931 = x__7390__auto__;
        return goog.typeOf(G__8931);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._invoke["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (function() {
    var and__6742__auto__ = this$;
    if (and__6742__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$12;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__7390__auto__ = this$ == null ? null : this$;
    return function() {
      var or__6754__auto__ = cljs.core._invoke[function() {
        var G__8933 = x__7390__auto__;
        return goog.typeOf(G__8933);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._invoke["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (function() {
    var and__6742__auto__ = this$;
    if (and__6742__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$13;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__7390__auto__ = this$ == null ? null : this$;
    return function() {
      var or__6754__auto__ = cljs.core._invoke[function() {
        var G__8935 = x__7390__auto__;
        return goog.typeOf(G__8935);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._invoke["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (function() {
    var and__6742__auto__ = this$;
    if (and__6742__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$14;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__7390__auto__ = this$ == null ? null : this$;
    return function() {
      var or__6754__auto__ = cljs.core._invoke[function() {
        var G__8937 = x__7390__auto__;
        return goog.typeOf(G__8937);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._invoke["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (function() {
    var and__6742__auto__ = this$;
    if (and__6742__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$15;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__7390__auto__ = this$ == null ? null : this$;
    return function() {
      var or__6754__auto__ = cljs.core._invoke[function() {
        var G__8939 = x__7390__auto__;
        return goog.typeOf(G__8939);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._invoke["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (function() {
    var and__6742__auto__ = this$;
    if (and__6742__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$16;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__7390__auto__ = this$ == null ? null : this$;
    return function() {
      var or__6754__auto__ = cljs.core._invoke[function() {
        var G__8941 = x__7390__auto__;
        return goog.typeOf(G__8941);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._invoke["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (function() {
    var and__6742__auto__ = this$;
    if (and__6742__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$17;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__7390__auto__ = this$ == null ? null : this$;
    return function() {
      var or__6754__auto__ = cljs.core._invoke[function() {
        var G__8943 = x__7390__auto__;
        return goog.typeOf(G__8943);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._invoke["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (function() {
    var and__6742__auto__ = this$;
    if (and__6742__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$18;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__7390__auto__ = this$ == null ? null : this$;
    return function() {
      var or__6754__auto__ = cljs.core._invoke[function() {
        var G__8945 = x__7390__auto__;
        return goog.typeOf(G__8945);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._invoke["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (function() {
    var and__6742__auto__ = this$;
    if (and__6742__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$19;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__7390__auto__ = this$ == null ? null : this$;
    return function() {
      var or__6754__auto__ = cljs.core._invoke[function() {
        var G__8947 = x__7390__auto__;
        return goog.typeOf(G__8947);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._invoke["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (function() {
    var and__6742__auto__ = this$;
    if (and__6742__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$20;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__7390__auto__ = this$ == null ? null : this$;
    return function() {
      var or__6754__auto__ = cljs.core._invoke[function() {
        var G__8949 = x__7390__auto__;
        return goog.typeOf(G__8949);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._invoke["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (function() {
    var and__6742__auto__ = this$;
    if (and__6742__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$21;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__7390__auto__ = this$ == null ? null : this$;
    return function() {
      var or__6754__auto__ = cljs.core._invoke[function() {
        var G__8951 = x__7390__auto__;
        return goog.typeOf(G__8951);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._invoke["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (function() {
    var and__6742__auto__ = this$;
    if (and__6742__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$22;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__7390__auto__ = this$ == null ? null : this$;
    return function() {
      var or__6754__auto__ = cljs.core._invoke[function() {
        var G__8953 = x__7390__auto__;
        return goog.typeOf(G__8953);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._invoke["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
  var obj8956 = {};
  return obj8956;
}();
cljs.core._clone = function cljs$core$_clone(value) {
  if (function() {
    var and__6742__auto__ = value;
    if (and__6742__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__7390__auto__ = value == null ? null : value;
    return function() {
      var or__6754__auto__ = cljs.core._clone[function() {
        var G__8960 = x__7390__auto__;
        return goog.typeOf(G__8960);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._clone["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj8962 = {};
  return obj8962;
}();
cljs.core._count = function cljs$core$_count(coll) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._count[function() {
        var G__8966 = x__7390__auto__;
        return goog.typeOf(G__8966);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._count["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj8968 = {};
  return obj8968;
}();
cljs.core._empty = function cljs$core$_empty(coll) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._empty[function() {
        var G__8972 = x__7390__auto__;
        return goog.typeOf(G__8972);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._empty["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj8974 = {};
  return obj8974;
}();
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._conj[function() {
        var G__8978 = x__7390__auto__;
        return goog.typeOf(G__8978);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._conj["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj8980 = {};
  return obj8980;
}();
cljs.core._nth = function cljs$core$_nth() {
  var G__8982 = arguments.length;
  switch(G__8982) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$IIndexed$_nth$arity$2;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._nth[function() {
        var G__8984 = x__7390__auto__;
        return goog.typeOf(G__8984);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._nth["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIndexed.-nth", coll);
        }
      }
    }().call(null, coll, n);
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$IIndexed$_nth$arity$3;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._nth[function() {
        var G__8986 = x__7390__auto__;
        return goog.typeOf(G__8986);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._nth["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIndexed.-nth", coll);
        }
      }
    }().call(null, coll, n, not_found);
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
  var obj8989 = {};
  return obj8989;
}();
cljs.core.ISeq = function() {
  var obj8991 = {};
  return obj8991;
}();
cljs.core._first = function cljs$core$_first(coll) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._first[function() {
        var G__8995 = x__7390__auto__;
        return goog.typeOf(G__8995);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._first["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._rest[function() {
        var G__8999 = x__7390__auto__;
        return goog.typeOf(G__8999);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._rest["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj9001 = {};
  return obj9001;
}();
cljs.core._next = function cljs$core$_next(coll) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._next[function() {
        var G__9005 = x__7390__auto__;
        return goog.typeOf(G__9005);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._next["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj9007 = {};
  return obj9007;
}();
cljs.core._lookup = function cljs$core$_lookup() {
  var G__9009 = arguments.length;
  switch(G__9009) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (function() {
    var and__6742__auto__ = o;
    if (and__6742__auto__) {
      return o.cljs$core$ILookup$_lookup$arity$2;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__7390__auto__ = o == null ? null : o;
    return function() {
      var or__6754__auto__ = cljs.core._lookup[function() {
        var G__9011 = x__7390__auto__;
        return goog.typeOf(G__9011);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._lookup["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ILookup.-lookup", o);
        }
      }
    }().call(null, o, k);
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (function() {
    var and__6742__auto__ = o;
    if (and__6742__auto__) {
      return o.cljs$core$ILookup$_lookup$arity$3;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__7390__auto__ = o == null ? null : o;
    return function() {
      var or__6754__auto__ = cljs.core._lookup[function() {
        var G__9013 = x__7390__auto__;
        return goog.typeOf(G__9013);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._lookup["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ILookup.-lookup", o);
        }
      }
    }().call(null, o, k, not_found);
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
  var obj9016 = {};
  return obj9016;
}();
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._contains_key_QMARK_[function() {
        var G__9020 = x__7390__auto__;
        return goog.typeOf(G__9020);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._assoc[function() {
        var G__9024 = x__7390__auto__;
        return goog.typeOf(G__9024);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._assoc["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj9026 = {};
  return obj9026;
}();
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._dissoc[function() {
        var G__9030 = x__7390__auto__;
        return goog.typeOf(G__9030);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._dissoc["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj9032 = {};
  return obj9032;
}();
cljs.core._key = function cljs$core$_key(coll) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._key[function() {
        var G__9036 = x__7390__auto__;
        return goog.typeOf(G__9036);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._key["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._val[function() {
        var G__9040 = x__7390__auto__;
        return goog.typeOf(G__9040);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._val["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj9042 = {};
  return obj9042;
}();
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._disjoin[function() {
        var G__9046 = x__7390__auto__;
        return goog.typeOf(G__9046);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._disjoin["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj9048 = {};
  return obj9048;
}();
cljs.core._peek = function cljs$core$_peek(coll) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._peek[function() {
        var G__9052 = x__7390__auto__;
        return goog.typeOf(G__9052);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._peek["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._pop[function() {
        var G__9056 = x__7390__auto__;
        return goog.typeOf(G__9056);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._pop["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj9058 = {};
  return obj9058;
}();
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._assoc_n[function() {
        var G__9062 = x__7390__auto__;
        return goog.typeOf(G__9062);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._assoc_n["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj9064 = {};
  return obj9064;
}();
cljs.core._deref = function cljs$core$_deref(o) {
  if (function() {
    var and__6742__auto__ = o;
    if (and__6742__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__7390__auto__ = o == null ? null : o;
    return function() {
      var or__6754__auto__ = cljs.core._deref[function() {
        var G__9068 = x__7390__auto__;
        return goog.typeOf(G__9068);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._deref["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj9070 = {};
  return obj9070;
}();
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__6742__auto__ = o;
    if (and__6742__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__7390__auto__ = o == null ? null : o;
    return function() {
      var or__6754__auto__ = cljs.core._deref_with_timeout[function() {
        var G__9074 = x__7390__auto__;
        return goog.typeOf(G__9074);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj9076 = {};
  return obj9076;
}();
cljs.core._meta = function cljs$core$_meta(o) {
  if (function() {
    var and__6742__auto__ = o;
    if (and__6742__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__7390__auto__ = o == null ? null : o;
    return function() {
      var or__6754__auto__ = cljs.core._meta[function() {
        var G__9080 = x__7390__auto__;
        return goog.typeOf(G__9080);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._meta["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj9082 = {};
  return obj9082;
}();
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (function() {
    var and__6742__auto__ = o;
    if (and__6742__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__7390__auto__ = o == null ? null : o;
    return function() {
      var or__6754__auto__ = cljs.core._with_meta[function() {
        var G__9086 = x__7390__auto__;
        return goog.typeOf(G__9086);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._with_meta["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj9088 = {};
  return obj9088;
}();
cljs.core._reduce = function cljs$core$_reduce() {
  var G__9090 = arguments.length;
  switch(G__9090) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$IReduce$_reduce$arity$2;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._reduce[function() {
        var G__9092 = x__7390__auto__;
        return goog.typeOf(G__9092);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._reduce["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReduce.-reduce", coll);
        }
      }
    }().call(null, coll, f);
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$IReduce$_reduce$arity$3;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._reduce[function() {
        var G__9094 = x__7390__auto__;
        return goog.typeOf(G__9094);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._reduce["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReduce.-reduce", coll);
        }
      }
    }().call(null, coll, f, start);
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
  var obj9097 = {};
  return obj9097;
}();
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._kv_reduce[function() {
        var G__9101 = x__7390__auto__;
        return goog.typeOf(G__9101);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj9103 = {};
  return obj9103;
}();
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (function() {
    var and__6742__auto__ = o;
    if (and__6742__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__7390__auto__ = o == null ? null : o;
    return function() {
      var or__6754__auto__ = cljs.core._equiv[function() {
        var G__9107 = x__7390__auto__;
        return goog.typeOf(G__9107);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._equiv["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj9109 = {};
  return obj9109;
}();
cljs.core._hash = function cljs$core$_hash(o) {
  if (function() {
    var and__6742__auto__ = o;
    if (and__6742__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__7390__auto__ = o == null ? null : o;
    return function() {
      var or__6754__auto__ = cljs.core._hash[function() {
        var G__9113 = x__7390__auto__;
        return goog.typeOf(G__9113);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._hash["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj9115 = {};
  return obj9115;
}();
cljs.core._seq = function cljs$core$_seq(o) {
  if (function() {
    var and__6742__auto__ = o;
    if (and__6742__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__7390__auto__ = o == null ? null : o;
    return function() {
      var or__6754__auto__ = cljs.core._seq[function() {
        var G__9119 = x__7390__auto__;
        return goog.typeOf(G__9119);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._seq["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj9121 = {};
  return obj9121;
}();
cljs.core.IList = function() {
  var obj9123 = {};
  return obj9123;
}();
cljs.core.IRecord = function() {
  var obj9125 = {};
  return obj9125;
}();
cljs.core.IReversible = function() {
  var obj9127 = {};
  return obj9127;
}();
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._rseq[function() {
        var G__9131 = x__7390__auto__;
        return goog.typeOf(G__9131);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._rseq["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj9133 = {};
  return obj9133;
}();
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._sorted_seq[function() {
        var G__9137 = x__7390__auto__;
        return goog.typeOf(G__9137);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._sorted_seq_from[function() {
        var G__9141 = x__7390__auto__;
        return goog.typeOf(G__9141);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._entry_key[function() {
        var G__9145 = x__7390__auto__;
        return goog.typeOf(G__9145);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._entry_key["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._comparator[function() {
        var G__9149 = x__7390__auto__;
        return goog.typeOf(G__9149);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._comparator["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj9151 = {};
  return obj9151;
}();
cljs.core._write = function cljs$core$_write(writer, s) {
  if (function() {
    var and__6742__auto__ = writer;
    if (and__6742__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__7390__auto__ = writer == null ? null : writer;
    return function() {
      var or__6754__auto__ = cljs.core._write[function() {
        var G__9155 = x__7390__auto__;
        return goog.typeOf(G__9155);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._write["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (function() {
    var and__6742__auto__ = writer;
    if (and__6742__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__7390__auto__ = writer == null ? null : writer;
    return function() {
      var or__6754__auto__ = cljs.core._flush[function() {
        var G__9159 = x__7390__auto__;
        return goog.typeOf(G__9159);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._flush["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj9161 = {};
  return obj9161;
}();
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (function() {
    var and__6742__auto__ = o;
    if (and__6742__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__7390__auto__ = o == null ? null : o;
    return function() {
      var or__6754__auto__ = cljs.core._pr_writer[function() {
        var G__9165 = x__7390__auto__;
        return goog.typeOf(G__9165);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._pr_writer["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj9167 = {};
  return obj9167;
}();
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(d) {
  if (function() {
    var and__6742__auto__ = d;
    if (and__6742__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__7390__auto__ = d == null ? null : d;
    return function() {
      var or__6754__auto__ = cljs.core._realized_QMARK_[function() {
        var G__9171 = x__7390__auto__;
        return goog.typeOf(G__9171);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj9173 = {};
  return obj9173;
}();
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (function() {
    var and__6742__auto__ = this$;
    if (and__6742__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__7390__auto__ = this$ == null ? null : this$;
    return function() {
      var or__6754__auto__ = cljs.core._notify_watches[function() {
        var G__9177 = x__7390__auto__;
        return goog.typeOf(G__9177);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._notify_watches["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (function() {
    var and__6742__auto__ = this$;
    if (and__6742__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__7390__auto__ = this$ == null ? null : this$;
    return function() {
      var or__6754__auto__ = cljs.core._add_watch[function() {
        var G__9181 = x__7390__auto__;
        return goog.typeOf(G__9181);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._add_watch["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (function() {
    var and__6742__auto__ = this$;
    if (and__6742__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__7390__auto__ = this$ == null ? null : this$;
    return function() {
      var or__6754__auto__ = cljs.core._remove_watch[function() {
        var G__9185 = x__7390__auto__;
        return goog.typeOf(G__9185);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._remove_watch["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj9187 = {};
  return obj9187;
}();
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._as_transient[function() {
        var G__9191 = x__7390__auto__;
        return goog.typeOf(G__9191);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._as_transient["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj9193 = {};
  return obj9193;
}();
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (function() {
    var and__6742__auto__ = tcoll;
    if (and__6742__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__7390__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__6754__auto__ = cljs.core._conj_BANG_[function() {
        var G__9197 = x__7390__auto__;
        return goog.typeOf(G__9197);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (function() {
    var and__6742__auto__ = tcoll;
    if (and__6742__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__7390__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__6754__auto__ = cljs.core._persistent_BANG_[function() {
        var G__9201 = x__7390__auto__;
        return goog.typeOf(G__9201);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj9203 = {};
  return obj9203;
}();
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__6742__auto__ = tcoll;
    if (and__6742__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__7390__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__6754__auto__ = cljs.core._assoc_BANG_[function() {
        var G__9207 = x__7390__auto__;
        return goog.typeOf(G__9207);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj9209 = {};
  return obj9209;
}();
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__6742__auto__ = tcoll;
    if (and__6742__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__7390__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__6754__auto__ = cljs.core._dissoc_BANG_[function() {
        var G__9213 = x__7390__auto__;
        return goog.typeOf(G__9213);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj9215 = {};
  return obj9215;
}();
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__6742__auto__ = tcoll;
    if (and__6742__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__7390__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__6754__auto__ = cljs.core._assoc_n_BANG_[function() {
        var G__9219 = x__7390__auto__;
        return goog.typeOf(G__9219);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (function() {
    var and__6742__auto__ = tcoll;
    if (and__6742__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__7390__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__6754__auto__ = cljs.core._pop_BANG_[function() {
        var G__9223 = x__7390__auto__;
        return goog.typeOf(G__9223);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj9225 = {};
  return obj9225;
}();
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__6742__auto__ = tcoll;
    if (and__6742__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__7390__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__6754__auto__ = cljs.core._disjoin_BANG_[function() {
        var G__9229 = x__7390__auto__;
        return goog.typeOf(G__9229);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj9231 = {};
  return obj9231;
}();
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (function() {
    var and__6742__auto__ = x;
    if (and__6742__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__7390__auto__ = x == null ? null : x;
    return function() {
      var or__6754__auto__ = cljs.core._compare[function() {
        var G__9235 = x__7390__auto__;
        return goog.typeOf(G__9235);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._compare["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj9237 = {};
  return obj9237;
}();
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._drop_first[function() {
        var G__9241 = x__7390__auto__;
        return goog.typeOf(G__9241);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._drop_first["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj9243 = {};
  return obj9243;
}();
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._chunked_first[function() {
        var G__9247 = x__7390__auto__;
        return goog.typeOf(G__9247);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._chunked_first["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._chunked_rest[function() {
        var G__9251 = x__7390__auto__;
        return goog.typeOf(G__9251);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj9253 = {};
  return obj9253;
}();
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._chunked_next[function() {
        var G__9257 = x__7390__auto__;
        return goog.typeOf(G__9257);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._chunked_next["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj9259 = {};
  return obj9259;
}();
cljs.core._name = function cljs$core$_name(x) {
  if (function() {
    var and__6742__auto__ = x;
    if (and__6742__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__7390__auto__ = x == null ? null : x;
    return function() {
      var or__6754__auto__ = cljs.core._name[function() {
        var G__9263 = x__7390__auto__;
        return goog.typeOf(G__9263);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._name["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (function() {
    var and__6742__auto__ = x;
    if (and__6742__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__7390__auto__ = x == null ? null : x;
    return function() {
      var or__6754__auto__ = cljs.core._namespace[function() {
        var G__9267 = x__7390__auto__;
        return goog.typeOf(G__9267);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._namespace["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj9269 = {};
  return obj9269;
}();
cljs.core.IReset = function() {
  var obj9271 = {};
  return obj9271;
}();
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (function() {
    var and__6742__auto__ = o;
    if (and__6742__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__7390__auto__ = o == null ? null : o;
    return function() {
      var or__6754__auto__ = cljs.core._reset_BANG_[function() {
        var G__9275 = x__7390__auto__;
        return goog.typeOf(G__9275);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj9277 = {};
  return obj9277;
}();
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_() {
  var G__9279 = arguments.length;
  switch(G__9279) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (function() {
    var and__6742__auto__ = o;
    if (and__6742__auto__) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__7390__auto__ = o == null ? null : o;
    return function() {
      var or__6754__auto__ = cljs.core._swap_BANG_[function() {
        var G__9281 = x__7390__auto__;
        return goog.typeOf(G__9281);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._swap_BANG_["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISwap.-swap!", o);
        }
      }
    }().call(null, o, f);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (function() {
    var and__6742__auto__ = o;
    if (and__6742__auto__) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__7390__auto__ = o == null ? null : o;
    return function() {
      var or__6754__auto__ = cljs.core._swap_BANG_[function() {
        var G__9283 = x__7390__auto__;
        return goog.typeOf(G__9283);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._swap_BANG_["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISwap.-swap!", o);
        }
      }
    }().call(null, o, f, a);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (function() {
    var and__6742__auto__ = o;
    if (and__6742__auto__) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__7390__auto__ = o == null ? null : o;
    return function() {
      var or__6754__auto__ = cljs.core._swap_BANG_[function() {
        var G__9285 = x__7390__auto__;
        return goog.typeOf(G__9285);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._swap_BANG_["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISwap.-swap!", o);
        }
      }
    }().call(null, o, f, a, b);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (function() {
    var and__6742__auto__ = o;
    if (and__6742__auto__) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__7390__auto__ = o == null ? null : o;
    return function() {
      var or__6754__auto__ = cljs.core._swap_BANG_[function() {
        var G__9287 = x__7390__auto__;
        return goog.typeOf(G__9287);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._swap_BANG_["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISwap.-swap!", o);
        }
      }
    }().call(null, o, f, a, b, xs);
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
  var obj9290 = {};
  return obj9290;
}();
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (function() {
    var and__6742__auto__ = o;
    if (and__6742__auto__) {
      return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__7390__auto__ = o == null ? null : o;
    return function() {
      var or__6754__auto__ = cljs.core._vreset_BANG_[function() {
        var G__9294 = x__7390__auto__;
        return goog.typeOf(G__9294);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._vreset_BANG_["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.IIterable = function() {
  var obj9296 = {};
  return obj9296;
}();
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (function() {
    var and__6742__auto__ = coll;
    if (and__6742__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__7390__auto__ = coll == null ? null : coll;
    return function() {
      var or__6754__auto__ = cljs.core._iterator[function() {
        var G__9300 = x__7390__auto__;
        return goog.typeOf(G__9300);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._iterator["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return [cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(function() {
  var G__9303 = 4294967295;
  var G__9304 = 5;
  return Math.imul(G__9303, G__9304);
}() === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var G__9307 = a;
    var G__9308 = b;
    return Math.imul(G__9307, G__9308);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__9309 = i + 2;
        var G__9310 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__9309;
        h1 = G__9310;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj9312 = {};
  return obj9312;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__9313 = i + 1;
          var G__9314 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__9313;
          hash = G__9314;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj9318 = {};
      return obj9318;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (function() {
    var G__9321 = o;
    if (G__9321) {
      var bit__7421__auto__ = G__9321.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__7421__auto__ || G__9321.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return function() {
        var G__9322 = o;
        return Math.floor(G__9322);
      }() % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__6742__auto__ = cljs.core.not(a.ns);
      if (and__6742__auto__) {
        return b.ns;
      } else {
        return and__6742__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__9329 = a.ns;
            var G__9330 = b.ns;
            return goog.array.defaultCompare(G__9329, G__9330);
          }();
          if (0 === nsc) {
            var G__9331 = a.name;
            var G__9332 = b.name;
            return goog.array.defaultCompare(G__9331, G__9332);
          } else {
            return nsc;
          }
        }
      } else {
        var G__9333 = a.name;
        var G__9334 = b.name;
        return goog.array.defaultCompare(G__9333, G__9334);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__9336 = null;
  var G__9336__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
  };
  var G__9336__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__9336 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9336__2.call(this, self__, coll);
      case 3:
        return G__9336__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9336.cljs$core$IFn$_invoke$arity$2 = G__9336__2;
  G__9336.cljs$core$IFn$_invoke$arity$3 = G__9336__3;
  return G__9336;
}();
cljs.core.Symbol.prototype.apply = function(self__, args9335) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9335)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__7170__auto__ = self__._hash;
  if (!(h__7170__auto__ == null)) {
    return h__7170__auto__;
  } else {
    var h__7170__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__7170__auto____$1;
    return h__7170__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function cljs$core$symbol() {
  var G__9338 = arguments.length;
  switch(G__9338) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Symbol) {
    return name;
  } else {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 163841;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.call = function() {
  var G__9385 = null;
  var G__9385__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null);
  };
  var G__9385__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a);
  };
  var G__9385__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b);
  };
  var G__9385__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c);
  };
  var G__9385__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d);
  };
  var G__9385__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e);
  };
  var G__9385__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f);
  };
  var G__9385__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g);
  };
  var G__9385__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h);
  };
  var G__9385__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__9385__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__9385__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__9385__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__9385__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__9385__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__9385__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__9385__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__9385__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__9385__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__9385__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__9385__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__9385__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__9341 = function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }();
    var G__9342 = a;
    var G__9343 = b;
    var G__9344 = c;
    var G__9345 = d;
    var G__9346 = e;
    var G__9347 = f;
    var G__9348 = g;
    var G__9349 = h;
    var G__9350 = i;
    var G__9351 = j;
    var G__9352 = k;
    var G__9353 = l;
    var G__9354 = m;
    var G__9355 = n;
    var G__9356 = o;
    var G__9357 = p;
    var G__9358 = q;
    var G__9359 = r;
    var G__9360 = s;
    var G__9361 = t;
    var G__9362 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__9341, G__9342, G__9343, G__9344, G__9345, G__9346, G__9347, G__9348, G__9349, G__9350, G__9351, G__9352, G__9353, G__9354, G__9355, G__9356, G__9357, G__9358, G__9359, G__9360, G__9361, G__9362) : cljs.core.apply.call(null, G__9341, G__9342, G__9343, G__9344, G__9345, G__9346, G__9347, G__9348, G__9349, G__9350, G__9351, G__9352, G__9353, G__9354, G__9355, G__9356, G__9357, G__9358, G__9359, 
    G__9360, G__9361, G__9362);
  };
  G__9385 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__9385__1.call(this, self__);
      case 2:
        return G__9385__2.call(this, self__, a);
      case 3:
        return G__9385__3.call(this, self__, a, b);
      case 4:
        return G__9385__4.call(this, self__, a, b, c);
      case 5:
        return G__9385__5.call(this, self__, a, b, c, d);
      case 6:
        return G__9385__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__9385__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__9385__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__9385__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__9385__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__9385__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__9385__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__9385__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__9385__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__9385__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__9385__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__9385__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__9385__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__9385__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__9385__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__9385__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__9385__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9385.cljs$core$IFn$_invoke$arity$1 = G__9385__1;
  G__9385.cljs$core$IFn$_invoke$arity$2 = G__9385__2;
  G__9385.cljs$core$IFn$_invoke$arity$3 = G__9385__3;
  G__9385.cljs$core$IFn$_invoke$arity$4 = G__9385__4;
  G__9385.cljs$core$IFn$_invoke$arity$5 = G__9385__5;
  G__9385.cljs$core$IFn$_invoke$arity$6 = G__9385__6;
  G__9385.cljs$core$IFn$_invoke$arity$7 = G__9385__7;
  G__9385.cljs$core$IFn$_invoke$arity$8 = G__9385__8;
  G__9385.cljs$core$IFn$_invoke$arity$9 = G__9385__9;
  G__9385.cljs$core$IFn$_invoke$arity$10 = G__9385__10;
  G__9385.cljs$core$IFn$_invoke$arity$11 = G__9385__11;
  G__9385.cljs$core$IFn$_invoke$arity$12 = G__9385__12;
  G__9385.cljs$core$IFn$_invoke$arity$13 = G__9385__13;
  G__9385.cljs$core$IFn$_invoke$arity$14 = G__9385__14;
  G__9385.cljs$core$IFn$_invoke$arity$15 = G__9385__15;
  G__9385.cljs$core$IFn$_invoke$arity$16 = G__9385__16;
  G__9385.cljs$core$IFn$_invoke$arity$17 = G__9385__17;
  G__9385.cljs$core$IFn$_invoke$arity$18 = G__9385__18;
  G__9385.cljs$core$IFn$_invoke$arity$19 = G__9385__19;
  G__9385.cljs$core$IFn$_invoke$arity$20 = G__9385__20;
  G__9385.cljs$core$IFn$_invoke$arity$21 = G__9385__21;
  G__9385.cljs$core$IFn$_invoke$arity$22 = G__9385__22;
  return G__9385;
}();
cljs.core.Var.prototype.apply = function(self__, args9340) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9340)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__9363 = function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }();
  var G__9364 = a;
  var G__9365 = b;
  var G__9366 = c;
  var G__9367 = d;
  var G__9368 = e;
  var G__9369 = f;
  var G__9370 = g;
  var G__9371 = h;
  var G__9372 = i;
  var G__9373 = j;
  var G__9374 = k;
  var G__9375 = l;
  var G__9376 = m;
  var G__9377 = n;
  var G__9378 = o;
  var G__9379 = p;
  var G__9380 = q;
  var G__9381 = r;
  var G__9382 = s;
  var G__9383 = t;
  var G__9384 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__9363, G__9364, G__9365, G__9366, G__9367, G__9368, G__9369, G__9370, G__9371, G__9372, G__9373, G__9374, G__9375, G__9376, G__9377, G__9378, G__9379, G__9380, G__9381, G__9382, G__9383, G__9384) : cljs.core.apply.call(null, G__9363, G__9364, G__9365, G__9366, G__9367, G__9368, G__9369, G__9370, G__9371, G__9372, G__9373, G__9374, G__9375, G__9376, G__9377, G__9378, G__9379, G__9380, G__9381, 
  G__9382, G__9383, G__9384);
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  var G__9387 = x;
  if (G__9387) {
    var bit__7428__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__6754__auto__ = bit__7428__auto__;
      if (cljs.core.truth_(or__6754__auto__)) {
        return or__6754__auto__;
      } else {
        return G__9387.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__9387.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__9387);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__9387);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  var G__9389 = value;
  if (G__9389) {
    var bit__7428__auto__ = G__9389.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__7428__auto__ || G__9389.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__9389.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__9389);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__9389);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__9391 = coll;
      if (G__9391) {
        var bit__7421__auto__ = G__9391.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__7421__auto__ || G__9391.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__9393 = coll;
      if (G__9393) {
        var bit__7421__auto__ = G__9393.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__7421__auto__ || G__9393.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__9395 = coll;
      if (G__9395) {
        var bit__7421__auto__ = G__9395.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__7421__auto__ || G__9395.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__9397 = coll;
      if (G__9397) {
        var bit__7421__auto__ = G__9397.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__7421__auto__ || G__9397.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_() {
  var G__9402 = arguments.length;
  switch(G__9402) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__9404 = y;
        var G__9405 = cljs.core.first(more);
        var G__9406 = cljs.core.next(more);
        x = G__9404;
        y = G__9405;
        more = G__9406;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq9398) {
  var G__9399 = cljs.core.first(seq9398);
  var seq9398__$1 = cljs.core.next(seq9398);
  var G__9400 = cljs.core.first(seq9398__$1);
  var seq9398__$2 = cljs.core.next(seq9398__$1);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(G__9399, G__9400, seq9398__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null)], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = function() {
      var G__9407 = self__.iter;
      return cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__9407) : cljs.core.es6_iterator_seq.call(null, G__9407);
    }();
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null)], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__9408 = n + 1;
      var G__9409 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__9410 = cljs.core.next(coll__$1);
      n = G__9408;
      hash_code = G__9409;
      coll__$1 = G__9410;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__9411 = n + 1;
      var G__9412 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__9413 = cljs.core.next(coll__$1);
      n = G__9411;
      hash_code = G__9412;
      coll__$1 = G__9413;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = true;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    var G__9414 = this$__$1.valueOf();
    var G__9415 = other.valueOf();
    return goog.array.defaultCompare(G__9414, G__9415);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.Fn["function"] = true;
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  var G__9416 = o;
  return goog.getUid(G__9416);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    var G__9418 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9418) : cljs.core.deref.call(null, G__9418);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce() {
  var G__9420 = arguments.length;
  switch(G__9420) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__9421 = val;
          var G__9422 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9421, G__9422) : f.call(null, G__9421, G__9422);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__9428 = nval;
          var G__9429 = n + 1;
          val = G__9428;
          n = G__9429;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__9423 = val__$1;
        var G__9424 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9423, G__9424) : f.call(null, G__9423, G__9424);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__9430 = nval;
        var G__9431 = n + 1;
        val__$1 = G__9430;
        n = G__9431;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__9425 = val__$1;
        var G__9426 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9425, G__9426) : f.call(null, G__9425, G__9426);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__9432 = nval;
        var G__9433 = n + 1;
        val__$1 = G__9432;
        n = G__9433;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce() {
  var G__9435 = arguments.length;
  switch(G__9435) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__9436 = val;
          var G__9437 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9436, G__9437) : f.call(null, G__9436, G__9437);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__9443 = nval;
          var G__9444 = n + 1;
          val = G__9443;
          n = G__9444;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__9438 = val__$1;
        var G__9439 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9438, G__9439) : f.call(null, G__9438, G__9439);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__9445 = nval;
        var G__9446 = n + 1;
        val__$1 = G__9445;
        n = G__9446;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__9440 = val__$1;
        var G__9441 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9440, G__9441) : f.call(null, G__9440, G__9441);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__9447 = nval;
        var G__9448 = n + 1;
        val__$1 = G__9447;
        n = G__9448;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  var G__9450 = x;
  if (G__9450) {
    var bit__7428__auto__ = G__9450.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__7428__auto__ || G__9450.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__9450.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__9450);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__9450);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  var G__9452 = x;
  if (G__9452) {
    var bit__7428__auto__ = G__9452.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__7428__auto__ || G__9452.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__9452.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__9452);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__9452);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__7066__auto__ = 0;
  var y__7067__auto__ = self__.arr.length - self__.i;
  return x__7066__auto__ > y__7067__auto__ ? x__7066__auto__ : y__7067__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__9453 = coll__$1;
  var G__9454 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__9453, G__9454) : cljs.core.equiv_sequential.call(null, G__9453, G__9454);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__9455 = o;
  var G__9456 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__9455, G__9456) : cljs.core.cons.call(null, G__9455, G__9456);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7730__auto__ = this;
  return cljs.core.es6_iterator(this__7730__auto__);
};
cljs.core.prim_seq = function cljs$core$prim_seq() {
  var G__9458 = arguments.length;
  switch(G__9458) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq() {
  var G__9461 = arguments.length;
  switch(G__9461) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__9463 = coll__$1;
  var G__9464 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__9463, G__9464) : cljs.core.equiv_sequential.call(null, G__9463, G__9464);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__9465 = cljs.core.List.EMPTY;
  var G__9466 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__9465, G__9466) : cljs.core.with_meta.call(null, G__9465, G__9466);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  var G__9467 = f;
  var G__9468 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__9467, G__9468) : cljs.core.seq_reduce.call(null, G__9467, G__9468);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  var G__9469 = f;
  var G__9470 = start;
  var G__9471 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__9469, G__9470, G__9471) : cljs.core.seq_reduce.call(null, G__9469, G__9470, G__9471);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__9472 = o;
  var G__9473 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__9472, G__9473) : cljs.core.cons.call(null, G__9472, G__9473);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7730__auto__ = this;
  return cljs.core.es6_iterator(this__7730__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__9474 = sn;
      s = G__9474;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function cljs$core$conj() {
  var G__9479 = arguments.length;
  switch(G__9479) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    return cljs.core._conj(cljs.core.List.EMPTY, x);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__9481 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__9482 = cljs.core.first(xs);
      var G__9483 = cljs.core.next(xs);
      coll = G__9481;
      x = G__9482;
      xs = G__9483;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq9475) {
  var G__9476 = cljs.core.first(seq9475);
  var seq9475__$1 = cljs.core.next(seq9475);
  var G__9477 = cljs.core.first(seq9475__$1);
  var seq9475__$2 = cljs.core.next(seq9475__$1);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__9476, G__9477, seq9475__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__9484 = cljs.core.next(s);
      var G__9485 = acc + 1;
      s = G__9484;
      acc = G__9485;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__9487 = coll;
      if (G__9487) {
        var bit__7421__auto__ = G__9487.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__7421__auto__ || G__9487.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, coll)) {
            return cljs.core._count(coll);
          } else {
            return cljs.core.accumulating_seq_count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth() {
  var G__9489 = arguments.length;
  switch(G__9489) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__9491 = cljs.core.next(coll);
            var G__9492 = n - 1;
            coll = G__9491;
            n = G__9492;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__9493 = cljs.core.next(coll);
            var G__9494 = n - 1;
            var G__9495 = not_found;
            coll = G__9493;
            n = G__9494;
            not_found = G__9495;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth() {
  var G__9497 = arguments.length;
  switch(G__9497) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (function() {
        var G__9498 = coll;
        if (G__9498) {
          var bit__7421__auto__ = G__9498.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__7421__auto__ || G__9498.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
              return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (function() {
                var G__9499 = coll;
                if (G__9499) {
                  var bit__7428__auto__ = G__9499.cljs$lang$protocol_mask$partition0$ & 64;
                  if (bit__7428__auto__ || G__9499.cljs$core$ISeq$) {
                    return true;
                  } else {
                    if (!G__9499.cljs$lang$protocol_mask$partition0$) {
                      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__9499);
                    } else {
                      return false;
                    }
                  }
                } else {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__9499);
                }
              }()) {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (function() {
        var G__9500 = coll;
        if (G__9500) {
          var bit__7421__auto__ = G__9500.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__7421__auto__ || G__9500.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
              return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (function() {
                var G__9501 = coll;
                if (G__9501) {
                  var bit__7428__auto__ = G__9501.cljs$lang$protocol_mask$partition0$ & 64;
                  if (bit__7428__auto__ || G__9501.cljs$core$ISeq$) {
                    return true;
                  } else {
                    if (!G__9501.cljs$lang$protocol_mask$partition0$) {
                      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__9501);
                    } else {
                      return false;
                    }
                  }
                } else {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__9501);
                }
              }()) {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__9503 = n__$1 - 1;
      var G__9504 = cljs.core.rest(xs);
      n__$1 = G__9503;
      xs = G__9504;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get() {
  var G__9506 = arguments.length;
  switch(G__9506) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (function() {
      var G__9507 = o;
      if (G__9507) {
        var bit__7421__auto__ = G__9507.cljs$lang$protocol_mask$partition0$ & 256;
        if (bit__7421__auto__ || G__9507.cljs$core$ILookup$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k | 0];
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (function() {
      var G__9508 = o;
      if (G__9508) {
        var bit__7421__auto__ = G__9508.cljs$lang$protocol_mask$partition0$ & 256;
        if (bit__7421__auto__ || G__9508.cljs$core$ILookup$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc() {
  var G__9515 = arguments.length;
  switch(G__9515) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7805__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentHashMap.fromArrays([k], [v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__9517 = ret;
      var G__9518 = cljs.core.first(kvs);
      var G__9519 = cljs.core.second(kvs);
      var G__9520 = cljs.core.nnext(kvs);
      coll = G__9517;
      k = G__9518;
      v = G__9519;
      kvs = G__9520;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq9510) {
  var G__9511 = cljs.core.first(seq9510);
  var seq9510__$1 = cljs.core.next(seq9510);
  var G__9512 = cljs.core.first(seq9510__$1);
  var seq9510__$2 = cljs.core.next(seq9510__$1);
  var G__9513 = cljs.core.first(seq9510__$2);
  var seq9510__$3 = cljs.core.next(seq9510__$2);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__9511, G__9512, G__9513, seq9510__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc() {
  var G__9525 = arguments.length;
  switch(G__9525) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__9527 = ret;
        var G__9528 = cljs.core.first(ks);
        var G__9529 = cljs.core.next(ks);
        coll = G__9527;
        k = G__9528;
        ks = G__9529;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq9521) {
  var G__9522 = cljs.core.first(seq9521);
  var seq9521__$1 = cljs.core.next(seq9521);
  var G__9523 = cljs.core.first(seq9521__$1);
  var seq9521__$2 = cljs.core.next(seq9521__$1);
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__9522, G__9523, seq9521__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__6754__auto__ = function() {
    var G__9534 = f;
    return goog.isFunction(G__9534);
  }();
  if (cljs.core.truth_(or__6754__auto__)) {
    return or__6754__auto__;
  } else {
    var G__9535 = f;
    if (G__9535) {
      var bit__7428__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__6754__auto____$1 = bit__7428__auto__;
        if (cljs.core.truth_(or__6754__auto____$1)) {
          return or__6754__auto____$1;
        } else {
          return G__9535.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__9535.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__9535);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__9535);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.call = function() {
  var G__10001 = null;
  var G__10001__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__10001__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__9537 = a;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__9537) : self__.afn.call(null, G__9537);
  };
  var G__10001__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__9538 = a;
    var G__9539 = b;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__9538, G__9539) : self__.afn.call(null, G__9538, G__9539);
  };
  var G__10001__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__9540 = a;
    var G__9541 = b;
    var G__9542 = c;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__9540, G__9541, G__9542) : self__.afn.call(null, G__9540, G__9541, G__9542);
  };
  var G__10001__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__9543 = a;
    var G__9544 = b;
    var G__9545 = c;
    var G__9546 = d;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__9543, G__9544, G__9545, G__9546) : self__.afn.call(null, G__9543, G__9544, G__9545, G__9546);
  };
  var G__10001__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__9547 = a;
    var G__9548 = b;
    var G__9549 = c;
    var G__9550 = d;
    var G__9551 = e;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__9547, G__9548, G__9549, G__9550, G__9551) : self__.afn.call(null, G__9547, G__9548, G__9549, G__9550, G__9551);
  };
  var G__10001__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__9552 = a;
    var G__9553 = b;
    var G__9554 = c;
    var G__9555 = d;
    var G__9556 = e;
    var G__9557 = f;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__9552, G__9553, G__9554, G__9555, G__9556, G__9557) : self__.afn.call(null, G__9552, G__9553, G__9554, G__9555, G__9556, G__9557);
  };
  var G__10001__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__9558 = a;
    var G__9559 = b;
    var G__9560 = c;
    var G__9561 = d;
    var G__9562 = e;
    var G__9563 = f;
    var G__9564 = g;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__9558, G__9559, G__9560, G__9561, G__9562, G__9563, G__9564) : self__.afn.call(null, G__9558, G__9559, G__9560, G__9561, G__9562, G__9563, G__9564);
  };
  var G__10001__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__9565 = a;
    var G__9566 = b;
    var G__9567 = c;
    var G__9568 = d;
    var G__9569 = e;
    var G__9570 = f;
    var G__9571 = g;
    var G__9572 = h;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__9565, G__9566, G__9567, G__9568, G__9569, G__9570, G__9571, G__9572) : self__.afn.call(null, G__9565, G__9566, G__9567, G__9568, G__9569, G__9570, G__9571, G__9572);
  };
  var G__10001__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__9573 = a;
    var G__9574 = b;
    var G__9575 = c;
    var G__9576 = d;
    var G__9577 = e;
    var G__9578 = f;
    var G__9579 = g;
    var G__9580 = h;
    var G__9581 = i;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__9573, G__9574, G__9575, G__9576, G__9577, G__9578, G__9579, G__9580, G__9581) : self__.afn.call(null, G__9573, G__9574, G__9575, G__9576, G__9577, G__9578, G__9579, G__9580, G__9581);
  };
  var G__10001__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__9582 = a;
    var G__9583 = b;
    var G__9584 = c;
    var G__9585 = d;
    var G__9586 = e;
    var G__9587 = f;
    var G__9588 = g;
    var G__9589 = h;
    var G__9590 = i;
    var G__9591 = j;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__9582, G__9583, G__9584, G__9585, G__9586, G__9587, G__9588, G__9589, G__9590, G__9591) : self__.afn.call(null, G__9582, G__9583, G__9584, G__9585, G__9586, G__9587, G__9588, G__9589, G__9590, G__9591);
  };
  var G__10001__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__9592 = a;
    var G__9593 = b;
    var G__9594 = c;
    var G__9595 = d;
    var G__9596 = e;
    var G__9597 = f;
    var G__9598 = g;
    var G__9599 = h;
    var G__9600 = i;
    var G__9601 = j;
    var G__9602 = k;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__9592, G__9593, G__9594, G__9595, G__9596, G__9597, G__9598, G__9599, G__9600, G__9601, G__9602) : self__.afn.call(null, G__9592, G__9593, G__9594, G__9595, G__9596, G__9597, G__9598, G__9599, G__9600, G__9601, G__9602);
  };
  var G__10001__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__9603 = a;
    var G__9604 = b;
    var G__9605 = c;
    var G__9606 = d;
    var G__9607 = e;
    var G__9608 = f;
    var G__9609 = g;
    var G__9610 = h;
    var G__9611 = i;
    var G__9612 = j;
    var G__9613 = k;
    var G__9614 = l;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__9603, G__9604, G__9605, G__9606, G__9607, G__9608, G__9609, G__9610, G__9611, G__9612, G__9613, G__9614) : self__.afn.call(null, G__9603, G__9604, G__9605, G__9606, G__9607, G__9608, G__9609, G__9610, G__9611, G__9612, G__9613, G__9614);
  };
  var G__10001__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__9615 = a;
    var G__9616 = b;
    var G__9617 = c;
    var G__9618 = d;
    var G__9619 = e;
    var G__9620 = f;
    var G__9621 = g;
    var G__9622 = h;
    var G__9623 = i;
    var G__9624 = j;
    var G__9625 = k;
    var G__9626 = l;
    var G__9627 = m;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__9615, G__9616, G__9617, G__9618, G__9619, G__9620, G__9621, G__9622, G__9623, G__9624, G__9625, G__9626, G__9627) : self__.afn.call(null, G__9615, G__9616, G__9617, G__9618, G__9619, G__9620, G__9621, G__9622, G__9623, G__9624, G__9625, G__9626, G__9627);
  };
  var G__10001__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__9628 = a;
    var G__9629 = b;
    var G__9630 = c;
    var G__9631 = d;
    var G__9632 = e;
    var G__9633 = f;
    var G__9634 = g;
    var G__9635 = h;
    var G__9636 = i;
    var G__9637 = j;
    var G__9638 = k;
    var G__9639 = l;
    var G__9640 = m;
    var G__9641 = n;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__9628, G__9629, G__9630, G__9631, G__9632, G__9633, G__9634, G__9635, G__9636, G__9637, G__9638, G__9639, G__9640, G__9641) : self__.afn.call(null, G__9628, G__9629, G__9630, G__9631, G__9632, G__9633, G__9634, G__9635, G__9636, G__9637, G__9638, G__9639, G__9640, G__9641);
  };
  var G__10001__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__9642 = a;
    var G__9643 = b;
    var G__9644 = c;
    var G__9645 = d;
    var G__9646 = e;
    var G__9647 = f;
    var G__9648 = g;
    var G__9649 = h;
    var G__9650 = i;
    var G__9651 = j;
    var G__9652 = k;
    var G__9653 = l;
    var G__9654 = m;
    var G__9655 = n;
    var G__9656 = o;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__9642, G__9643, G__9644, G__9645, G__9646, G__9647, G__9648, G__9649, G__9650, G__9651, G__9652, G__9653, G__9654, G__9655, G__9656) : self__.afn.call(null, G__9642, G__9643, G__9644, G__9645, G__9646, G__9647, G__9648, G__9649, G__9650, G__9651, G__9652, G__9653, G__9654, G__9655, G__9656);
  };
  var G__10001__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__9657 = a;
    var G__9658 = b;
    var G__9659 = c;
    var G__9660 = d;
    var G__9661 = e;
    var G__9662 = f;
    var G__9663 = g;
    var G__9664 = h;
    var G__9665 = i;
    var G__9666 = j;
    var G__9667 = k;
    var G__9668 = l;
    var G__9669 = m;
    var G__9670 = n;
    var G__9671 = o;
    var G__9672 = p;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__9657, G__9658, G__9659, G__9660, G__9661, G__9662, G__9663, G__9664, G__9665, G__9666, G__9667, G__9668, G__9669, G__9670, G__9671, G__9672) : self__.afn.call(null, G__9657, G__9658, G__9659, G__9660, G__9661, G__9662, G__9663, G__9664, G__9665, G__9666, G__9667, G__9668, G__9669, G__9670, G__9671, G__9672);
  };
  var G__10001__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__9673 = a;
    var G__9674 = b;
    var G__9675 = c;
    var G__9676 = d;
    var G__9677 = e;
    var G__9678 = f;
    var G__9679 = g;
    var G__9680 = h;
    var G__9681 = i;
    var G__9682 = j;
    var G__9683 = k;
    var G__9684 = l;
    var G__9685 = m;
    var G__9686 = n;
    var G__9687 = o;
    var G__9688 = p;
    var G__9689 = q;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__9673, G__9674, G__9675, G__9676, G__9677, G__9678, G__9679, G__9680, G__9681, G__9682, G__9683, G__9684, G__9685, G__9686, G__9687, G__9688, G__9689) : self__.afn.call(null, G__9673, G__9674, G__9675, G__9676, G__9677, G__9678, G__9679, G__9680, G__9681, G__9682, G__9683, G__9684, G__9685, G__9686, G__9687, G__9688, G__9689);
  };
  var G__10001__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__9690 = a;
    var G__9691 = b;
    var G__9692 = c;
    var G__9693 = d;
    var G__9694 = e;
    var G__9695 = f;
    var G__9696 = g;
    var G__9697 = h;
    var G__9698 = i;
    var G__9699 = j;
    var G__9700 = k;
    var G__9701 = l;
    var G__9702 = m;
    var G__9703 = n;
    var G__9704 = o;
    var G__9705 = p;
    var G__9706 = q;
    var G__9707 = r;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__9690, G__9691, G__9692, G__9693, G__9694, G__9695, G__9696, G__9697, G__9698, G__9699, G__9700, G__9701, G__9702, G__9703, G__9704, G__9705, G__9706, G__9707) : self__.afn.call(null, G__9690, G__9691, G__9692, G__9693, G__9694, G__9695, G__9696, G__9697, G__9698, G__9699, G__9700, G__9701, G__9702, G__9703, G__9704, G__9705, G__9706, G__9707);
  };
  var G__10001__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__9708 = a;
    var G__9709 = b;
    var G__9710 = c;
    var G__9711 = d;
    var G__9712 = e;
    var G__9713 = f;
    var G__9714 = g;
    var G__9715 = h;
    var G__9716 = i;
    var G__9717 = j;
    var G__9718 = k;
    var G__9719 = l;
    var G__9720 = m;
    var G__9721 = n;
    var G__9722 = o;
    var G__9723 = p;
    var G__9724 = q;
    var G__9725 = r;
    var G__9726 = s;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__9708, G__9709, G__9710, G__9711, G__9712, G__9713, G__9714, G__9715, G__9716, G__9717, G__9718, G__9719, G__9720, G__9721, G__9722, G__9723, G__9724, G__9725, G__9726) : self__.afn.call(null, G__9708, G__9709, G__9710, G__9711, G__9712, G__9713, G__9714, G__9715, G__9716, G__9717, G__9718, G__9719, G__9720, G__9721, G__9722, G__9723, G__9724, G__9725, G__9726);
  };
  var G__10001__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__9727 = a;
    var G__9728 = b;
    var G__9729 = c;
    var G__9730 = d;
    var G__9731 = e;
    var G__9732 = f;
    var G__9733 = g;
    var G__9734 = h;
    var G__9735 = i;
    var G__9736 = j;
    var G__9737 = k;
    var G__9738 = l;
    var G__9739 = m;
    var G__9740 = n;
    var G__9741 = o;
    var G__9742 = p;
    var G__9743 = q;
    var G__9744 = r;
    var G__9745 = s;
    var G__9746 = t;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__9727, G__9728, G__9729, G__9730, G__9731, G__9732, G__9733, G__9734, G__9735, G__9736, G__9737, G__9738, G__9739, G__9740, G__9741, G__9742, G__9743, G__9744, G__9745, G__9746) : self__.afn.call(null, G__9727, G__9728, G__9729, G__9730, G__9731, G__9732, G__9733, G__9734, G__9735, G__9736, G__9737, G__9738, G__9739, G__9740, G__9741, G__9742, G__9743, G__9744, G__9745, G__9746);
  };
  var G__10001__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__9747 = self__.afn;
    var G__9748 = a;
    var G__9749 = b;
    var G__9750 = c;
    var G__9751 = d;
    var G__9752 = e;
    var G__9753 = f;
    var G__9754 = g;
    var G__9755 = h;
    var G__9756 = i;
    var G__9757 = j;
    var G__9758 = k;
    var G__9759 = l;
    var G__9760 = m;
    var G__9761 = n;
    var G__9762 = o;
    var G__9763 = p;
    var G__9764 = q;
    var G__9765 = r;
    var G__9766 = s;
    var G__9767 = t;
    var G__9768 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__9747, G__9748, G__9749, G__9750, G__9751, G__9752, G__9753, G__9754, G__9755, G__9756, G__9757, G__9758, G__9759, G__9760, G__9761, G__9762, G__9763, G__9764, G__9765, G__9766, G__9767, G__9768) : cljs.core.apply.call(null, G__9747, G__9748, G__9749, G__9750, G__9751, G__9752, G__9753, G__9754, G__9755, G__9756, G__9757, G__9758, G__9759, G__9760, G__9761, G__9762, G__9763, G__9764, G__9765, 
    G__9766, G__9767, G__9768);
  };
  G__10001 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__10001__1.call(this, self__);
      case 2:
        return G__10001__2.call(this, self__, a);
      case 3:
        return G__10001__3.call(this, self__, a, b);
      case 4:
        return G__10001__4.call(this, self__, a, b, c);
      case 5:
        return G__10001__5.call(this, self__, a, b, c, d);
      case 6:
        return G__10001__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__10001__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__10001__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__10001__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__10001__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__10001__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__10001__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__10001__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__10001__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__10001__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__10001__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__10001__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__10001__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__10001__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__10001__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__10001__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__10001__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10001.cljs$core$IFn$_invoke$arity$1 = G__10001__1;
  G__10001.cljs$core$IFn$_invoke$arity$2 = G__10001__2;
  G__10001.cljs$core$IFn$_invoke$arity$3 = G__10001__3;
  G__10001.cljs$core$IFn$_invoke$arity$4 = G__10001__4;
  G__10001.cljs$core$IFn$_invoke$arity$5 = G__10001__5;
  G__10001.cljs$core$IFn$_invoke$arity$6 = G__10001__6;
  G__10001.cljs$core$IFn$_invoke$arity$7 = G__10001__7;
  G__10001.cljs$core$IFn$_invoke$arity$8 = G__10001__8;
  G__10001.cljs$core$IFn$_invoke$arity$9 = G__10001__9;
  G__10001.cljs$core$IFn$_invoke$arity$10 = G__10001__10;
  G__10001.cljs$core$IFn$_invoke$arity$11 = G__10001__11;
  G__10001.cljs$core$IFn$_invoke$arity$12 = G__10001__12;
  G__10001.cljs$core$IFn$_invoke$arity$13 = G__10001__13;
  G__10001.cljs$core$IFn$_invoke$arity$14 = G__10001__14;
  G__10001.cljs$core$IFn$_invoke$arity$15 = G__10001__15;
  G__10001.cljs$core$IFn$_invoke$arity$16 = G__10001__16;
  G__10001.cljs$core$IFn$_invoke$arity$17 = G__10001__17;
  G__10001.cljs$core$IFn$_invoke$arity$18 = G__10001__18;
  G__10001.cljs$core$IFn$_invoke$arity$19 = G__10001__19;
  G__10001.cljs$core$IFn$_invoke$arity$20 = G__10001__20;
  G__10001.cljs$core$IFn$_invoke$arity$21 = G__10001__21;
  G__10001.cljs$core$IFn$_invoke$arity$22 = G__10001__22;
  return G__10001;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args9536) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9536)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var G__9769 = a;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__9769) : self__.afn.call(null, G__9769);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var G__9770 = a;
  var G__9771 = b;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__9770, G__9771) : self__.afn.call(null, G__9770, G__9771);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var G__9772 = a;
  var G__9773 = b;
  var G__9774 = c;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__9772, G__9773, G__9774) : self__.afn.call(null, G__9772, G__9773, G__9774);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var G__9775 = a;
  var G__9776 = b;
  var G__9777 = c;
  var G__9778 = d;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__9775, G__9776, G__9777, G__9778) : self__.afn.call(null, G__9775, G__9776, G__9777, G__9778);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var G__9779 = a;
  var G__9780 = b;
  var G__9781 = c;
  var G__9782 = d;
  var G__9783 = e;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__9779, G__9780, G__9781, G__9782, G__9783) : self__.afn.call(null, G__9779, G__9780, G__9781, G__9782, G__9783);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var G__9784 = a;
  var G__9785 = b;
  var G__9786 = c;
  var G__9787 = d;
  var G__9788 = e;
  var G__9789 = f;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__9784, G__9785, G__9786, G__9787, G__9788, G__9789) : self__.afn.call(null, G__9784, G__9785, G__9786, G__9787, G__9788, G__9789);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var G__9790 = a;
  var G__9791 = b;
  var G__9792 = c;
  var G__9793 = d;
  var G__9794 = e;
  var G__9795 = f;
  var G__9796 = g;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__9790, G__9791, G__9792, G__9793, G__9794, G__9795, G__9796) : self__.afn.call(null, G__9790, G__9791, G__9792, G__9793, G__9794, G__9795, G__9796);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var G__9797 = a;
  var G__9798 = b;
  var G__9799 = c;
  var G__9800 = d;
  var G__9801 = e;
  var G__9802 = f;
  var G__9803 = g;
  var G__9804 = h;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__9797, G__9798, G__9799, G__9800, G__9801, G__9802, G__9803, G__9804) : self__.afn.call(null, G__9797, G__9798, G__9799, G__9800, G__9801, G__9802, G__9803, G__9804);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var G__9805 = a;
  var G__9806 = b;
  var G__9807 = c;
  var G__9808 = d;
  var G__9809 = e;
  var G__9810 = f;
  var G__9811 = g;
  var G__9812 = h;
  var G__9813 = i;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__9805, G__9806, G__9807, G__9808, G__9809, G__9810, G__9811, G__9812, G__9813) : self__.afn.call(null, G__9805, G__9806, G__9807, G__9808, G__9809, G__9810, G__9811, G__9812, G__9813);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var G__9814 = a;
  var G__9815 = b;
  var G__9816 = c;
  var G__9817 = d;
  var G__9818 = e;
  var G__9819 = f;
  var G__9820 = g;
  var G__9821 = h;
  var G__9822 = i;
  var G__9823 = j;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__9814, G__9815, G__9816, G__9817, G__9818, G__9819, G__9820, G__9821, G__9822, G__9823) : self__.afn.call(null, G__9814, G__9815, G__9816, G__9817, G__9818, G__9819, G__9820, G__9821, G__9822, G__9823);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var G__9824 = a;
  var G__9825 = b;
  var G__9826 = c;
  var G__9827 = d;
  var G__9828 = e;
  var G__9829 = f;
  var G__9830 = g;
  var G__9831 = h;
  var G__9832 = i;
  var G__9833 = j;
  var G__9834 = k;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__9824, G__9825, G__9826, G__9827, G__9828, G__9829, G__9830, G__9831, G__9832, G__9833, G__9834) : self__.afn.call(null, G__9824, G__9825, G__9826, G__9827, G__9828, G__9829, G__9830, G__9831, G__9832, G__9833, G__9834);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var G__9835 = a;
  var G__9836 = b;
  var G__9837 = c;
  var G__9838 = d;
  var G__9839 = e;
  var G__9840 = f;
  var G__9841 = g;
  var G__9842 = h;
  var G__9843 = i;
  var G__9844 = j;
  var G__9845 = k;
  var G__9846 = l;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__9835, G__9836, G__9837, G__9838, G__9839, G__9840, G__9841, G__9842, G__9843, G__9844, G__9845, G__9846) : self__.afn.call(null, G__9835, G__9836, G__9837, G__9838, G__9839, G__9840, G__9841, G__9842, G__9843, G__9844, G__9845, G__9846);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var G__9847 = a;
  var G__9848 = b;
  var G__9849 = c;
  var G__9850 = d;
  var G__9851 = e;
  var G__9852 = f;
  var G__9853 = g;
  var G__9854 = h;
  var G__9855 = i;
  var G__9856 = j;
  var G__9857 = k;
  var G__9858 = l;
  var G__9859 = m;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__9847, G__9848, G__9849, G__9850, G__9851, G__9852, G__9853, G__9854, G__9855, G__9856, G__9857, G__9858, G__9859) : self__.afn.call(null, G__9847, G__9848, G__9849, G__9850, G__9851, G__9852, G__9853, G__9854, G__9855, G__9856, G__9857, G__9858, G__9859);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var G__9860 = a;
  var G__9861 = b;
  var G__9862 = c;
  var G__9863 = d;
  var G__9864 = e;
  var G__9865 = f;
  var G__9866 = g;
  var G__9867 = h;
  var G__9868 = i;
  var G__9869 = j;
  var G__9870 = k;
  var G__9871 = l;
  var G__9872 = m;
  var G__9873 = n;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__9860, G__9861, G__9862, G__9863, G__9864, G__9865, G__9866, G__9867, G__9868, G__9869, G__9870, G__9871, G__9872, G__9873) : self__.afn.call(null, G__9860, G__9861, G__9862, G__9863, G__9864, G__9865, G__9866, G__9867, G__9868, G__9869, G__9870, G__9871, G__9872, G__9873);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var G__9874 = a;
  var G__9875 = b;
  var G__9876 = c;
  var G__9877 = d;
  var G__9878 = e;
  var G__9879 = f;
  var G__9880 = g;
  var G__9881 = h;
  var G__9882 = i;
  var G__9883 = j;
  var G__9884 = k;
  var G__9885 = l;
  var G__9886 = m;
  var G__9887 = n;
  var G__9888 = o;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__9874, G__9875, G__9876, G__9877, G__9878, G__9879, G__9880, G__9881, G__9882, G__9883, G__9884, G__9885, G__9886, G__9887, G__9888) : self__.afn.call(null, G__9874, G__9875, G__9876, G__9877, G__9878, G__9879, G__9880, G__9881, G__9882, G__9883, G__9884, G__9885, G__9886, G__9887, G__9888);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var G__9889 = a;
  var G__9890 = b;
  var G__9891 = c;
  var G__9892 = d;
  var G__9893 = e;
  var G__9894 = f;
  var G__9895 = g;
  var G__9896 = h;
  var G__9897 = i;
  var G__9898 = j;
  var G__9899 = k;
  var G__9900 = l;
  var G__9901 = m;
  var G__9902 = n;
  var G__9903 = o;
  var G__9904 = p;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__9889, G__9890, G__9891, G__9892, G__9893, G__9894, G__9895, G__9896, G__9897, G__9898, G__9899, G__9900, G__9901, G__9902, G__9903, G__9904) : self__.afn.call(null, G__9889, G__9890, G__9891, G__9892, G__9893, G__9894, G__9895, G__9896, G__9897, G__9898, G__9899, G__9900, G__9901, G__9902, G__9903, G__9904);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var G__9905 = a;
  var G__9906 = b;
  var G__9907 = c;
  var G__9908 = d;
  var G__9909 = e;
  var G__9910 = f;
  var G__9911 = g;
  var G__9912 = h;
  var G__9913 = i;
  var G__9914 = j;
  var G__9915 = k;
  var G__9916 = l;
  var G__9917 = m;
  var G__9918 = n;
  var G__9919 = o;
  var G__9920 = p;
  var G__9921 = q;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__9905, G__9906, G__9907, G__9908, G__9909, G__9910, G__9911, G__9912, G__9913, G__9914, G__9915, G__9916, G__9917, G__9918, G__9919, G__9920, G__9921) : self__.afn.call(null, G__9905, G__9906, G__9907, G__9908, G__9909, G__9910, G__9911, G__9912, G__9913, G__9914, G__9915, G__9916, G__9917, G__9918, G__9919, G__9920, G__9921);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var G__9922 = a;
  var G__9923 = b;
  var G__9924 = c;
  var G__9925 = d;
  var G__9926 = e;
  var G__9927 = f;
  var G__9928 = g;
  var G__9929 = h;
  var G__9930 = i;
  var G__9931 = j;
  var G__9932 = k;
  var G__9933 = l;
  var G__9934 = m;
  var G__9935 = n;
  var G__9936 = o;
  var G__9937 = p;
  var G__9938 = q;
  var G__9939 = r;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__9922, G__9923, G__9924, G__9925, G__9926, G__9927, G__9928, G__9929, G__9930, G__9931, G__9932, G__9933, G__9934, G__9935, G__9936, G__9937, G__9938, G__9939) : self__.afn.call(null, G__9922, G__9923, G__9924, G__9925, G__9926, G__9927, G__9928, G__9929, G__9930, G__9931, G__9932, G__9933, G__9934, G__9935, G__9936, G__9937, G__9938, G__9939);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var G__9940 = a;
  var G__9941 = b;
  var G__9942 = c;
  var G__9943 = d;
  var G__9944 = e;
  var G__9945 = f;
  var G__9946 = g;
  var G__9947 = h;
  var G__9948 = i;
  var G__9949 = j;
  var G__9950 = k;
  var G__9951 = l;
  var G__9952 = m;
  var G__9953 = n;
  var G__9954 = o;
  var G__9955 = p;
  var G__9956 = q;
  var G__9957 = r;
  var G__9958 = s;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__9940, G__9941, G__9942, G__9943, G__9944, G__9945, G__9946, G__9947, G__9948, G__9949, G__9950, G__9951, G__9952, G__9953, G__9954, G__9955, G__9956, G__9957, G__9958) : self__.afn.call(null, G__9940, G__9941, G__9942, G__9943, G__9944, G__9945, G__9946, G__9947, G__9948, G__9949, G__9950, G__9951, G__9952, G__9953, G__9954, G__9955, G__9956, G__9957, G__9958);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var G__9959 = a;
  var G__9960 = b;
  var G__9961 = c;
  var G__9962 = d;
  var G__9963 = e;
  var G__9964 = f;
  var G__9965 = g;
  var G__9966 = h;
  var G__9967 = i;
  var G__9968 = j;
  var G__9969 = k;
  var G__9970 = l;
  var G__9971 = m;
  var G__9972 = n;
  var G__9973 = o;
  var G__9974 = p;
  var G__9975 = q;
  var G__9976 = r;
  var G__9977 = s;
  var G__9978 = t;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__9959, G__9960, G__9961, G__9962, G__9963, G__9964, G__9965, G__9966, G__9967, G__9968, G__9969, G__9970, G__9971, G__9972, G__9973, G__9974, G__9975, G__9976, G__9977, G__9978) : self__.afn.call(null, G__9959, G__9960, G__9961, G__9962, G__9963, G__9964, G__9965, G__9966, G__9967, G__9968, G__9969, G__9970, G__9971, G__9972, G__9973, G__9974, G__9975, G__9976, G__9977, G__9978);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__9979 = self__.afn;
  var G__9980 = a;
  var G__9981 = b;
  var G__9982 = c;
  var G__9983 = d;
  var G__9984 = e;
  var G__9985 = f;
  var G__9986 = g;
  var G__9987 = h;
  var G__9988 = i;
  var G__9989 = j;
  var G__9990 = k;
  var G__9991 = l;
  var G__9992 = m;
  var G__9993 = n;
  var G__9994 = o;
  var G__9995 = p;
  var G__9996 = q;
  var G__9997 = r;
  var G__9998 = s;
  var G__9999 = t;
  var G__10000 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__9979, G__9980, G__9981, G__9982, G__9983, G__9984, G__9985, G__9986, G__9987, G__9988, G__9989, G__9990, G__9991, G__9992, G__9993, G__9994, G__9995, G__9996, G__9997, G__9998, G__9999, G__10000) : cljs.core.apply.call(null, G__9979, G__9980, G__9981, G__9982, G__9983, G__9984, G__9985, G__9986, G__9987, G__9988, G__9989, G__9990, G__9991, G__9992, G__9993, G__9994, G__9995, G__9996, G__9997, 
  G__9998, G__9999, G__10000);
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (cljs.core.fn_QMARK_(o) && !function() {
    var G__10005 = o;
    if (G__10005) {
      var bit__7428__auto__ = G__10005.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__7428__auto__ || G__10005.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__10005.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__10005);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__10005);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__6742__auto__ = !(o == null);
    if (and__6742__auto__) {
      var G__10009 = o;
      if (G__10009) {
        var bit__7428__auto__ = G__10009.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__7428__auto__ || G__10009.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__10009.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__10009);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__10009);
      }
    } else {
      return and__6742__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj() {
  var G__10014 = arguments.length;
  switch(G__10014) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__10016 = ret;
        var G__10017 = cljs.core.first(ks);
        var G__10018 = cljs.core.next(ks);
        coll = G__10016;
        k = G__10017;
        ks = G__10018;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq10010) {
  var G__10011 = cljs.core.first(seq10010);
  var seq10010__$1 = cljs.core.next(seq10010);
  var G__10012 = cljs.core.first(seq10010__$1);
  var seq10010__$2 = cljs.core.next(seq10010__$1);
  return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(G__10011, G__10012, seq10010__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__10020 = x;
    if (G__10020) {
      var bit__7428__auto__ = G__10020.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__7428__auto__ || G__10020.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__10020.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__10020);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__10020);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__10022 = x;
    if (G__10022) {
      var bit__7428__auto__ = G__10022.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__7428__auto__ || G__10022.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__10022.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__10022);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__10022);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  var G__10024 = x;
  if (G__10024) {
    var bit__7428__auto__ = G__10024.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__7428__auto__ || G__10024.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__10024.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__10024);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__10024);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  var G__10026 = x;
  if (G__10026) {
    var bit__7428__auto__ = G__10026.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__7428__auto__ || G__10026.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__10026.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__10026);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__10026);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  var G__10028 = x;
  if (G__10028) {
    var bit__7428__auto__ = G__10028.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__7428__auto__ || G__10028.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__10028.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__10028);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__10028);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  var G__10030 = x;
  if (G__10030) {
    var bit__7428__auto__ = G__10030.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__7428__auto__ || G__10030.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__10030.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__10030);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__10030);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__10032 = x;
    if (G__10032) {
      var bit__7428__auto__ = G__10032.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__7428__auto__ || G__10032.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__10032.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__10032);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__10032);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  var G__10034 = x;
  if (G__10034) {
    var bit__7428__auto__ = G__10034.cljs$lang$protocol_mask$partition0$ & 67108864;
    if (bit__7428__auto__ || G__10034.cljs$core$IRecord$) {
      return true;
    } else {
      if (!G__10034.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, G__10034);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, G__10034);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  var G__10036 = x;
  if (G__10036) {
    var bit__7428__auto__ = G__10036.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__7428__auto__ || G__10036.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__10036.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__10036);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__10036);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  var G__10038 = x;
  if (G__10038) {
    var bit__7421__auto__ = G__10038.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__7421__auto__ || G__10038.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj() {
  var G__10041 = arguments.length;
  switch(G__10041) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__7805__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  var obj10043 = {};
  return obj10043;
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var G__10044 = goog.object.create;
  var G__10045 = keyvals;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__10044, G__10045) : cljs.core.apply.call(null, G__10044, G__10045);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq10039) {
  return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10039));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  var keys = [];
  var G__10049_10051 = obj;
  var G__10050_10052 = function(G__10049_10051, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__10049_10051, keys);
  goog.object.forEach(G__10049_10051, G__10050_10052);
  return keys;
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__10053 = i__$1 + 1;
      var G__10054 = j__$1 + 1;
      var G__10055 = len__$1 - 1;
      i__$1 = G__10053;
      j__$1 = G__10054;
      len__$1 = G__10055;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__10056 = i__$1 - 1;
      var G__10057 = j__$1 - 1;
      var G__10058 = len__$1 - 1;
      i__$1 = G__10056;
      j__$1 = G__10057;
      len__$1 = G__10058;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj10060 = {};
  return obj10060;
}();
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__10062 = s;
    if (G__10062) {
      var bit__7428__auto__ = G__10062.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__7428__auto__ || G__10062.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__10062.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__10062);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__10062);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  var G__10064 = s;
  if (G__10064) {
    var bit__7428__auto__ = G__10064.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__7428__auto__ || G__10064.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__10064.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__10064);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__10064);
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__6754__auto__ = cljs.core.fn_QMARK_(f);
  if (or__6754__auto__) {
    return or__6754__auto__;
  } else {
    var G__10068 = f;
    if (G__10068) {
      var bit__7428__auto__ = G__10068.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__7428__auto__ || G__10068.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__10068.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__10068);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__10068);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && cljs.core.not(function() {
    var G__10081 = n;
    return isNaN(G__10081);
  }()) && !(n === Infinity) && function() {
    var G__10082 = n;
    return parseFloat(G__10082);
  }() === function() {
    var G__10083 = n;
    var G__10084 = 10;
    return parseInt(G__10083, G__10084);
  }();
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_() {
  var G__10089 = arguments.length;
  switch(G__10089) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__10091 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__10092 = etc;
          s = G__10091;
          xs = G__10092;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq10085) {
  var G__10086 = cljs.core.first(seq10085);
  var seq10085__$1 = cljs.core.next(seq10085);
  var G__10087 = cljs.core.first(seq10085__$1);
  var seq10085__$2 = cljs.core.next(seq10085__$1);
  return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__10086, G__10087, seq10085__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            var G__10098 = x;
            var G__10099 = y;
            return goog.array.defaultCompare(G__10098, G__10099);
          } else {
            throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
          }
        } else {
          if (function() {
            var G__10100 = x;
            if (G__10100) {
              var bit__7428__auto__ = G__10100.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__7428__auto__ || G__10100.cljs$core$IComparable$) {
                return true;
              } else {
                if (!G__10100.cljs$lang$protocol_mask$partition1$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, G__10100);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, G__10100);
            }
          }()) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              var G__10101 = x;
              var G__10102 = y;
              return goog.array.defaultCompare(G__10101, G__10102);
            } else {
              throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed() {
  var G__10104 = arguments.length;
  switch(G__10104) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__10106 = xs;
      var G__10107 = ys;
      var G__10108 = len;
      var G__10109 = n + 1;
      xs = G__10106;
      ys = G__10107;
      len = G__10108;
      n = G__10109;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = function() {
        var G__10114 = x;
        var G__10115 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10114, G__10115) : f.call(null, G__10114, G__10115);
      }();
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(function() {
            var G__10116 = y;
            var G__10117 = x;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10116, G__10117) : f.call(null, G__10116, G__10117);
          }())) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort() {
  var G__10119 = arguments.length;
  switch(G__10119) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = function() {
      var G__10120 = coll;
      return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__10120) : cljs.core.to_array.call(null, G__10120);
    }();
    var G__10121_10124 = a;
    var G__10122_10125 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__10121_10124, G__10122_10125);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by() {
  var G__10127 = arguments.length;
  switch(G__10127) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    return cljs.core.fn__GT_comparator(comp).call(null, function() {
      var G__10128 = x;
      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10128) : keyfn.call(null, G__10128);
    }(), function() {
      var G__10129 = y;
      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10129) : keyfn.call(null, G__10129);
    }());
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce() {
  var G__10132 = arguments.length;
  switch(G__10132) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__4423__auto__ = cljs.core.seq(coll);
  if (temp__4423__auto__) {
    var s = temp__4423__auto__;
    var G__10133 = f;
    var G__10134 = cljs.core.first(s);
    var G__10135 = cljs.core.next(s);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__10133, G__10134, G__10135) : cljs.core.reduce.call(null, G__10133, G__10134, G__10135);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__10136 = val__$1;
        var G__10137 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10136, G__10137) : f.call(null, G__10136, G__10137);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__10139 = nval;
        var G__10140 = cljs.core.next(coll__$1);
        val__$1 = G__10139;
        coll__$1 = G__10140;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = function() {
    var G__10144 = coll;
    return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__10144) : cljs.core.to_array.call(null, G__10144);
  }();
  var G__10145_10147 = a;
  goog.array.shuffle(G__10145_10147);
  var G__10146 = a;
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__10146) : cljs.core.vec.call(null, G__10146);
};
cljs.core.reduce = function cljs$core$reduce() {
  var G__10149 = arguments.length;
  switch(G__10149) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (function() {
    var G__10150 = coll;
    if (G__10150) {
      var bit__7421__auto__ = G__10150.cljs$lang$protocol_mask$partition0$ & 524288;
      if (bit__7421__auto__ || G__10150.cljs$core$IReduce$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (function() {
    var G__10151 = coll;
    if (G__10151) {
      var bit__7421__auto__ = G__10151.cljs$lang$protocol_mask$partition0$ & 524288;
      if (bit__7421__auto__ || G__10151.cljs$core$IReduce$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing() {
  var G__10154 = arguments.length;
  switch(G__10154) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__10159 = null;
    var G__10159__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__10159__1 = function(x) {
      var G__10155 = x;
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__10155) : cf.call(null, G__10155);
    };
    var G__10159__2 = function(x, y) {
      var G__10156 = x;
      var G__10157 = y;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10156, G__10157) : f.call(null, G__10156, G__10157);
    };
    G__10159 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__10159__0.call(this);
        case 1:
          return G__10159__1.call(this, x);
        case 2:
          return G__10159__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10159.cljs$core$IFn$_invoke$arity$0 = G__10159__0;
    G__10159.cljs$core$IFn$_invoke$arity$1 = G__10159__1;
    G__10159.cljs$core$IFn$_invoke$arity$2 = G__10159__2;
    return G__10159;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce() {
  var G__10161 = arguments.length;
  switch(G__10161) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, function() {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }(), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = function() {
    var G__10162 = f;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__10162) : xform.call(null, G__10162);
  }();
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  var G__10163 = ret;
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__10163) : f__$1.call(null, G__10163);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_() {
  var G__10169 = arguments.length;
  switch(G__10169) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq10165) {
  var G__10166 = cljs.core.first(seq10165);
  var seq10165__$1 = cljs.core.next(seq10165);
  var G__10167 = cljs.core.first(seq10165__$1);
  var seq10165__$2 = cljs.core.next(seq10165__$1);
  return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__10166, G__10167, seq10165__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_() {
  var G__10175 = arguments.length;
  switch(G__10175) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq10171) {
  var G__10172 = cljs.core.first(seq10171);
  var seq10171__$1 = cljs.core.next(seq10171);
  var G__10173 = cljs.core.first(seq10171__$1);
  var seq10171__$2 = cljs.core.next(seq10171__$1);
  return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(G__10172, G__10173, seq10171__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_() {
  var G__10181 = arguments.length;
  switch(G__10181) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq10177) {
  var G__10178 = cljs.core.first(seq10177);
  var seq10177__$1 = cljs.core.next(seq10177);
  var G__10179 = cljs.core.first(seq10177__$1);
  var seq10177__$2 = cljs.core.next(seq10177__$1);
  return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(G__10178, G__10179, seq10177__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_() {
  var G__10187 = arguments.length;
  switch(G__10187) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq10183) {
  var G__10184 = cljs.core.first(seq10183);
  var seq10183__$1 = cljs.core.next(seq10183);
  var G__10185 = cljs.core.first(seq10183__$1);
  var seq10183__$2 = cljs.core.next(seq10183__$1);
  return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(G__10184, G__10185, seq10183__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_() {
  var G__10193 = arguments.length;
  switch(G__10193) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__10195 = y;
        var G__10196 = cljs.core.first(more);
        var G__10197 = cljs.core.next(more);
        x = G__10195;
        y = G__10196;
        more = G__10197;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq10189) {
  var G__10190 = cljs.core.first(seq10189);
  var seq10189__$1 = cljs.core.next(seq10189);
  var G__10191 = cljs.core.first(seq10189__$1);
  var seq10189__$2 = cljs.core.next(seq10189__$1);
  return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(G__10190, G__10191, seq10189__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_() {
  var G__10202 = arguments.length;
  switch(G__10202) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__10204 = y;
        var G__10205 = cljs.core.first(more);
        var G__10206 = cljs.core.next(more);
        x = G__10204;
        y = G__10205;
        more = G__10206;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq10198) {
  var G__10199 = cljs.core.first(seq10198);
  var seq10198__$1 = cljs.core.next(seq10198);
  var G__10200 = cljs.core.first(seq10198__$1);
  var seq10198__$2 = cljs.core.next(seq10198__$1);
  return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__10199, G__10200, seq10198__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_() {
  var G__10211 = arguments.length;
  switch(G__10211) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__10213 = y;
        var G__10214 = cljs.core.first(more);
        var G__10215 = cljs.core.next(more);
        x = G__10213;
        y = G__10214;
        more = G__10215;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq10207) {
  var G__10208 = cljs.core.first(seq10207);
  var seq10207__$1 = cljs.core.next(seq10207);
  var G__10209 = cljs.core.first(seq10207__$1);
  var seq10207__$2 = cljs.core.next(seq10207__$1);
  return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(G__10208, G__10209, seq10207__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_() {
  var G__10220 = arguments.length;
  switch(G__10220) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__10222 = y;
        var G__10223 = cljs.core.first(more);
        var G__10224 = cljs.core.next(more);
        x = G__10222;
        y = G__10223;
        more = G__10224;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq10216) {
  var G__10217 = cljs.core.first(seq10216);
  var seq10216__$1 = cljs.core.next(seq10216);
  var G__10218 = cljs.core.first(seq10216__$1);
  var seq10216__$2 = cljs.core.next(seq10216__$1);
  return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__10217, G__10218, seq10216__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max() {
  var G__10229 = arguments.length;
  switch(G__10229) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__7066__auto__ = x;
  var y__7067__auto__ = y;
  return x__7066__auto__ > y__7067__auto__ ? x__7066__auto__ : y__7067__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__7066__auto__ = x;
    var y__7067__auto__ = y;
    return x__7066__auto__ > y__7067__auto__ ? x__7066__auto__ : y__7067__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq10225) {
  var G__10226 = cljs.core.first(seq10225);
  var seq10225__$1 = cljs.core.next(seq10225);
  var G__10227 = cljs.core.first(seq10225__$1);
  var seq10225__$2 = cljs.core.next(seq10225__$1);
  return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(G__10226, G__10227, seq10225__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min() {
  var G__10235 = arguments.length;
  switch(G__10235) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__7073__auto__ = x;
  var y__7074__auto__ = y;
  return x__7073__auto__ < y__7074__auto__ ? x__7073__auto__ : y__7074__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__7073__auto__ = x;
    var y__7074__auto__ = y;
    return x__7073__auto__ < y__7074__auto__ ? x__7073__auto__ : y__7074__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq10231) {
  var G__10232 = cljs.core.first(seq10231);
  var seq10231__$1 = cljs.core.next(seq10231);
  var G__10233 = cljs.core.first(seq10231__$1);
  var seq10231__$2 = cljs.core.next(seq10231__$1);
  return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(G__10232, G__10233, seq10231__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add() {
  var G__10241 = arguments.length;
  switch(G__10241) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq10237) {
  var G__10238 = cljs.core.first(seq10237);
  var seq10237__$1 = cljs.core.next(seq10237);
  var G__10239 = cljs.core.first(seq10237__$1);
  var seq10237__$2 = cljs.core.next(seq10237__$1);
  return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(G__10238, G__10239, seq10237__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int() {
  var G__10247 = arguments.length;
  switch(G__10247) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq10243) {
  var G__10244 = cljs.core.first(seq10243);
  var seq10243__$1 = cljs.core.next(seq10243);
  var G__10245 = cljs.core.first(seq10243__$1);
  var seq10243__$2 = cljs.core.next(seq10243__$1);
  return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(G__10244, G__10245, seq10243__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int() {
  var G__10253 = arguments.length;
  switch(G__10253) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq10249) {
  var G__10250 = cljs.core.first(seq10249);
  var seq10249__$1 = cljs.core.next(seq10249);
  var G__10251 = cljs.core.first(seq10249__$1);
  var seq10249__$2 = cljs.core.next(seq10249__$1);
  return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(G__10250, G__10251, seq10249__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply() {
  var G__10259 = arguments.length;
  switch(G__10259) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq10255) {
  var G__10256 = cljs.core.first(seq10255);
  var seq10255__$1 = cljs.core.next(seq10255);
  var G__10257 = cljs.core.first(seq10255__$1);
  var seq10255__$2 = cljs.core.next(seq10255__$1);
  return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(G__10256, G__10257, seq10255__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int() {
  var G__10265 = arguments.length;
  switch(G__10265) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq10261) {
  var G__10262 = cljs.core.first(seq10261);
  var seq10261__$1 = cljs.core.next(seq10261);
  var G__10263 = cljs.core.first(seq10261__$1);
  var seq10261__$2 = cljs.core.next(seq10261__$1);
  return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(G__10262, G__10263, seq10261__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  var G__10269 = x;
  var G__10270 = n;
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__10269, G__10270) : cljs.core.mod.call(null, G__10269, G__10270);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract() {
  var G__10275 = arguments.length;
  switch(G__10275) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq10271) {
  var G__10272 = cljs.core.first(seq10271);
  var seq10271__$1 = cljs.core.next(seq10271);
  var G__10273 = cljs.core.first(seq10271__$1);
  var seq10271__$2 = cljs.core.next(seq10271__$1);
  return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(G__10272, G__10273, seq10271__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int() {
  var G__10281 = arguments.length;
  switch(G__10281) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq10277) {
  var G__10278 = cljs.core.first(seq10277);
  var seq10277__$1 = cljs.core.next(seq10277);
  var G__10279 = cljs.core.first(seq10277__$1);
  var seq10277__$2 = cljs.core.next(seq10277__$1);
  return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(G__10278, G__10279, seq10277__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    var G__10285 = q;
    return Math.floor(G__10285);
  } else {
    var G__10286 = q;
    return Math.ceil(G__10286);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor() {
  var G__10291 = arguments.length;
  switch(G__10291) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq10287) {
  var G__10288 = cljs.core.first(seq10287);
  var seq10287__$1 = cljs.core.next(seq10287);
  var G__10289 = cljs.core.first(seq10287__$1);
  var seq10287__$2 = cljs.core.next(seq10287__$1);
  return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(G__10288, G__10289, seq10287__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and() {
  var G__10297 = arguments.length;
  switch(G__10297) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq10293) {
  var G__10294 = cljs.core.first(seq10293);
  var seq10293__$1 = cljs.core.next(seq10293);
  var G__10295 = cljs.core.first(seq10293__$1);
  var seq10293__$2 = cljs.core.next(seq10293__$1);
  return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(G__10294, G__10295, seq10293__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or() {
  var G__10303 = arguments.length;
  switch(G__10303) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq10299) {
  var G__10300 = cljs.core.first(seq10299);
  var seq10299__$1 = cljs.core.next(seq10299);
  var G__10301 = cljs.core.first(seq10299__$1);
  var seq10299__$2 = cljs.core.next(seq10299__$1);
  return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(G__10300, G__10301, seq10299__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not() {
  var G__10309 = arguments.length;
  switch(G__10309) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq10305) {
  var G__10306 = cljs.core.first(seq10305);
  var seq10305__$1 = cljs.core.next(seq10305);
  var G__10307 = cljs.core.first(seq10305__$1);
  var seq10305__$2 = cljs.core.next(seq10305__$1);
  return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(G__10306, G__10307, seq10305__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_() {
  var G__10315 = arguments.length;
  switch(G__10315) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__10317 = y;
        var G__10318 = cljs.core.first(more);
        var G__10319 = cljs.core.next(more);
        x = G__10317;
        y = G__10318;
        more = G__10319;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq10311) {
  var G__10312 = cljs.core.first(seq10311);
  var seq10311__$1 = cljs.core.next(seq10311);
  var G__10313 = cljs.core.first(seq10311__$1);
  var seq10311__$2 = cljs.core.next(seq10311__$1);
  return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__10312, G__10313, seq10311__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__10320 = n__$1 - 1;
      var G__10321 = cljs.core.next(xs);
      n__$1 = G__10320;
      xs = G__10321;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str() {
  var G__10325 = arguments.length;
  switch(G__10325) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7805__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    var G__10326 = x;
    return goog.string.buildString(G__10326);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer([cljs.core.str(x)].join(""));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__10328 = sb.append([cljs.core.str(cljs.core.first(more))].join(""));
      var G__10329 = cljs.core.next(more);
      sb = G__10328;
      more = G__10329;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq10322) {
  var G__10323 = cljs.core.first(seq10322);
  var seq10322__$1 = cljs.core.next(seq10322);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(G__10323, seq10322__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs() {
  var G__10331 = arguments.length;
  switch(G__10331) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__10333 = cljs.core.next(xs);
            var G__10334 = cljs.core.next(ys);
            xs = G__10333;
            ys = G__10334;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__10335 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__10336 = cljs.core.next(s);
        res = G__10335;
        s = G__10336;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__10341 = (h + (cljs.core.hash(function() {
        var G__10339 = e;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10339) : cljs.core.key.call(null, G__10339);
      }()) ^ cljs.core.hash(function() {
        var G__10340 = e;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10340) : cljs.core.val.call(null, G__10340);
      }()))) % 4503599627370496;
      var G__10342 = cljs.core.next(s);
      h = G__10341;
      s = G__10342;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__10343 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__10344 = cljs.core.next(s__$1);
      h = G__10343;
      s__$1 = G__10344;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__10355_10365 = cljs.core.seq(fn_map);
  var chunk__10356_10366 = null;
  var count__10357_10367 = 0;
  var i__10358_10368 = 0;
  while (true) {
    if (i__10358_10368 < count__10357_10367) {
      var vec__10359_10369 = chunk__10356_10366.cljs$core$IIndexed$_nth$arity$2(null, i__10358_10368);
      var key_name_10370 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10359_10369, 0, null);
      var f_10371 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10359_10369, 1, null);
      var str_name_10372 = function() {
        var G__10360 = key_name_10370;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__10360) : cljs.core.name.call(null, G__10360);
      }();
      obj[str_name_10372] = f_10371;
      var G__10373 = seq__10355_10365;
      var G__10374 = chunk__10356_10366;
      var G__10375 = count__10357_10367;
      var G__10376 = i__10358_10368 + 1;
      seq__10355_10365 = G__10373;
      chunk__10356_10366 = G__10374;
      count__10357_10367 = G__10375;
      i__10358_10368 = G__10376;
      continue;
    } else {
      var temp__4425__auto___10377 = cljs.core.seq(seq__10355_10365);
      if (temp__4425__auto___10377) {
        var seq__10355_10378__$1 = temp__4425__auto___10377;
        if (cljs.core.chunked_seq_QMARK_(seq__10355_10378__$1)) {
          var c__7539__auto___10379 = function() {
            var G__10361 = seq__10355_10378__$1;
            return cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__10361) : cljs.core.chunk_first.call(null, G__10361);
          }();
          var G__10380 = function() {
            var G__10362 = seq__10355_10378__$1;
            return cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__10362) : cljs.core.chunk_rest.call(null, G__10362);
          }();
          var G__10381 = c__7539__auto___10379;
          var G__10382 = cljs.core.count(c__7539__auto___10379);
          var G__10383 = 0;
          seq__10355_10365 = G__10380;
          chunk__10356_10366 = G__10381;
          count__10357_10367 = G__10382;
          i__10358_10368 = G__10383;
          continue;
        } else {
          var vec__10363_10384 = cljs.core.first(seq__10355_10378__$1);
          var key_name_10385 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10363_10384, 0, null);
          var f_10386 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10363_10384, 1, null);
          var str_name_10387 = function() {
            var G__10364 = key_name_10385;
            return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__10364) : cljs.core.name.call(null, G__10364);
          }();
          obj[str_name_10387] = f_10386;
          var G__10388 = cljs.core.next(seq__10355_10378__$1);
          var G__10389 = null;
          var G__10390 = 0;
          var G__10391 = 0;
          seq__10355_10365 = G__10388;
          chunk__10356_10366 = G__10389;
          count__10357_10367 = G__10390;
          i__10358_10368 = G__10391;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7170__auto__ = self__.__hash;
  if (!(h__7170__auto__ == null)) {
    return h__7170__auto__;
  } else {
    var h__7170__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__7170__auto____$1;
    return h__7170__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7730__auto__ = this;
  return cljs.core.es6_iterator(this__7730__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7730__auto__ = this;
  return cljs.core.es6_iterator(this__7730__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  var G__10393 = coll;
  if (G__10393) {
    var bit__7428__auto__ = G__10393.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__7428__auto__ || G__10393.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__10393.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__10393);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__10393);
  }
};
cljs.core.rseq = function cljs$core$rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list() {
  var argseq__7794__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__7794__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
        var G__10395 = xs__$1.cljs$core$INext$_next$arity$1(null);
        xs__$1 = G__10395;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__10396 = i - 1;
      var G__10397 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
      i = G__10396;
      r = G__10397;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq10394) {
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10394));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7170__auto__ = self__.__hash;
  if (!(h__7170__auto__ == null)) {
    return h__7170__auto__;
  } else {
    var h__7170__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__7170__auto____$1;
    return h__7170__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7730__auto__ = this;
  return cljs.core.es6_iterator(this__7730__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__6754__auto__ = coll == null;
    if (or__6754__auto__) {
      return or__6754__auto__;
    } else {
      var G__10401 = coll;
      if (G__10401) {
        var bit__7421__auto__ = G__10401.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__7421__auto__ || G__10401.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  var G__10403 = x;
  if (G__10403) {
    var bit__7428__auto__ = G__10403.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__7428__auto__ || G__10403.cljs$core$IList$) {
      return true;
    } else {
      if (!G__10403.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__10403);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__10403);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__6742__auto__ = cljs.core.not(a.ns);
      if (and__6742__auto__) {
        return b.ns;
      } else {
        return and__6742__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__10410 = a.ns;
            var G__10411 = b.ns;
            return goog.array.defaultCompare(G__10410, G__10411);
          }();
          if (0 === nsc) {
            var G__10412 = a.name;
            var G__10413 = b.name;
            return goog.array.defaultCompare(G__10412, G__10413);
          } else {
            return nsc;
          }
        }
      } else {
        var G__10414 = a.name;
        var G__10415 = b.name;
        return goog.array.defaultCompare(G__10414, G__10415);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__10417 = null;
  var G__10417__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__10417__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__10417 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10417__2.call(this, self__, coll);
      case 3:
        return G__10417__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10417.cljs$core$IFn$_invoke$arity$2 = G__10417__2;
  G__10417.cljs$core$IFn$_invoke$arity$3 = G__10417__3;
  return G__10417;
}();
cljs.core.Keyword.prototype.apply = function(self__, args10416) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10416)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__7170__auto__ = self__._hash;
  if (!(h__7170__auto__ == null)) {
    return h__7170__auto__;
  } else {
    var h__7170__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__7170__auto____$1;
    return h__7170__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null)], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (function() {
    var G__10419 = x;
    if (G__10419) {
      var bit__7421__auto__ = G__10419.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__7421__auto__ || G__10419.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function cljs$core$keyword() {
  var G__10421 = arguments.length;
  switch(G__10421) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), function() {
        var G__10422 = name;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__10422) : cljs.core.name.call(null, G__10422);
      }(), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = function() {
      return self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    }();
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7170__auto__ = self__.__hash;
  if (!(h__7170__auto__ == null)) {
    return h__7170__auto__;
  } else {
    var h__7170__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__7170__auto____$1;
    return h__7170__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__10424 = ls.sval();
        ls = G__10424;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7730__auto__ = this;
  return cljs.core.es6_iterator(this__7730__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk() {
  var G__10426 = arguments.length;
  switch(G__10426) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7170__auto__ = self__.__hash;
  if (!(h__7170__auto__ == null)) {
    return h__7170__auto__;
  } else {
    var h__7170__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__7170__auto____$1;
    return h__7170__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7730__auto__ = this;
  return cljs.core.es6_iterator(this__7730__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (function() {
    var G__10429 = s;
    if (G__10429) {
      var bit__7421__auto__ = G__10429.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__7421__auto__ || G__10429.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__10430 = cljs.core.next(s__$1);
      s__$1 = G__10430;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_10431 = 0;
  var xs_10432 = cljs.core.seq(coll);
  while (true) {
    if (xs_10432) {
      ret[i_10431] = cljs.core.to_array(cljs.core.first(xs_10432));
      var G__10433 = i_10431 + 1;
      var G__10434 = cljs.core.next(xs_10432);
      i_10431 = G__10433;
      xs_10432 = G__10434;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array() {
  var G__10436 = arguments.length;
  switch(G__10436) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__10438 = i + 1;
        var G__10439 = cljs.core.next(s__$1);
        i = G__10438;
        s__$1 = G__10439;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__7639__auto___10440 = size;
    var i_10441 = 0;
    while (true) {
      if (i_10441 < n__7639__auto___10440) {
        a[i_10441] = init_val_or_seq;
        var G__10442 = i_10441 + 1;
        i_10441 = G__10442;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array() {
  var G__10444 = arguments.length;
  switch(G__10444) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__10446 = i + 1;
        var G__10447 = cljs.core.next(s__$1);
        i = G__10446;
        s__$1 = G__10447;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__7639__auto___10448 = size;
    var i_10449 = 0;
    while (true) {
      if (i_10449 < n__7639__auto___10448) {
        a[i_10449] = init_val_or_seq;
        var G__10450 = i_10449 + 1;
        i_10449 = G__10450;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array() {
  var G__10452 = arguments.length;
  switch(G__10452) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__10454 = i + 1;
        var G__10455 = cljs.core.next(s__$1);
        i = G__10454;
        s__$1 = G__10455;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__7639__auto___10456 = size;
    var i_10457 = 0;
    while (true) {
      if (i_10457 < n__7639__auto___10456) {
        a[i_10457] = init_val_or_seq;
        var G__10458 = i_10457 + 1;
        i_10457 = G__10458;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array() {
  var G__10460 = arguments.length;
  switch(G__10460) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__10462 = i + 1;
        var G__10463 = cljs.core.next(s__$1);
        i = G__10462;
        s__$1 = G__10463;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__7639__auto___10464 = size;
    var i_10465 = 0;
    while (true) {
      if (i_10465 < n__7639__auto___10464) {
        a[i_10465] = init_val_or_seq;
        var G__10466 = i_10465 + 1;
        i_10465 = G__10466;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__10467 = cljs.core.next(s__$1);
        var G__10468 = i - 1;
        var G__10469 = sum + 1;
        s__$1 = G__10467;
        i = G__10468;
        sum = G__10469;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs$core$spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function cljs$core$concat() {
  var G__10475 = arguments.length;
  switch(G__10475) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq10471) {
  var G__10472 = cljs.core.first(seq10471);
  var seq10471__$1 = cljs.core.next(seq10471);
  var G__10473 = cljs.core.first(seq10471__$1);
  var seq10471__$2 = cljs.core.next(seq10471__$1);
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(G__10472, G__10473, seq10471__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_() {
  var G__10489 = arguments.length;
  switch(G__10489) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__7805__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq10483) {
  var G__10484 = cljs.core.first(seq10483);
  var seq10483__$1 = cljs.core.next(seq10483);
  var G__10485 = cljs.core.first(seq10483__$1);
  var seq10483__$2 = cljs.core.next(seq10483__$1);
  var G__10486 = cljs.core.first(seq10483__$2);
  var seq10483__$3 = cljs.core.next(seq10483__$2);
  var G__10487 = cljs.core.first(seq10483__$3);
  var seq10483__$4 = cljs.core.next(seq10483__$3);
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__10484, G__10485, G__10486, G__10487, seq10483__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_() {
  var G__10495 = arguments.length;
  switch(G__10495) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__10497 = ntcoll;
      var G__10498 = cljs.core.first(vals);
      var G__10499 = cljs.core.next(vals);
      tcoll = G__10497;
      val = G__10498;
      vals = G__10499;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq10491) {
  var G__10492 = cljs.core.first(seq10491);
  var seq10491__$1 = cljs.core.next(seq10491);
  var G__10493 = cljs.core.first(seq10491__$1);
  var seq10491__$2 = cljs.core.next(seq10491__$1);
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__10492, G__10493, seq10491__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_() {
  var G__10505 = arguments.length;
  switch(G__10505) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7805__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__10507 = ntcoll;
      var G__10508 = cljs.core.first(kvs);
      var G__10509 = cljs.core.second(kvs);
      var G__10510 = cljs.core.nnext(kvs);
      tcoll = G__10507;
      key = G__10508;
      val = G__10509;
      kvs = G__10510;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq10500) {
  var G__10501 = cljs.core.first(seq10500);
  var seq10500__$1 = cljs.core.next(seq10500);
  var G__10502 = cljs.core.first(seq10500__$1);
  var seq10500__$2 = cljs.core.next(seq10500__$1);
  var G__10503 = cljs.core.first(seq10500__$2);
  var seq10500__$3 = cljs.core.next(seq10500__$2);
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__10501, G__10502, G__10503, seq10500__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_() {
  var G__10515 = arguments.length;
  switch(G__10515) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__10517 = ntcoll;
      var G__10518 = cljs.core.first(ks);
      var G__10519 = cljs.core.next(ks);
      tcoll = G__10517;
      key = G__10518;
      ks = G__10519;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq10511) {
  var G__10512 = cljs.core.first(seq10511);
  var seq10511__$1 = cljs.core.next(seq10511);
  var G__10513 = cljs.core.first(seq10511__$1);
  var seq10511__$2 = cljs.core.next(seq10511__$1);
  return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__10512, G__10513, seq10511__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_() {
  var G__10524 = arguments.length;
  switch(G__10524) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__10526 = ntcoll;
      var G__10527 = cljs.core.first(vals);
      var G__10528 = cljs.core.next(vals);
      tcoll = G__10526;
      val = G__10527;
      vals = G__10528;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq10520) {
  var G__10521 = cljs.core.first(seq10520);
  var seq10520__$1 = cljs.core.next(seq10520);
  var G__10522 = cljs.core.first(seq10520__$1);
  var seq10520__$2 = cljs.core.next(seq10520__$1);
  return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__10521, G__10522, seq10520__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a7683 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a7683);
      } else {
        var G__10739 = a7683;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10739) : f.call(null, G__10739);
      }
    } else {
      var b7684 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a7683, b7684);
        } else {
          var G__10740 = a7683;
          var G__10741 = b7684;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10740, G__10741) : f.call(null, G__10740, G__10741);
        }
      } else {
        var c7685 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a7683, b7684, c7685);
          } else {
            var G__10742 = a7683;
            var G__10743 = b7684;
            var G__10744 = c7685;
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10742, G__10743, G__10744) : f.call(null, G__10742, G__10743, G__10744);
          }
        } else {
          var d7686 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a7683, b7684, c7685, d7686);
            } else {
              var G__10745 = a7683;
              var G__10746 = b7684;
              var G__10747 = c7685;
              var G__10748 = d7686;
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10745, G__10746, G__10747, G__10748) : f.call(null, G__10745, G__10746, G__10747, G__10748);
            }
          } else {
            var e7687 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a7683, b7684, c7685, d7686, e7687);
              } else {
                var G__10749 = a7683;
                var G__10750 = b7684;
                var G__10751 = c7685;
                var G__10752 = d7686;
                var G__10753 = e7687;
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__10749, G__10750, G__10751, G__10752, G__10753) : f.call(null, G__10749, G__10750, G__10751, G__10752, G__10753);
              }
            } else {
              var f7688 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a7683, b7684, c7685, d7686, e7687, f7688);
                } else {
                  var G__10754 = a7683;
                  var G__10755 = b7684;
                  var G__10756 = c7685;
                  var G__10757 = d7686;
                  var G__10758 = e7687;
                  var G__10759 = f7688;
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__10754, G__10755, G__10756, G__10757, G__10758, G__10759) : f.call(null, G__10754, G__10755, G__10756, G__10757, G__10758, G__10759);
                }
              } else {
                var g7689 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a7683, b7684, c7685, d7686, e7687, f7688, g7689);
                  } else {
                    var G__10760 = a7683;
                    var G__10761 = b7684;
                    var G__10762 = c7685;
                    var G__10763 = d7686;
                    var G__10764 = e7687;
                    var G__10765 = f7688;
                    var G__10766 = g7689;
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__10760, G__10761, G__10762, G__10763, G__10764, G__10765, G__10766) : f.call(null, G__10760, G__10761, G__10762, G__10763, G__10764, G__10765, G__10766);
                  }
                } else {
                  var h7690 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a7683, b7684, c7685, d7686, e7687, f7688, g7689, h7690);
                    } else {
                      var G__10767 = a7683;
                      var G__10768 = b7684;
                      var G__10769 = c7685;
                      var G__10770 = d7686;
                      var G__10771 = e7687;
                      var G__10772 = f7688;
                      var G__10773 = g7689;
                      var G__10774 = h7690;
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__10767, G__10768, G__10769, G__10770, G__10771, G__10772, G__10773, G__10774) : f.call(null, G__10767, G__10768, G__10769, G__10770, G__10771, G__10772, G__10773, G__10774);
                    }
                  } else {
                    var i7691 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a7683, b7684, c7685, d7686, e7687, f7688, g7689, h7690, i7691);
                      } else {
                        var G__10775 = a7683;
                        var G__10776 = b7684;
                        var G__10777 = c7685;
                        var G__10778 = d7686;
                        var G__10779 = e7687;
                        var G__10780 = f7688;
                        var G__10781 = g7689;
                        var G__10782 = h7690;
                        var G__10783 = i7691;
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__10775, G__10776, G__10777, G__10778, G__10779, G__10780, G__10781, G__10782, G__10783) : f.call(null, G__10775, G__10776, G__10777, G__10778, G__10779, G__10780, G__10781, G__10782, G__10783);
                      }
                    } else {
                      var j7692 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a7683, b7684, c7685, d7686, e7687, f7688, g7689, h7690, i7691, j7692);
                        } else {
                          var G__10784 = a7683;
                          var G__10785 = b7684;
                          var G__10786 = c7685;
                          var G__10787 = d7686;
                          var G__10788 = e7687;
                          var G__10789 = f7688;
                          var G__10790 = g7689;
                          var G__10791 = h7690;
                          var G__10792 = i7691;
                          var G__10793 = j7692;
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__10784, G__10785, G__10786, G__10787, G__10788, G__10789, G__10790, G__10791, G__10792, G__10793) : f.call(null, G__10784, G__10785, G__10786, G__10787, G__10788, G__10789, G__10790, G__10791, G__10792, G__10793);
                        }
                      } else {
                        var k7693 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a7683, b7684, c7685, d7686, e7687, f7688, g7689, h7690, i7691, j7692, k7693);
                          } else {
                            var G__10794 = a7683;
                            var G__10795 = b7684;
                            var G__10796 = c7685;
                            var G__10797 = d7686;
                            var G__10798 = e7687;
                            var G__10799 = f7688;
                            var G__10800 = g7689;
                            var G__10801 = h7690;
                            var G__10802 = i7691;
                            var G__10803 = j7692;
                            var G__10804 = k7693;
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__10794, G__10795, G__10796, G__10797, G__10798, G__10799, G__10800, G__10801, G__10802, G__10803, G__10804) : f.call(null, G__10794, G__10795, G__10796, G__10797, G__10798, G__10799, G__10800, G__10801, G__10802, G__10803, G__10804);
                          }
                        } else {
                          var l7694 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a7683, b7684, c7685, d7686, e7687, f7688, g7689, h7690, i7691, j7692, k7693, l7694);
                            } else {
                              var G__10805 = a7683;
                              var G__10806 = b7684;
                              var G__10807 = c7685;
                              var G__10808 = d7686;
                              var G__10809 = e7687;
                              var G__10810 = f7688;
                              var G__10811 = g7689;
                              var G__10812 = h7690;
                              var G__10813 = i7691;
                              var G__10814 = j7692;
                              var G__10815 = k7693;
                              var G__10816 = l7694;
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__10805, G__10806, G__10807, G__10808, G__10809, G__10810, G__10811, G__10812, G__10813, G__10814, G__10815, G__10816) : f.call(null, G__10805, G__10806, G__10807, G__10808, G__10809, G__10810, G__10811, G__10812, G__10813, G__10814, G__10815, G__10816);
                            }
                          } else {
                            var m7695 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a7683, b7684, c7685, d7686, e7687, f7688, g7689, h7690, i7691, j7692, k7693, l7694, m7695);
                              } else {
                                var G__10817 = a7683;
                                var G__10818 = b7684;
                                var G__10819 = c7685;
                                var G__10820 = d7686;
                                var G__10821 = e7687;
                                var G__10822 = f7688;
                                var G__10823 = g7689;
                                var G__10824 = h7690;
                                var G__10825 = i7691;
                                var G__10826 = j7692;
                                var G__10827 = k7693;
                                var G__10828 = l7694;
                                var G__10829 = m7695;
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__10817, G__10818, G__10819, G__10820, G__10821, G__10822, G__10823, G__10824, G__10825, G__10826, G__10827, G__10828, G__10829) : f.call(null, G__10817, G__10818, G__10819, G__10820, G__10821, G__10822, G__10823, G__10824, G__10825, G__10826, G__10827, G__10828, G__10829);
                              }
                            } else {
                              var n7696 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a7683, b7684, c7685, d7686, e7687, f7688, g7689, h7690, i7691, j7692, k7693, l7694, m7695, n7696);
                                } else {
                                  var G__10830 = a7683;
                                  var G__10831 = b7684;
                                  var G__10832 = c7685;
                                  var G__10833 = d7686;
                                  var G__10834 = e7687;
                                  var G__10835 = f7688;
                                  var G__10836 = g7689;
                                  var G__10837 = h7690;
                                  var G__10838 = i7691;
                                  var G__10839 = j7692;
                                  var G__10840 = k7693;
                                  var G__10841 = l7694;
                                  var G__10842 = m7695;
                                  var G__10843 = n7696;
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__10830, G__10831, G__10832, G__10833, G__10834, G__10835, G__10836, G__10837, G__10838, G__10839, G__10840, G__10841, G__10842, G__10843) : f.call(null, G__10830, G__10831, G__10832, G__10833, G__10834, G__10835, G__10836, G__10837, G__10838, G__10839, G__10840, G__10841, G__10842, G__10843);
                                }
                              } else {
                                var o7697 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a7683, b7684, c7685, d7686, e7687, f7688, g7689, h7690, i7691, j7692, k7693, l7694, m7695, n7696, o7697);
                                  } else {
                                    var G__10844 = a7683;
                                    var G__10845 = b7684;
                                    var G__10846 = c7685;
                                    var G__10847 = d7686;
                                    var G__10848 = e7687;
                                    var G__10849 = f7688;
                                    var G__10850 = g7689;
                                    var G__10851 = h7690;
                                    var G__10852 = i7691;
                                    var G__10853 = j7692;
                                    var G__10854 = k7693;
                                    var G__10855 = l7694;
                                    var G__10856 = m7695;
                                    var G__10857 = n7696;
                                    var G__10858 = o7697;
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__10844, G__10845, G__10846, G__10847, G__10848, G__10849, G__10850, G__10851, G__10852, G__10853, G__10854, G__10855, G__10856, G__10857, G__10858) : f.call(null, G__10844, G__10845, G__10846, G__10847, G__10848, G__10849, G__10850, G__10851, G__10852, G__10853, G__10854, G__10855, G__10856, G__10857, G__10858);
                                  }
                                } else {
                                  var p7698 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a7683, b7684, c7685, d7686, e7687, f7688, g7689, h7690, i7691, j7692, k7693, l7694, m7695, n7696, o7697, p7698);
                                    } else {
                                      var G__10859 = a7683;
                                      var G__10860 = b7684;
                                      var G__10861 = c7685;
                                      var G__10862 = d7686;
                                      var G__10863 = e7687;
                                      var G__10864 = f7688;
                                      var G__10865 = g7689;
                                      var G__10866 = h7690;
                                      var G__10867 = i7691;
                                      var G__10868 = j7692;
                                      var G__10869 = k7693;
                                      var G__10870 = l7694;
                                      var G__10871 = m7695;
                                      var G__10872 = n7696;
                                      var G__10873 = o7697;
                                      var G__10874 = p7698;
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__10859, G__10860, G__10861, G__10862, G__10863, G__10864, G__10865, G__10866, G__10867, G__10868, G__10869, G__10870, G__10871, G__10872, G__10873, G__10874) : f.call(null, G__10859, G__10860, G__10861, G__10862, G__10863, G__10864, G__10865, G__10866, G__10867, G__10868, G__10869, G__10870, G__10871, G__10872, G__10873, G__10874);
                                    }
                                  } else {
                                    var q7699 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a7683, b7684, c7685, d7686, e7687, f7688, g7689, h7690, i7691, j7692, k7693, l7694, m7695, n7696, o7697, p7698, q7699);
                                      } else {
                                        var G__10875 = a7683;
                                        var G__10876 = b7684;
                                        var G__10877 = c7685;
                                        var G__10878 = d7686;
                                        var G__10879 = e7687;
                                        var G__10880 = f7688;
                                        var G__10881 = g7689;
                                        var G__10882 = h7690;
                                        var G__10883 = i7691;
                                        var G__10884 = j7692;
                                        var G__10885 = k7693;
                                        var G__10886 = l7694;
                                        var G__10887 = m7695;
                                        var G__10888 = n7696;
                                        var G__10889 = o7697;
                                        var G__10890 = p7698;
                                        var G__10891 = q7699;
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__10875, G__10876, G__10877, G__10878, G__10879, G__10880, G__10881, G__10882, G__10883, G__10884, G__10885, G__10886, G__10887, G__10888, G__10889, G__10890, G__10891) : f.call(null, G__10875, G__10876, G__10877, G__10878, G__10879, G__10880, G__10881, G__10882, G__10883, G__10884, G__10885, G__10886, G__10887, G__10888, G__10889, G__10890, G__10891);
                                      }
                                    } else {
                                      var r7700 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a7683, b7684, c7685, d7686, e7687, f7688, g7689, h7690, i7691, j7692, k7693, l7694, m7695, n7696, o7697, p7698, q7699, r7700);
                                        } else {
                                          var G__10892 = a7683;
                                          var G__10893 = b7684;
                                          var G__10894 = c7685;
                                          var G__10895 = d7686;
                                          var G__10896 = e7687;
                                          var G__10897 = f7688;
                                          var G__10898 = g7689;
                                          var G__10899 = h7690;
                                          var G__10900 = i7691;
                                          var G__10901 = j7692;
                                          var G__10902 = k7693;
                                          var G__10903 = l7694;
                                          var G__10904 = m7695;
                                          var G__10905 = n7696;
                                          var G__10906 = o7697;
                                          var G__10907 = p7698;
                                          var G__10908 = q7699;
                                          var G__10909 = r7700;
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__10892, G__10893, G__10894, G__10895, G__10896, G__10897, G__10898, G__10899, G__10900, G__10901, G__10902, G__10903, G__10904, G__10905, G__10906, G__10907, G__10908, G__10909) : f.call(null, G__10892, G__10893, G__10894, G__10895, G__10896, G__10897, G__10898, G__10899, G__10900, G__10901, G__10902, G__10903, G__10904, G__10905, G__10906, G__10907, G__10908, G__10909);
                                        }
                                      } else {
                                        var s7701 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a7683, b7684, c7685, d7686, e7687, f7688, g7689, h7690, i7691, j7692, k7693, l7694, m7695, n7696, o7697, p7698, q7699, r7700, s7701);
                                          } else {
                                            var G__10910 = a7683;
                                            var G__10911 = b7684;
                                            var G__10912 = c7685;
                                            var G__10913 = d7686;
                                            var G__10914 = e7687;
                                            var G__10915 = f7688;
                                            var G__10916 = g7689;
                                            var G__10917 = h7690;
                                            var G__10918 = i7691;
                                            var G__10919 = j7692;
                                            var G__10920 = k7693;
                                            var G__10921 = l7694;
                                            var G__10922 = m7695;
                                            var G__10923 = n7696;
                                            var G__10924 = o7697;
                                            var G__10925 = p7698;
                                            var G__10926 = q7699;
                                            var G__10927 = r7700;
                                            var G__10928 = s7701;
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__10910, G__10911, G__10912, G__10913, G__10914, G__10915, G__10916, G__10917, G__10918, G__10919, G__10920, G__10921, G__10922, G__10923, G__10924, G__10925, G__10926, G__10927, G__10928) : f.call(null, G__10910, G__10911, G__10912, G__10913, G__10914, G__10915, G__10916, G__10917, G__10918, G__10919, G__10920, G__10921, G__10922, G__10923, G__10924, G__10925, G__10926, G__10927, 
                                            G__10928);
                                          }
                                        } else {
                                          var t7702 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a7683, b7684, c7685, d7686, e7687, f7688, g7689, h7690, i7691, j7692, k7693, l7694, m7695, n7696, o7697, p7698, q7699, r7700, s7701, t7702);
                                            } else {
                                              var G__10929 = a7683;
                                              var G__10930 = b7684;
                                              var G__10931 = c7685;
                                              var G__10932 = d7686;
                                              var G__10933 = e7687;
                                              var G__10934 = f7688;
                                              var G__10935 = g7689;
                                              var G__10936 = h7690;
                                              var G__10937 = i7691;
                                              var G__10938 = j7692;
                                              var G__10939 = k7693;
                                              var G__10940 = l7694;
                                              var G__10941 = m7695;
                                              var G__10942 = n7696;
                                              var G__10943 = o7697;
                                              var G__10944 = p7698;
                                              var G__10945 = q7699;
                                              var G__10946 = r7700;
                                              var G__10947 = s7701;
                                              var G__10948 = t7702;
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__10929, G__10930, G__10931, G__10932, G__10933, G__10934, G__10935, G__10936, G__10937, G__10938, G__10939, G__10940, G__10941, G__10942, G__10943, G__10944, G__10945, G__10946, G__10947, G__10948) : f.call(null, G__10929, G__10930, G__10931, G__10932, G__10933, G__10934, G__10935, G__10936, G__10937, G__10938, G__10939, G__10940, G__10941, G__10942, G__10943, G__10944, G__10945, 
                                              G__10946, G__10947, G__10948);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function cljs$core$apply() {
  var G__10956 = arguments.length;
  switch(G__10956) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 5), 0);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__7805__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(args, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return f.apply(f, cljs.core.to_array(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq10949) {
  var G__10950 = cljs.core.first(seq10949);
  var seq10949__$1 = cljs.core.next(seq10949);
  var G__10951 = cljs.core.first(seq10949__$1);
  var seq10949__$2 = cljs.core.next(seq10949__$1);
  var G__10952 = cljs.core.first(seq10949__$2);
  var seq10949__$3 = cljs.core.next(seq10949__$2);
  var G__10953 = cljs.core.first(seq10949__$3);
  var seq10949__$4 = cljs.core.next(seq10949__$3);
  var G__10954 = cljs.core.first(seq10949__$4);
  var seq10949__$5 = cljs.core.next(seq10949__$4);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(G__10950, G__10951, G__10952, G__10953, G__10954, seq10949__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta() {
  var G__10966 = arguments.length;
  switch(G__10966) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 6), 0);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__7805__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__10967 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10967) : f.call(null, G__10967);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__10968 = cljs.core.meta(obj);
    var G__10969 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10968, G__10969) : f.call(null, G__10968, G__10969);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__10970 = cljs.core.meta(obj);
    var G__10971 = a;
    var G__10972 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10970, G__10971, G__10972) : f.call(null, G__10970, G__10971, G__10972);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__10973 = cljs.core.meta(obj);
    var G__10974 = a;
    var G__10975 = b;
    var G__10976 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10973, G__10974, G__10975, G__10976) : f.call(null, G__10973, G__10974, G__10975, G__10976);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__10977 = cljs.core.meta(obj);
    var G__10978 = a;
    var G__10979 = b;
    var G__10980 = c;
    var G__10981 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__10977, G__10978, G__10979, G__10980, G__10981) : f.call(null, G__10977, G__10978, G__10979, G__10980, G__10981);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq10958) {
  var G__10959 = cljs.core.first(seq10958);
  var seq10958__$1 = cljs.core.next(seq10958);
  var G__10960 = cljs.core.first(seq10958__$1);
  var seq10958__$2 = cljs.core.next(seq10958__$1);
  var G__10961 = cljs.core.first(seq10958__$2);
  var seq10958__$3 = cljs.core.next(seq10958__$2);
  var G__10962 = cljs.core.first(seq10958__$3);
  var seq10958__$4 = cljs.core.next(seq10958__$3);
  var G__10963 = cljs.core.first(seq10958__$4);
  var seq10958__$5 = cljs.core.next(seq10958__$4);
  var G__10964 = cljs.core.first(seq10958__$5);
  var seq10958__$6 = cljs.core.next(seq10958__$5);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(G__10959, G__10960, G__10961, G__10962, G__10963, G__10964, seq10958__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_() {
  var G__10987 = arguments.length;
  switch(G__10987) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq10983) {
  var G__10984 = cljs.core.first(seq10983);
  var seq10983__$1 = cljs.core.next(seq10983);
  var G__10985 = cljs.core.first(seq10983__$1);
  var seq10983__$2 = cljs.core.next(seq10983__$1);
  return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(G__10984, G__10985, seq10983__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t10992 !== "undefined") {
  } else {
    cljs.core.t10992 = function(nil_iter, meta10993) {
      this.nil_iter = nil_iter;
      this.meta10993 = meta10993;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t10992.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10994, meta10993__$1) {
      var self__ = this;
      var _10994__$1 = this;
      return new cljs.core.t10992(self__.nil_iter, meta10993__$1);
    };
    cljs.core.t10992.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10994) {
      var self__ = this;
      var _10994__$1 = this;
      return self__.meta10993;
    };
    cljs.core.t10992.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t10992.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t10992.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t10992.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-iter", "nil-iter", 1101030523, null), new cljs.core.Symbol(null, "meta10993", "meta10993", 2013697760, null)], null);
    };
    cljs.core.t10992.cljs$lang$type = true;
    cljs.core.t10992.cljs$lang$ctorStr = "cljs.core/t10992";
    cljs.core.t10992.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
      return cljs.core._write(writer__7334__auto__, "cljs.core/t10992");
    };
    cljs.core.__GT_t10992 = function cljs$core$nil_iter_$___GT_t10992(nil_iter__$1, meta10993) {
      return new cljs.core.t10992(nil_iter__$1, meta10993);
    };
  }
  return new cljs.core.t10992(cljs$core$nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.Symbol(null, "_next", "_next", 101877036, null)], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.truth_(cljs.core.iterable_QMARK_(coll))) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function cljs$core$lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__6742__auto__ = !(lt.stepper == null);
      if (and__6742__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__6742__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__10995 = lt;
        var G__10996 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__10995, G__10996) : self__.xform.call(null, G__10995, G__10996);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__10997 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__10997) : self__.xform.call(null, G__10997);
  }
};
cljs.core.Stepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function cljs$core$__GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function cljs$core$stepper(xform, iter) {
  var stepfn = function() {
    var cljs$core$stepper_$_stepfn = null;
    var cljs$core$stepper_$_stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var cljs$core$stepper_$_stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepper_$_stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepper_$_stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepper_$_stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
    return cljs$core$stepper_$_stepfn;
  }();
  return new cljs.core.Stepper(function() {
    var G__10999 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__10999) : xform.call(null, G__10999);
  }(), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__11001 = cljs.core.next(iters__$1);
        iters__$1 = G__11001;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__7639__auto___11002 = self__.iters.length;
  var i_11003 = 0;
  while (true) {
    if (i_11003 < n__7639__auto___11002) {
      self__.nexts[i_11003] = self__.iters[i_11003].next();
      var G__11004 = i_11003 + 1;
      i_11003 = G__11004;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__6742__auto__ = !(lt.stepper == null);
      if (and__6742__auto__) {
        return this$.hasNext();
      } else {
        return and__6742__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__11000 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__11000) : self__.xform.call(null, G__11000);
  }
};
cljs.core.MultiStepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iters", "iters", 719353031, null), new cljs.core.Symbol(null, "nexts", "nexts", -1683579407, null)], null);
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function cljs$core$__GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function cljs$core$multi_stepper() {
  var G__11006 = arguments.length;
  switch(G__11006) {
    case 2:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2 = function(xform, iters) {
  return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3 = function(xform, iters, nexts) {
  var stepfn = function() {
    var cljs$core$stepfn = null;
    var cljs$core$stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return lt;
    };
    var cljs$core$stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepfn__1;
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepfn__2;
    return cljs$core$stepfn;
  }();
  return new cljs.core.MultiStepper(function() {
    var G__11007 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__11007) : xform.call(null, G__11007);
  }(), iters, nexts);
};
cljs.core.multi_stepper.cljs$lang$maxFixedArity = 3;
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "stepper", "stepper", 1159163296, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function cljs$core$__GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7730__auto__ = this;
  return cljs.core.es6_iterator(this__7730__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__11009_11013 = cljs.core.seq(colls);
  var chunk__11010_11014 = null;
  var count__11011_11015 = 0;
  var i__11012_11016 = 0;
  while (true) {
    if (i__11012_11016 < count__11011_11015) {
      var coll_11017 = chunk__11010_11014.cljs$core$IIndexed$_nth$arity$2(null, i__11012_11016);
      iters.push(cljs.core.iter(coll_11017));
      var G__11018 = seq__11009_11013;
      var G__11019 = chunk__11010_11014;
      var G__11020 = count__11011_11015;
      var G__11021 = i__11012_11016 + 1;
      seq__11009_11013 = G__11018;
      chunk__11010_11014 = G__11019;
      count__11011_11015 = G__11020;
      i__11012_11016 = G__11021;
      continue;
    } else {
      var temp__4425__auto___11022 = cljs.core.seq(seq__11009_11013);
      if (temp__4425__auto___11022) {
        var seq__11009_11023__$1 = temp__4425__auto___11022;
        if (cljs.core.chunked_seq_QMARK_(seq__11009_11023__$1)) {
          var c__7539__auto___11024 = cljs.core.chunk_first(seq__11009_11023__$1);
          var G__11025 = cljs.core.chunk_rest(seq__11009_11023__$1);
          var G__11026 = c__7539__auto___11024;
          var G__11027 = cljs.core.count(c__7539__auto___11024);
          var G__11028 = 0;
          seq__11009_11013 = G__11025;
          chunk__11010_11014 = G__11026;
          count__11011_11015 = G__11027;
          i__11012_11016 = G__11028;
          continue;
        } else {
          var coll_11029 = cljs.core.first(seq__11009_11023__$1);
          iters.push(cljs.core.iter(coll_11029));
          var G__11030 = cljs.core.next(seq__11009_11023__$1);
          var G__11031 = null;
          var G__11032 = 0;
          var G__11033 = 0;
          seq__11009_11013 = G__11030;
          chunk__11010_11014 = G__11031;
          count__11011_11015 = G__11032;
          i__11012_11016 = G__11033;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function cljs$core$sequence() {
  var G__11038 = arguments.length;
  switch(G__11038) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__6754__auto__ = cljs.core.seq(coll);
    if (or__6754__auto__) {
      return or__6754__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  return cljs.core.LazyTransformer.create(xform, coll);
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
};
cljs.core.sequence.cljs$lang$applyTo = function(seq11034) {
  var G__11035 = cljs.core.first(seq11034);
  var seq11034__$1 = cljs.core.next(seq11034);
  var G__11036 = cljs.core.first(seq11034__$1);
  var seq11034__$2 = cljs.core.next(seq11034__$1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(G__11035, G__11036, seq11034__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__11041 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11041) : pred.call(null, G__11041);
      }())) {
        var G__11042 = pred;
        var G__11043 = cljs.core.next(coll);
        pred = G__11042;
        coll = G__11043;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__6754__auto__ = function() {
        var G__11047 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11047) : pred.call(null, G__11047);
      }();
      if (cljs.core.truth_(or__6754__auto__)) {
        return or__6754__auto__;
      } else {
        var G__11048 = pred;
        var G__11049 = cljs.core.next(coll);
        pred = G__11048;
        coll = G__11049;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__11056 = null;
    var G__11056__0 = function() {
      return cljs.core.not(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    };
    var G__11056__1 = function(x) {
      return cljs.core.not(function() {
        var G__11053 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11053) : f.call(null, G__11053);
      }());
    };
    var G__11056__2 = function(x, y) {
      return cljs.core.not(function() {
        var G__11054 = x;
        var G__11055 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11054, G__11055) : f.call(null, G__11054, G__11055);
      }());
    };
    var G__11056__3 = function() {
      var G__11057__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__11057 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__11058__i = 0, G__11058__a = new Array(arguments.length - 2);
          while (G__11058__i < G__11058__a.length) {
            G__11058__a[G__11058__i] = arguments[G__11058__i + 2];
            ++G__11058__i;
          }
          zs = new cljs.core.IndexedSeq(G__11058__a, 0);
        }
        return G__11057__delegate.call(this, x, y, zs);
      };
      G__11057.cljs$lang$maxFixedArity = 2;
      G__11057.cljs$lang$applyTo = function(arglist__11059) {
        var x = cljs.core.first(arglist__11059);
        arglist__11059 = cljs.core.next(arglist__11059);
        var y = cljs.core.first(arglist__11059);
        var zs = cljs.core.rest(arglist__11059);
        return G__11057__delegate(x, y, zs);
      };
      G__11057.cljs$core$IFn$_invoke$arity$variadic = G__11057__delegate;
      return G__11057;
    }();
    G__11056 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__11056__0.call(this);
        case 1:
          return G__11056__1.call(this, x);
        case 2:
          return G__11056__2.call(this, x, y);
        default:
          var G__11060 = null;
          if (arguments.length > 2) {
            var G__11061__i = 0, G__11061__a = new Array(arguments.length - 2);
            while (G__11061__i < G__11061__a.length) {
              G__11061__a[G__11061__i] = arguments[G__11061__i + 2];
              ++G__11061__i;
            }
            G__11060 = new cljs.core.IndexedSeq(G__11061__a, 0);
          }
          return G__11056__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11060);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11056.cljs$lang$maxFixedArity = 2;
    G__11056.cljs$lang$applyTo = G__11056__3.cljs$lang$applyTo;
    G__11056.cljs$core$IFn$_invoke$arity$0 = G__11056__0;
    G__11056.cljs$core$IFn$_invoke$arity$1 = G__11056__1;
    G__11056.cljs$core$IFn$_invoke$arity$2 = G__11056__2;
    G__11056.cljs$core$IFn$_invoke$arity$variadic = G__11056__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__11056;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__11062__delegate = function(args) {
      return x;
    };
    var G__11062 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__11063__i = 0, G__11063__a = new Array(arguments.length - 0);
        while (G__11063__i < G__11063__a.length) {
          G__11063__a[G__11063__i] = arguments[G__11063__i + 0];
          ++G__11063__i;
        }
        args = new cljs.core.IndexedSeq(G__11063__a, 0);
      }
      return G__11062__delegate.call(this, args);
    };
    G__11062.cljs$lang$maxFixedArity = 0;
    G__11062.cljs$lang$applyTo = function(arglist__11064) {
      var args = cljs.core.seq(arglist__11064);
      return G__11062__delegate(args);
    };
    G__11062.cljs$core$IFn$_invoke$arity$variadic = G__11062__delegate;
    return G__11062;
  }();
};
cljs.core.comp = function cljs$core$comp() {
  var G__11070 = arguments.length;
  switch(G__11070) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7805__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__11099 = null;
    var G__11099__0 = function() {
      var G__11071 = function() {
        return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11071) : f.call(null, G__11071);
    };
    var G__11099__1 = function(x) {
      var G__11072 = function() {
        var G__11073 = x;
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11073) : g.call(null, G__11073);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11072) : f.call(null, G__11072);
    };
    var G__11099__2 = function(x, y) {
      var G__11074 = function() {
        var G__11075 = x;
        var G__11076 = y;
        return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__11075, G__11076) : g.call(null, G__11075, G__11076);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11074) : f.call(null, G__11074);
    };
    var G__11099__3 = function(x, y, z) {
      var G__11077 = function() {
        var G__11078 = x;
        var G__11079 = y;
        var G__11080 = z;
        return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__11078, G__11079, G__11080) : g.call(null, G__11078, G__11079, G__11080);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11077) : f.call(null, G__11077);
    };
    var G__11099__4 = function() {
      var G__11100__delegate = function(x, y, z, args) {
        var G__11081 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11081) : f.call(null, G__11081);
      };
      var G__11100 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11101__i = 0, G__11101__a = new Array(arguments.length - 3);
          while (G__11101__i < G__11101__a.length) {
            G__11101__a[G__11101__i] = arguments[G__11101__i + 3];
            ++G__11101__i;
          }
          args = new cljs.core.IndexedSeq(G__11101__a, 0);
        }
        return G__11100__delegate.call(this, x, y, z, args);
      };
      G__11100.cljs$lang$maxFixedArity = 3;
      G__11100.cljs$lang$applyTo = function(arglist__11102) {
        var x = cljs.core.first(arglist__11102);
        arglist__11102 = cljs.core.next(arglist__11102);
        var y = cljs.core.first(arglist__11102);
        arglist__11102 = cljs.core.next(arglist__11102);
        var z = cljs.core.first(arglist__11102);
        var args = cljs.core.rest(arglist__11102);
        return G__11100__delegate(x, y, z, args);
      };
      G__11100.cljs$core$IFn$_invoke$arity$variadic = G__11100__delegate;
      return G__11100;
    }();
    G__11099 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__11099__0.call(this);
        case 1:
          return G__11099__1.call(this, x);
        case 2:
          return G__11099__2.call(this, x, y);
        case 3:
          return G__11099__3.call(this, x, y, z);
        default:
          var G__11103 = null;
          if (arguments.length > 3) {
            var G__11104__i = 0, G__11104__a = new Array(arguments.length - 3);
            while (G__11104__i < G__11104__a.length) {
              G__11104__a[G__11104__i] = arguments[G__11104__i + 3];
              ++G__11104__i;
            }
            G__11103 = new cljs.core.IndexedSeq(G__11104__a, 0);
          }
          return G__11099__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11103);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11099.cljs$lang$maxFixedArity = 3;
    G__11099.cljs$lang$applyTo = G__11099__4.cljs$lang$applyTo;
    G__11099.cljs$core$IFn$_invoke$arity$0 = G__11099__0;
    G__11099.cljs$core$IFn$_invoke$arity$1 = G__11099__1;
    G__11099.cljs$core$IFn$_invoke$arity$2 = G__11099__2;
    G__11099.cljs$core$IFn$_invoke$arity$3 = G__11099__3;
    G__11099.cljs$core$IFn$_invoke$arity$variadic = G__11099__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__11099;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__11105 = null;
    var G__11105__0 = function() {
      var G__11082 = function() {
        var G__11083 = function() {
          return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        }();
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11083) : g.call(null, G__11083);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11082) : f.call(null, G__11082);
    };
    var G__11105__1 = function(x) {
      var G__11084 = function() {
        var G__11085 = function() {
          var G__11086 = x;
          return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__11086) : h.call(null, G__11086);
        }();
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11085) : g.call(null, G__11085);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11084) : f.call(null, G__11084);
    };
    var G__11105__2 = function(x, y) {
      var G__11087 = function() {
        var G__11088 = function() {
          var G__11089 = x;
          var G__11090 = y;
          return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__11089, G__11090) : h.call(null, G__11089, G__11090);
        }();
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11088) : g.call(null, G__11088);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11087) : f.call(null, G__11087);
    };
    var G__11105__3 = function(x, y, z) {
      var G__11091 = function() {
        var G__11092 = function() {
          var G__11093 = x;
          var G__11094 = y;
          var G__11095 = z;
          return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__11093, G__11094, G__11095) : h.call(null, G__11093, G__11094, G__11095);
        }();
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11092) : g.call(null, G__11092);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11091) : f.call(null, G__11091);
    };
    var G__11105__4 = function() {
      var G__11106__delegate = function(x, y, z, args) {
        var G__11096 = function() {
          var G__11097 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11097) : g.call(null, G__11097);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11096) : f.call(null, G__11096);
      };
      var G__11106 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11107__i = 0, G__11107__a = new Array(arguments.length - 3);
          while (G__11107__i < G__11107__a.length) {
            G__11107__a[G__11107__i] = arguments[G__11107__i + 3];
            ++G__11107__i;
          }
          args = new cljs.core.IndexedSeq(G__11107__a, 0);
        }
        return G__11106__delegate.call(this, x, y, z, args);
      };
      G__11106.cljs$lang$maxFixedArity = 3;
      G__11106.cljs$lang$applyTo = function(arglist__11108) {
        var x = cljs.core.first(arglist__11108);
        arglist__11108 = cljs.core.next(arglist__11108);
        var y = cljs.core.first(arglist__11108);
        arglist__11108 = cljs.core.next(arglist__11108);
        var z = cljs.core.first(arglist__11108);
        var args = cljs.core.rest(arglist__11108);
        return G__11106__delegate(x, y, z, args);
      };
      G__11106.cljs$core$IFn$_invoke$arity$variadic = G__11106__delegate;
      return G__11106;
    }();
    G__11105 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__11105__0.call(this);
        case 1:
          return G__11105__1.call(this, x);
        case 2:
          return G__11105__2.call(this, x, y);
        case 3:
          return G__11105__3.call(this, x, y, z);
        default:
          var G__11109 = null;
          if (arguments.length > 3) {
            var G__11110__i = 0, G__11110__a = new Array(arguments.length - 3);
            while (G__11110__i < G__11110__a.length) {
              G__11110__a[G__11110__i] = arguments[G__11110__i + 3];
              ++G__11110__i;
            }
            G__11109 = new cljs.core.IndexedSeq(G__11110__a, 0);
          }
          return G__11105__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11109);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11105.cljs$lang$maxFixedArity = 3;
    G__11105.cljs$lang$applyTo = G__11105__4.cljs$lang$applyTo;
    G__11105.cljs$core$IFn$_invoke$arity$0 = G__11105__0;
    G__11105.cljs$core$IFn$_invoke$arity$1 = G__11105__1;
    G__11105.cljs$core$IFn$_invoke$arity$2 = G__11105__2;
    G__11105.cljs$core$IFn$_invoke$arity$3 = G__11105__3;
    G__11105.cljs$core$IFn$_invoke$arity$variadic = G__11105__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__11105;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__11111__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__11112 = cljs.core.first(fs__$2).call(null, ret);
            var G__11113 = cljs.core.next(fs__$2);
            ret = G__11112;
            fs__$2 = G__11113;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__11111 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__11114__i = 0, G__11114__a = new Array(arguments.length - 0);
          while (G__11114__i < G__11114__a.length) {
            G__11114__a[G__11114__i] = arguments[G__11114__i + 0];
            ++G__11114__i;
          }
          args = new cljs.core.IndexedSeq(G__11114__a, 0);
        }
        return G__11111__delegate.call(this, args);
      };
      G__11111.cljs$lang$maxFixedArity = 0;
      G__11111.cljs$lang$applyTo = function(arglist__11115) {
        var args = cljs.core.seq(arglist__11115);
        return G__11111__delegate(args);
      };
      G__11111.cljs$core$IFn$_invoke$arity$variadic = G__11111__delegate;
      return G__11111;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq11065) {
  var G__11066 = cljs.core.first(seq11065);
  var seq11065__$1 = cljs.core.next(seq11065);
  var G__11067 = cljs.core.first(seq11065__$1);
  var seq11065__$2 = cljs.core.next(seq11065__$1);
  var G__11068 = cljs.core.first(seq11065__$2);
  var seq11065__$3 = cljs.core.next(seq11065__$2);
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(G__11066, G__11067, G__11068, seq11065__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial() {
  var G__11122 = arguments.length;
  switch(G__11122) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__7805__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__11166 = null;
    var G__11166__0 = function() {
      var G__11123 = arg1;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11123) : f.call(null, G__11123);
    };
    var G__11166__1 = function(x) {
      var G__11124 = arg1;
      var G__11125 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11124, G__11125) : f.call(null, G__11124, G__11125);
    };
    var G__11166__2 = function(x, y) {
      var G__11126 = arg1;
      var G__11127 = x;
      var G__11128 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11126, G__11127, G__11128) : f.call(null, G__11126, G__11127, G__11128);
    };
    var G__11166__3 = function(x, y, z) {
      var G__11129 = arg1;
      var G__11130 = x;
      var G__11131 = y;
      var G__11132 = z;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11129, G__11130, G__11131, G__11132) : f.call(null, G__11129, G__11130, G__11131, G__11132);
    };
    var G__11166__4 = function() {
      var G__11167__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
      };
      var G__11167 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11168__i = 0, G__11168__a = new Array(arguments.length - 3);
          while (G__11168__i < G__11168__a.length) {
            G__11168__a[G__11168__i] = arguments[G__11168__i + 3];
            ++G__11168__i;
          }
          args = new cljs.core.IndexedSeq(G__11168__a, 0);
        }
        return G__11167__delegate.call(this, x, y, z, args);
      };
      G__11167.cljs$lang$maxFixedArity = 3;
      G__11167.cljs$lang$applyTo = function(arglist__11169) {
        var x = cljs.core.first(arglist__11169);
        arglist__11169 = cljs.core.next(arglist__11169);
        var y = cljs.core.first(arglist__11169);
        arglist__11169 = cljs.core.next(arglist__11169);
        var z = cljs.core.first(arglist__11169);
        var args = cljs.core.rest(arglist__11169);
        return G__11167__delegate(x, y, z, args);
      };
      G__11167.cljs$core$IFn$_invoke$arity$variadic = G__11167__delegate;
      return G__11167;
    }();
    G__11166 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__11166__0.call(this);
        case 1:
          return G__11166__1.call(this, x);
        case 2:
          return G__11166__2.call(this, x, y);
        case 3:
          return G__11166__3.call(this, x, y, z);
        default:
          var G__11170 = null;
          if (arguments.length > 3) {
            var G__11171__i = 0, G__11171__a = new Array(arguments.length - 3);
            while (G__11171__i < G__11171__a.length) {
              G__11171__a[G__11171__i] = arguments[G__11171__i + 3];
              ++G__11171__i;
            }
            G__11170 = new cljs.core.IndexedSeq(G__11171__a, 0);
          }
          return G__11166__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11170);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11166.cljs$lang$maxFixedArity = 3;
    G__11166.cljs$lang$applyTo = G__11166__4.cljs$lang$applyTo;
    G__11166.cljs$core$IFn$_invoke$arity$0 = G__11166__0;
    G__11166.cljs$core$IFn$_invoke$arity$1 = G__11166__1;
    G__11166.cljs$core$IFn$_invoke$arity$2 = G__11166__2;
    G__11166.cljs$core$IFn$_invoke$arity$3 = G__11166__3;
    G__11166.cljs$core$IFn$_invoke$arity$variadic = G__11166__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__11166;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__11172 = null;
    var G__11172__0 = function() {
      var G__11133 = arg1;
      var G__11134 = arg2;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11133, G__11134) : f.call(null, G__11133, G__11134);
    };
    var G__11172__1 = function(x) {
      var G__11135 = arg1;
      var G__11136 = arg2;
      var G__11137 = x;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11135, G__11136, G__11137) : f.call(null, G__11135, G__11136, G__11137);
    };
    var G__11172__2 = function(x, y) {
      var G__11138 = arg1;
      var G__11139 = arg2;
      var G__11140 = x;
      var G__11141 = y;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11138, G__11139, G__11140, G__11141) : f.call(null, G__11138, G__11139, G__11140, G__11141);
    };
    var G__11172__3 = function(x, y, z) {
      var G__11142 = arg1;
      var G__11143 = arg2;
      var G__11144 = x;
      var G__11145 = y;
      var G__11146 = z;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__11142, G__11143, G__11144, G__11145, G__11146) : f.call(null, G__11142, G__11143, G__11144, G__11145, G__11146);
    };
    var G__11172__4 = function() {
      var G__11173__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
      };
      var G__11173 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11174__i = 0, G__11174__a = new Array(arguments.length - 3);
          while (G__11174__i < G__11174__a.length) {
            G__11174__a[G__11174__i] = arguments[G__11174__i + 3];
            ++G__11174__i;
          }
          args = new cljs.core.IndexedSeq(G__11174__a, 0);
        }
        return G__11173__delegate.call(this, x, y, z, args);
      };
      G__11173.cljs$lang$maxFixedArity = 3;
      G__11173.cljs$lang$applyTo = function(arglist__11175) {
        var x = cljs.core.first(arglist__11175);
        arglist__11175 = cljs.core.next(arglist__11175);
        var y = cljs.core.first(arglist__11175);
        arglist__11175 = cljs.core.next(arglist__11175);
        var z = cljs.core.first(arglist__11175);
        var args = cljs.core.rest(arglist__11175);
        return G__11173__delegate(x, y, z, args);
      };
      G__11173.cljs$core$IFn$_invoke$arity$variadic = G__11173__delegate;
      return G__11173;
    }();
    G__11172 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__11172__0.call(this);
        case 1:
          return G__11172__1.call(this, x);
        case 2:
          return G__11172__2.call(this, x, y);
        case 3:
          return G__11172__3.call(this, x, y, z);
        default:
          var G__11176 = null;
          if (arguments.length > 3) {
            var G__11177__i = 0, G__11177__a = new Array(arguments.length - 3);
            while (G__11177__i < G__11177__a.length) {
              G__11177__a[G__11177__i] = arguments[G__11177__i + 3];
              ++G__11177__i;
            }
            G__11176 = new cljs.core.IndexedSeq(G__11177__a, 0);
          }
          return G__11172__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11176);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11172.cljs$lang$maxFixedArity = 3;
    G__11172.cljs$lang$applyTo = G__11172__4.cljs$lang$applyTo;
    G__11172.cljs$core$IFn$_invoke$arity$0 = G__11172__0;
    G__11172.cljs$core$IFn$_invoke$arity$1 = G__11172__1;
    G__11172.cljs$core$IFn$_invoke$arity$2 = G__11172__2;
    G__11172.cljs$core$IFn$_invoke$arity$3 = G__11172__3;
    G__11172.cljs$core$IFn$_invoke$arity$variadic = G__11172__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__11172;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__11178 = null;
    var G__11178__0 = function() {
      var G__11147 = arg1;
      var G__11148 = arg2;
      var G__11149 = arg3;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11147, G__11148, G__11149) : f.call(null, G__11147, G__11148, G__11149);
    };
    var G__11178__1 = function(x) {
      var G__11150 = arg1;
      var G__11151 = arg2;
      var G__11152 = arg3;
      var G__11153 = x;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11150, G__11151, G__11152, G__11153) : f.call(null, G__11150, G__11151, G__11152, G__11153);
    };
    var G__11178__2 = function(x, y) {
      var G__11154 = arg1;
      var G__11155 = arg2;
      var G__11156 = arg3;
      var G__11157 = x;
      var G__11158 = y;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__11154, G__11155, G__11156, G__11157, G__11158) : f.call(null, G__11154, G__11155, G__11156, G__11157, G__11158);
    };
    var G__11178__3 = function(x, y, z) {
      var G__11159 = arg1;
      var G__11160 = arg2;
      var G__11161 = arg3;
      var G__11162 = x;
      var G__11163 = y;
      var G__11164 = z;
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__11159, G__11160, G__11161, G__11162, G__11163, G__11164) : f.call(null, G__11159, G__11160, G__11161, G__11162, G__11163, G__11164);
    };
    var G__11178__4 = function() {
      var G__11179__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
      };
      var G__11179 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11180__i = 0, G__11180__a = new Array(arguments.length - 3);
          while (G__11180__i < G__11180__a.length) {
            G__11180__a[G__11180__i] = arguments[G__11180__i + 3];
            ++G__11180__i;
          }
          args = new cljs.core.IndexedSeq(G__11180__a, 0);
        }
        return G__11179__delegate.call(this, x, y, z, args);
      };
      G__11179.cljs$lang$maxFixedArity = 3;
      G__11179.cljs$lang$applyTo = function(arglist__11181) {
        var x = cljs.core.first(arglist__11181);
        arglist__11181 = cljs.core.next(arglist__11181);
        var y = cljs.core.first(arglist__11181);
        arglist__11181 = cljs.core.next(arglist__11181);
        var z = cljs.core.first(arglist__11181);
        var args = cljs.core.rest(arglist__11181);
        return G__11179__delegate(x, y, z, args);
      };
      G__11179.cljs$core$IFn$_invoke$arity$variadic = G__11179__delegate;
      return G__11179;
    }();
    G__11178 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__11178__0.call(this);
        case 1:
          return G__11178__1.call(this, x);
        case 2:
          return G__11178__2.call(this, x, y);
        case 3:
          return G__11178__3.call(this, x, y, z);
        default:
          var G__11182 = null;
          if (arguments.length > 3) {
            var G__11183__i = 0, G__11183__a = new Array(arguments.length - 3);
            while (G__11183__i < G__11183__a.length) {
              G__11183__a[G__11183__i] = arguments[G__11183__i + 3];
              ++G__11183__i;
            }
            G__11182 = new cljs.core.IndexedSeq(G__11183__a, 0);
          }
          return G__11178__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11182);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11178.cljs$lang$maxFixedArity = 3;
    G__11178.cljs$lang$applyTo = G__11178__4.cljs$lang$applyTo;
    G__11178.cljs$core$IFn$_invoke$arity$0 = G__11178__0;
    G__11178.cljs$core$IFn$_invoke$arity$1 = G__11178__1;
    G__11178.cljs$core$IFn$_invoke$arity$2 = G__11178__2;
    G__11178.cljs$core$IFn$_invoke$arity$3 = G__11178__3;
    G__11178.cljs$core$IFn$_invoke$arity$variadic = G__11178__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__11178;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__11184__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__11184 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__11185__i = 0, G__11185__a = new Array(arguments.length - 0);
        while (G__11185__i < G__11185__a.length) {
          G__11185__a[G__11185__i] = arguments[G__11185__i + 0];
          ++G__11185__i;
        }
        args = new cljs.core.IndexedSeq(G__11185__a, 0);
      }
      return G__11184__delegate.call(this, args);
    };
    G__11184.cljs$lang$maxFixedArity = 0;
    G__11184.cljs$lang$applyTo = function(arglist__11186) {
      var args = cljs.core.seq(arglist__11186);
      return G__11184__delegate(args);
    };
    G__11184.cljs$core$IFn$_invoke$arity$variadic = G__11184__delegate;
    return G__11184;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq11116) {
  var G__11117 = cljs.core.first(seq11116);
  var seq11116__$1 = cljs.core.next(seq11116);
  var G__11118 = cljs.core.first(seq11116__$1);
  var seq11116__$2 = cljs.core.next(seq11116__$1);
  var G__11119 = cljs.core.first(seq11116__$2);
  var seq11116__$3 = cljs.core.next(seq11116__$2);
  var G__11120 = cljs.core.first(seq11116__$3);
  var seq11116__$4 = cljs.core.next(seq11116__$3);
  return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(G__11117, G__11118, G__11119, G__11120, seq11116__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil() {
  var G__11188 = arguments.length;
  switch(G__11188) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__11206 = null;
    var G__11206__1 = function(a) {
      var G__11189 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11189) : f.call(null, G__11189);
    };
    var G__11206__2 = function(a, b) {
      var G__11190 = a == null ? x : a;
      var G__11191 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11190, G__11191) : f.call(null, G__11190, G__11191);
    };
    var G__11206__3 = function(a, b, c) {
      var G__11192 = a == null ? x : a;
      var G__11193 = b;
      var G__11194 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11192, G__11193, G__11194) : f.call(null, G__11192, G__11193, G__11194);
    };
    var G__11206__4 = function() {
      var G__11207__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__11207 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__11208__i = 0, G__11208__a = new Array(arguments.length - 3);
          while (G__11208__i < G__11208__a.length) {
            G__11208__a[G__11208__i] = arguments[G__11208__i + 3];
            ++G__11208__i;
          }
          ds = new cljs.core.IndexedSeq(G__11208__a, 0);
        }
        return G__11207__delegate.call(this, a, b, c, ds);
      };
      G__11207.cljs$lang$maxFixedArity = 3;
      G__11207.cljs$lang$applyTo = function(arglist__11209) {
        var a = cljs.core.first(arglist__11209);
        arglist__11209 = cljs.core.next(arglist__11209);
        var b = cljs.core.first(arglist__11209);
        arglist__11209 = cljs.core.next(arglist__11209);
        var c = cljs.core.first(arglist__11209);
        var ds = cljs.core.rest(arglist__11209);
        return G__11207__delegate(a, b, c, ds);
      };
      G__11207.cljs$core$IFn$_invoke$arity$variadic = G__11207__delegate;
      return G__11207;
    }();
    G__11206 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__11206__1.call(this, a);
        case 2:
          return G__11206__2.call(this, a, b);
        case 3:
          return G__11206__3.call(this, a, b, c);
        default:
          var G__11210 = null;
          if (arguments.length > 3) {
            var G__11211__i = 0, G__11211__a = new Array(arguments.length - 3);
            while (G__11211__i < G__11211__a.length) {
              G__11211__a[G__11211__i] = arguments[G__11211__i + 3];
              ++G__11211__i;
            }
            G__11210 = new cljs.core.IndexedSeq(G__11211__a, 0);
          }
          return G__11206__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__11210);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11206.cljs$lang$maxFixedArity = 3;
    G__11206.cljs$lang$applyTo = G__11206__4.cljs$lang$applyTo;
    G__11206.cljs$core$IFn$_invoke$arity$1 = G__11206__1;
    G__11206.cljs$core$IFn$_invoke$arity$2 = G__11206__2;
    G__11206.cljs$core$IFn$_invoke$arity$3 = G__11206__3;
    G__11206.cljs$core$IFn$_invoke$arity$variadic = G__11206__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__11206;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__11212 = null;
    var G__11212__2 = function(a, b) {
      var G__11195 = a == null ? x : a;
      var G__11196 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11195, G__11196) : f.call(null, G__11195, G__11196);
    };
    var G__11212__3 = function(a, b, c) {
      var G__11197 = a == null ? x : a;
      var G__11198 = b == null ? y : b;
      var G__11199 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11197, G__11198, G__11199) : f.call(null, G__11197, G__11198, G__11199);
    };
    var G__11212__4 = function() {
      var G__11213__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__11213 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__11214__i = 0, G__11214__a = new Array(arguments.length - 3);
          while (G__11214__i < G__11214__a.length) {
            G__11214__a[G__11214__i] = arguments[G__11214__i + 3];
            ++G__11214__i;
          }
          ds = new cljs.core.IndexedSeq(G__11214__a, 0);
        }
        return G__11213__delegate.call(this, a, b, c, ds);
      };
      G__11213.cljs$lang$maxFixedArity = 3;
      G__11213.cljs$lang$applyTo = function(arglist__11215) {
        var a = cljs.core.first(arglist__11215);
        arglist__11215 = cljs.core.next(arglist__11215);
        var b = cljs.core.first(arglist__11215);
        arglist__11215 = cljs.core.next(arglist__11215);
        var c = cljs.core.first(arglist__11215);
        var ds = cljs.core.rest(arglist__11215);
        return G__11213__delegate(a, b, c, ds);
      };
      G__11213.cljs$core$IFn$_invoke$arity$variadic = G__11213__delegate;
      return G__11213;
    }();
    G__11212 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__11212__2.call(this, a, b);
        case 3:
          return G__11212__3.call(this, a, b, c);
        default:
          var G__11216 = null;
          if (arguments.length > 3) {
            var G__11217__i = 0, G__11217__a = new Array(arguments.length - 3);
            while (G__11217__i < G__11217__a.length) {
              G__11217__a[G__11217__i] = arguments[G__11217__i + 3];
              ++G__11217__i;
            }
            G__11216 = new cljs.core.IndexedSeq(G__11217__a, 0);
          }
          return G__11212__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__11216);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11212.cljs$lang$maxFixedArity = 3;
    G__11212.cljs$lang$applyTo = G__11212__4.cljs$lang$applyTo;
    G__11212.cljs$core$IFn$_invoke$arity$2 = G__11212__2;
    G__11212.cljs$core$IFn$_invoke$arity$3 = G__11212__3;
    G__11212.cljs$core$IFn$_invoke$arity$variadic = G__11212__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__11212;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__11218 = null;
    var G__11218__2 = function(a, b) {
      var G__11200 = a == null ? x : a;
      var G__11201 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11200, G__11201) : f.call(null, G__11200, G__11201);
    };
    var G__11218__3 = function(a, b, c) {
      var G__11202 = a == null ? x : a;
      var G__11203 = b == null ? y : b;
      var G__11204 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11202, G__11203, G__11204) : f.call(null, G__11202, G__11203, G__11204);
    };
    var G__11218__4 = function() {
      var G__11219__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__11219 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__11220__i = 0, G__11220__a = new Array(arguments.length - 3);
          while (G__11220__i < G__11220__a.length) {
            G__11220__a[G__11220__i] = arguments[G__11220__i + 3];
            ++G__11220__i;
          }
          ds = new cljs.core.IndexedSeq(G__11220__a, 0);
        }
        return G__11219__delegate.call(this, a, b, c, ds);
      };
      G__11219.cljs$lang$maxFixedArity = 3;
      G__11219.cljs$lang$applyTo = function(arglist__11221) {
        var a = cljs.core.first(arglist__11221);
        arglist__11221 = cljs.core.next(arglist__11221);
        var b = cljs.core.first(arglist__11221);
        arglist__11221 = cljs.core.next(arglist__11221);
        var c = cljs.core.first(arglist__11221);
        var ds = cljs.core.rest(arglist__11221);
        return G__11219__delegate(a, b, c, ds);
      };
      G__11219.cljs$core$IFn$_invoke$arity$variadic = G__11219__delegate;
      return G__11219;
    }();
    G__11218 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__11218__2.call(this, a, b);
        case 3:
          return G__11218__3.call(this, a, b, c);
        default:
          var G__11222 = null;
          if (arguments.length > 3) {
            var G__11223__i = 0, G__11223__a = new Array(arguments.length - 3);
            while (G__11223__i < G__11223__a.length) {
              G__11223__a[G__11223__i] = arguments[G__11223__i + 3];
              ++G__11223__i;
            }
            G__11222 = new cljs.core.IndexedSeq(G__11223__a, 0);
          }
          return G__11218__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__11222);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11218.cljs$lang$maxFixedArity = 3;
    G__11218.cljs$lang$applyTo = G__11218__4.cljs$lang$applyTo;
    G__11218.cljs$core$IFn$_invoke$arity$2 = G__11218__2;
    G__11218.cljs$core$IFn$_invoke$arity$3 = G__11218__3;
    G__11218.cljs$core$IFn$_invoke$arity$variadic = G__11218__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__11218;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed() {
  var G__11225 = arguments.length;
  switch(G__11225) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = function() {
      var G__11226 = -1;
      return cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__11226) : cljs.core.volatile_BANG_.call(null, G__11226);
    }();
    return function(i) {
      return function() {
        var G__11257 = null;
        var G__11257__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__11257__1 = function(result) {
          var G__11227 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11227) : rf.call(null, G__11227);
        };
        var G__11257__2 = function(result, input) {
          var G__11228 = result;
          var G__11229 = function() {
            var G__11230 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
            var G__11231 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11230, G__11231) : f.call(null, G__11230, G__11231);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11228, G__11229) : rf.call(null, G__11228, G__11229);
        };
        G__11257 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__11257__0.call(this);
            case 1:
              return G__11257__1.call(this, result);
            case 2:
              return G__11257__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11257.cljs$core$IFn$_invoke$arity$0 = G__11257__0;
        G__11257.cljs$core$IFn$_invoke$arity$1 = G__11257__1;
        G__11257.cljs$core$IFn$_invoke$arity$2 = G__11257__2;
        return G__11257;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4425__auto__ = cljs.core.seq(coll__$1);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__7639__auto___11258 = size;
          var i_11259 = 0;
          while (true) {
            if (i_11259 < n__7639__auto___11258) {
              cljs.core.chunk_append(b, function() {
                var G__11252 = idx + i_11259;
                var G__11253 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_11259);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11252, G__11253) : f.call(null, G__11252, G__11253);
              }());
              var G__11260 = i_11259 + 1;
              i_11259 = G__11260;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__11254 = idx;
            var G__11255 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11254, G__11255) : f.call(null, G__11254, G__11255);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep() {
  var G__11262 = arguments.length;
  switch(G__11262) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__11270 = null;
      var G__11270__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__11270__1 = function(result) {
        var G__11263 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11263) : rf.call(null, G__11263);
      };
      var G__11270__2 = function(result, input) {
        var v = function() {
          var G__11264 = input;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11264) : f.call(null, G__11264);
        }();
        if (v == null) {
          return result;
        } else {
          var G__11265 = result;
          var G__11266 = v;
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11265, G__11266) : rf.call(null, G__11265, G__11266);
        }
      };
      G__11270 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__11270__0.call(this);
          case 1:
            return G__11270__1.call(this, result);
          case 2:
            return G__11270__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11270.cljs$core$IFn$_invoke$arity$0 = G__11270__0;
      G__11270.cljs$core$IFn$_invoke$arity$1 = G__11270__1;
      G__11270.cljs$core$IFn$_invoke$arity$2 = G__11270__2;
      return G__11270;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__7639__auto___11271 = size;
        var i_11272 = 0;
        while (true) {
          if (i_11272 < n__7639__auto___11271) {
            var x_11273 = function() {
              var G__11267 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_11272);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11267) : f.call(null, G__11267);
            }();
            if (x_11273 == null) {
            } else {
              cljs.core.chunk_append(b, x_11273);
            }
            var G__11274 = i_11272 + 1;
            i_11272 = G__11274;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__11268 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11268) : f.call(null, G__11268);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__11275 = cljs.core.seq(self__.watches);
  var chunk__11276 = null;
  var count__11277 = 0;
  var i__11278 = 0;
  while (true) {
    if (i__11278 < count__11277) {
      var vec__11279 = chunk__11276.cljs$core$IIndexed$_nth$arity$2(null, i__11278);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11279, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11279, 1, null);
      var G__11280_11290 = key;
      var G__11281_11291 = this$__$1;
      var G__11282_11292 = oldval;
      var G__11283_11293 = newval;
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11280_11290, G__11281_11291, G__11282_11292, G__11283_11293) : f.call(null, G__11280_11290, G__11281_11291, G__11282_11292, G__11283_11293);
      var G__11294 = seq__11275;
      var G__11295 = chunk__11276;
      var G__11296 = count__11277;
      var G__11297 = i__11278 + 1;
      seq__11275 = G__11294;
      chunk__11276 = G__11295;
      count__11277 = G__11296;
      i__11278 = G__11297;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__11275);
      if (temp__4425__auto__) {
        var seq__11275__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__11275__$1)) {
          var c__7539__auto__ = cljs.core.chunk_first(seq__11275__$1);
          var G__11298 = cljs.core.chunk_rest(seq__11275__$1);
          var G__11299 = c__7539__auto__;
          var G__11300 = cljs.core.count(c__7539__auto__);
          var G__11301 = 0;
          seq__11275 = G__11298;
          chunk__11276 = G__11299;
          count__11277 = G__11300;
          i__11278 = G__11301;
          continue;
        } else {
          var vec__11284 = cljs.core.first(seq__11275__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11284, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11284, 1, null);
          var G__11285_11302 = key;
          var G__11286_11303 = this$__$1;
          var G__11287_11304 = oldval;
          var G__11288_11305 = newval;
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11285_11302, G__11286_11303, G__11287_11304, G__11288_11305) : f.call(null, G__11285_11302, G__11286_11303, G__11287_11304, G__11288_11305);
          var G__11306 = cljs.core.next(seq__11275__$1);
          var G__11307 = null;
          var G__11308 = 0;
          var G__11309 = 0;
          seq__11275 = G__11306;
          chunk__11276 = G__11307;
          count__11277 = G__11308;
          i__11278 = G__11309;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__11289 = this$__$1;
  return goog.getUid(G__11289);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom() {
  var G__11313 = arguments.length;
  switch(G__11313) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7805__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__11314) {
  var map__11315 = p__11314;
  var map__11315__$1 = cljs.core.seq_QMARK_(map__11315) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__11315) : map__11315;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11315__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11315__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq11310) {
  var G__11311 = cljs.core.first(seq11310);
  var seq11310__$1 = cljs.core.next(seq11310);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(G__11311, seq11310__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(function() {
        var G__11319 = new_value;
        return validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__11319) : validate.call(null, G__11319);
      }())) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__11320 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__11320) : cljs.core.pr_str.call(null, G__11320);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_() {
  var G__11327 = arguments.length;
  switch(G__11327) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__7805__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__11328 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11328) : f.call(null, G__11328);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__11329 = a.state;
      var G__11330 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11329, G__11330) : f.call(null, G__11329, G__11330);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__11331 = a.state;
      var G__11332 = x;
      var G__11333 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11331, G__11332, G__11333) : f.call(null, G__11331, G__11332, G__11333);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq11321) {
  var G__11322 = cljs.core.first(seq11321);
  var seq11321__$1 = cljs.core.next(seq11321);
  var G__11323 = cljs.core.first(seq11321__$1);
  var seq11321__$2 = cljs.core.next(seq11321__$1);
  var G__11324 = cljs.core.first(seq11321__$2);
  var seq11321__$3 = cljs.core.next(seq11321__$2);
  var G__11325 = cljs.core.first(seq11321__$3);
  var seq11321__$4 = cljs.core.next(seq11321__$3);
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__11322, G__11323, G__11324, G__11325, seq11321__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null)], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed() {
  var G__11336 = arguments.length;
  switch(G__11336) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__11371 = null;
        var G__11371__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__11371__1 = function(result) {
          var G__11337 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11337) : rf.call(null, G__11337);
        };
        var G__11371__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          var v = function() {
            var G__11338 = i;
            var G__11339 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11338, G__11339) : f.call(null, G__11338, G__11339);
          }();
          if (v == null) {
            return result;
          } else {
            var G__11340 = result;
            var G__11341 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11340, G__11341) : rf.call(null, G__11340, G__11341);
          }
        };
        G__11371 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__11371__0.call(this);
            case 1:
              return G__11371__1.call(this, result);
            case 2:
              return G__11371__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11371.cljs$core$IFn$_invoke$arity$0 = G__11371__0;
        G__11371.cljs$core$IFn$_invoke$arity$1 = G__11371__1;
        G__11371.cljs$core$IFn$_invoke$arity$2 = G__11371__2;
        return G__11371;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4425__auto__ = cljs.core.seq(coll__$1);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__7639__auto___11372 = size;
          var i_11373 = 0;
          while (true) {
            if (i_11373 < n__7639__auto___11372) {
              var x_11374 = function() {
                var G__11366 = idx + i_11373;
                var G__11367 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_11373);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11366, G__11367) : f.call(null, G__11366, G__11367);
              }();
              if (x_11374 == null) {
              } else {
                cljs.core.chunk_append(b, x_11374);
              }
              var G__11375 = i_11373 + 1;
              i_11373 = G__11375;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__11368 = idx;
            var G__11369 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11368, G__11369) : f.call(null, G__11368, G__11369);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred() {
  var G__11387 = arguments.length;
  switch(G__11387) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7805__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(function() {
        var G__11403 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__11403) : p.call(null, G__11403);
      }());
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__6742__auto__ = function() {
          var G__11405 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__11405) : p.call(null, G__11405);
        }();
        if (cljs.core.truth_(and__6742__auto__)) {
          var G__11406 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__11406) : p.call(null, G__11406);
        } else {
          return and__6742__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__6742__auto__ = function() {
          var G__11408 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__11408) : p.call(null, G__11408);
        }();
        if (cljs.core.truth_(and__6742__auto__)) {
          var and__6742__auto____$1 = function() {
            var G__11410 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__11410) : p.call(null, G__11410);
          }();
          if (cljs.core.truth_(and__6742__auto____$1)) {
            var G__11411 = z;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__11411) : p.call(null, G__11411);
          } else {
            return and__6742__auto____$1;
          }
        } else {
          return and__6742__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__11573__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__6742__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__6742__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__6742__auto__;
          }
        }());
      };
      var G__11573 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11574__i = 0, G__11574__a = new Array(arguments.length - 3);
          while (G__11574__i < G__11574__a.length) {
            G__11574__a[G__11574__i] = arguments[G__11574__i + 3];
            ++G__11574__i;
          }
          args = new cljs.core.IndexedSeq(G__11574__a, 0);
        }
        return G__11573__delegate.call(this, x, y, z, args);
      };
      G__11573.cljs$lang$maxFixedArity = 3;
      G__11573.cljs$lang$applyTo = function(arglist__11575) {
        var x = cljs.core.first(arglist__11575);
        arglist__11575 = cljs.core.next(arglist__11575);
        var y = cljs.core.first(arglist__11575);
        arglist__11575 = cljs.core.next(arglist__11575);
        var z = cljs.core.first(arglist__11575);
        var args = cljs.core.rest(arglist__11575);
        return G__11573__delegate(x, y, z, args);
      };
      G__11573.cljs$core$IFn$_invoke$arity$variadic = G__11573__delegate;
      return G__11573;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__11576 = null;
          if (arguments.length > 3) {
            var G__11577__i = 0, G__11577__a = new Array(arguments.length - 3);
            while (G__11577__i < G__11577__a.length) {
              G__11577__a[G__11577__i] = arguments[G__11577__i + 3];
              ++G__11577__i;
            }
            G__11576 = new cljs.core.IndexedSeq(G__11577__a, 0);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11576);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__6742__auto__ = function() {
          var G__11443 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11443) : p1.call(null, G__11443);
        }();
        if (cljs.core.truth_(and__6742__auto__)) {
          var G__11444 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11444) : p2.call(null, G__11444);
        } else {
          return and__6742__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__6742__auto__ = function() {
          var G__11446 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11446) : p1.call(null, G__11446);
        }();
        if (cljs.core.truth_(and__6742__auto__)) {
          var and__6742__auto____$1 = function() {
            var G__11448 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11448) : p1.call(null, G__11448);
          }();
          if (cljs.core.truth_(and__6742__auto____$1)) {
            var and__6742__auto____$2 = function() {
              var G__11450 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11450) : p2.call(null, G__11450);
            }();
            if (cljs.core.truth_(and__6742__auto____$2)) {
              var G__11451 = y;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11451) : p2.call(null, G__11451);
            } else {
              return and__6742__auto____$2;
            }
          } else {
            return and__6742__auto____$1;
          }
        } else {
          return and__6742__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__6742__auto__ = function() {
          var G__11453 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11453) : p1.call(null, G__11453);
        }();
        if (cljs.core.truth_(and__6742__auto__)) {
          var and__6742__auto____$1 = function() {
            var G__11455 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11455) : p1.call(null, G__11455);
          }();
          if (cljs.core.truth_(and__6742__auto____$1)) {
            var and__6742__auto____$2 = function() {
              var G__11457 = z;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11457) : p1.call(null, G__11457);
            }();
            if (cljs.core.truth_(and__6742__auto____$2)) {
              var and__6742__auto____$3 = function() {
                var G__11459 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11459) : p2.call(null, G__11459);
              }();
              if (cljs.core.truth_(and__6742__auto____$3)) {
                var and__6742__auto____$4 = function() {
                  var G__11461 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11461) : p2.call(null, G__11461);
                }();
                if (cljs.core.truth_(and__6742__auto____$4)) {
                  var G__11462 = z;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11462) : p2.call(null, G__11462);
                } else {
                  return and__6742__auto____$4;
                }
              } else {
                return and__6742__auto____$3;
              }
            } else {
              return and__6742__auto____$2;
            }
          } else {
            return and__6742__auto____$1;
          }
        } else {
          return and__6742__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__11578__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__6742__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__6742__auto__)) {
            return cljs.core.every_QMARK_(function(and__6742__auto__) {
              return function(p1__11376_SHARP_) {
                var and__6742__auto____$1 = function() {
                  var G__11464 = p1__11376_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11464) : p1.call(null, G__11464);
                }();
                if (cljs.core.truth_(and__6742__auto____$1)) {
                  var G__11465 = p1__11376_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11465) : p2.call(null, G__11465);
                } else {
                  return and__6742__auto____$1;
                }
              };
            }(and__6742__auto__), args);
          } else {
            return and__6742__auto__;
          }
        }());
      };
      var G__11578 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11579__i = 0, G__11579__a = new Array(arguments.length - 3);
          while (G__11579__i < G__11579__a.length) {
            G__11579__a[G__11579__i] = arguments[G__11579__i + 3];
            ++G__11579__i;
          }
          args = new cljs.core.IndexedSeq(G__11579__a, 0);
        }
        return G__11578__delegate.call(this, x, y, z, args);
      };
      G__11578.cljs$lang$maxFixedArity = 3;
      G__11578.cljs$lang$applyTo = function(arglist__11580) {
        var x = cljs.core.first(arglist__11580);
        arglist__11580 = cljs.core.next(arglist__11580);
        var y = cljs.core.first(arglist__11580);
        arglist__11580 = cljs.core.next(arglist__11580);
        var z = cljs.core.first(arglist__11580);
        var args = cljs.core.rest(arglist__11580);
        return G__11578__delegate(x, y, z, args);
      };
      G__11578.cljs$core$IFn$_invoke$arity$variadic = G__11578__delegate;
      return G__11578;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__11581 = null;
          if (arguments.length > 3) {
            var G__11582__i = 0, G__11582__a = new Array(arguments.length - 3);
            while (G__11582__i < G__11582__a.length) {
              G__11582__a[G__11582__i] = arguments[G__11582__i + 3];
              ++G__11582__i;
            }
            G__11581 = new cljs.core.IndexedSeq(G__11582__a, 0);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11581);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__6742__auto__ = function() {
          var G__11511 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11511) : p1.call(null, G__11511);
        }();
        if (cljs.core.truth_(and__6742__auto__)) {
          var and__6742__auto____$1 = function() {
            var G__11513 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11513) : p2.call(null, G__11513);
          }();
          if (cljs.core.truth_(and__6742__auto____$1)) {
            var G__11514 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__11514) : p3.call(null, G__11514);
          } else {
            return and__6742__auto____$1;
          }
        } else {
          return and__6742__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__6742__auto__ = function() {
          var G__11516 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11516) : p1.call(null, G__11516);
        }();
        if (cljs.core.truth_(and__6742__auto__)) {
          var and__6742__auto____$1 = function() {
            var G__11518 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11518) : p2.call(null, G__11518);
          }();
          if (cljs.core.truth_(and__6742__auto____$1)) {
            var and__6742__auto____$2 = function() {
              var G__11520 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__11520) : p3.call(null, G__11520);
            }();
            if (cljs.core.truth_(and__6742__auto____$2)) {
              var and__6742__auto____$3 = function() {
                var G__11522 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11522) : p1.call(null, G__11522);
              }();
              if (cljs.core.truth_(and__6742__auto____$3)) {
                var and__6742__auto____$4 = function() {
                  var G__11524 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11524) : p2.call(null, G__11524);
                }();
                if (cljs.core.truth_(and__6742__auto____$4)) {
                  var G__11525 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__11525) : p3.call(null, G__11525);
                } else {
                  return and__6742__auto____$4;
                }
              } else {
                return and__6742__auto____$3;
              }
            } else {
              return and__6742__auto____$2;
            }
          } else {
            return and__6742__auto____$1;
          }
        } else {
          return and__6742__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__6742__auto__ = function() {
          var G__11527 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11527) : p1.call(null, G__11527);
        }();
        if (cljs.core.truth_(and__6742__auto__)) {
          var and__6742__auto____$1 = function() {
            var G__11529 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11529) : p2.call(null, G__11529);
          }();
          if (cljs.core.truth_(and__6742__auto____$1)) {
            var and__6742__auto____$2 = function() {
              var G__11531 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__11531) : p3.call(null, G__11531);
            }();
            if (cljs.core.truth_(and__6742__auto____$2)) {
              var and__6742__auto____$3 = function() {
                var G__11533 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11533) : p1.call(null, G__11533);
              }();
              if (cljs.core.truth_(and__6742__auto____$3)) {
                var and__6742__auto____$4 = function() {
                  var G__11535 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11535) : p2.call(null, G__11535);
                }();
                if (cljs.core.truth_(and__6742__auto____$4)) {
                  var and__6742__auto____$5 = function() {
                    var G__11537 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__11537) : p3.call(null, G__11537);
                  }();
                  if (cljs.core.truth_(and__6742__auto____$5)) {
                    var and__6742__auto____$6 = function() {
                      var G__11539 = z;
                      return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11539) : p1.call(null, G__11539);
                    }();
                    if (cljs.core.truth_(and__6742__auto____$6)) {
                      var and__6742__auto____$7 = function() {
                        var G__11541 = z;
                        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11541) : p2.call(null, G__11541);
                      }();
                      if (cljs.core.truth_(and__6742__auto____$7)) {
                        var G__11542 = z;
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__11542) : p3.call(null, G__11542);
                      } else {
                        return and__6742__auto____$7;
                      }
                    } else {
                      return and__6742__auto____$6;
                    }
                  } else {
                    return and__6742__auto____$5;
                  }
                } else {
                  return and__6742__auto____$4;
                }
              } else {
                return and__6742__auto____$3;
              }
            } else {
              return and__6742__auto____$2;
            }
          } else {
            return and__6742__auto____$1;
          }
        } else {
          return and__6742__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__11583__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__6742__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__6742__auto__)) {
            return cljs.core.every_QMARK_(function(and__6742__auto__) {
              return function(p1__11377_SHARP_) {
                var and__6742__auto____$1 = function() {
                  var G__11544 = p1__11377_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11544) : p1.call(null, G__11544);
                }();
                if (cljs.core.truth_(and__6742__auto____$1)) {
                  var and__6742__auto____$2 = function() {
                    var G__11546 = p1__11377_SHARP_;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11546) : p2.call(null, G__11546);
                  }();
                  if (cljs.core.truth_(and__6742__auto____$2)) {
                    var G__11547 = p1__11377_SHARP_;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__11547) : p3.call(null, G__11547);
                  } else {
                    return and__6742__auto____$2;
                  }
                } else {
                  return and__6742__auto____$1;
                }
              };
            }(and__6742__auto__), args);
          } else {
            return and__6742__auto__;
          }
        }());
      };
      var G__11583 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11584__i = 0, G__11584__a = new Array(arguments.length - 3);
          while (G__11584__i < G__11584__a.length) {
            G__11584__a[G__11584__i] = arguments[G__11584__i + 3];
            ++G__11584__i;
          }
          args = new cljs.core.IndexedSeq(G__11584__a, 0);
        }
        return G__11583__delegate.call(this, x, y, z, args);
      };
      G__11583.cljs$lang$maxFixedArity = 3;
      G__11583.cljs$lang$applyTo = function(arglist__11585) {
        var x = cljs.core.first(arglist__11585);
        arglist__11585 = cljs.core.next(arglist__11585);
        var y = cljs.core.first(arglist__11585);
        arglist__11585 = cljs.core.next(arglist__11585);
        var z = cljs.core.first(arglist__11585);
        var args = cljs.core.rest(arglist__11585);
        return G__11583__delegate(x, y, z, args);
      };
      G__11583.cljs$core$IFn$_invoke$arity$variadic = G__11583__delegate;
      return G__11583;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__11586 = null;
          if (arguments.length > 3) {
            var G__11587__i = 0, G__11587__a = new Array(arguments.length - 3);
            while (G__11587__i < G__11587__a.length) {
              G__11587__a[G__11587__i] = arguments[G__11587__i + 3];
              ++G__11587__i;
            }
            G__11586 = new cljs.core.IndexedSeq(G__11587__a, 0);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11586);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__11378_SHARP_) {
            var G__11563 = x;
            return p1__11378_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__11378_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11563) : p1__11378_SHARP_.call(null, G__11563);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__11379_SHARP_) {
            var and__6742__auto__ = function() {
              var G__11565 = x;
              return p1__11379_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__11379_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11565) : p1__11379_SHARP_.call(null, G__11565);
            }();
            if (cljs.core.truth_(and__6742__auto__)) {
              var G__11566 = y;
              return p1__11379_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__11379_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11566) : p1__11379_SHARP_.call(null, G__11566);
            } else {
              return and__6742__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__11380_SHARP_) {
            var and__6742__auto__ = function() {
              var G__11568 = x;
              return p1__11380_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__11380_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11568) : p1__11380_SHARP_.call(null, G__11568);
            }();
            if (cljs.core.truth_(and__6742__auto__)) {
              var and__6742__auto____$1 = function() {
                var G__11570 = y;
                return p1__11380_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__11380_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11570) : p1__11380_SHARP_.call(null, G__11570);
              }();
              if (cljs.core.truth_(and__6742__auto____$1)) {
                var G__11571 = z;
                return p1__11380_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__11380_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11571) : p1__11380_SHARP_.call(null, G__11571);
              } else {
                return and__6742__auto____$1;
              }
            } else {
              return and__6742__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__11588__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__6742__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__6742__auto__)) {
              return cljs.core.every_QMARK_(function(and__6742__auto__, ps__$1) {
                return function(p1__11381_SHARP_) {
                  return cljs.core.every_QMARK_(p1__11381_SHARP_, args);
                };
              }(and__6742__auto__, ps__$1), ps__$1);
            } else {
              return and__6742__auto__;
            }
          }());
        };
        var G__11588 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__11589__i = 0, G__11589__a = new Array(arguments.length - 3);
            while (G__11589__i < G__11589__a.length) {
              G__11589__a[G__11589__i] = arguments[G__11589__i + 3];
              ++G__11589__i;
            }
            args = new cljs.core.IndexedSeq(G__11589__a, 0);
          }
          return G__11588__delegate.call(this, x, y, z, args);
        };
        G__11588.cljs$lang$maxFixedArity = 3;
        G__11588.cljs$lang$applyTo = function(arglist__11590) {
          var x = cljs.core.first(arglist__11590);
          arglist__11590 = cljs.core.next(arglist__11590);
          var y = cljs.core.first(arglist__11590);
          arglist__11590 = cljs.core.next(arglist__11590);
          var z = cljs.core.first(arglist__11590);
          var args = cljs.core.rest(arglist__11590);
          return G__11588__delegate(x, y, z, args);
        };
        G__11588.cljs$core$IFn$_invoke$arity$variadic = G__11588__delegate;
        return G__11588;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__11591 = null;
            if (arguments.length > 3) {
              var G__11592__i = 0, G__11592__a = new Array(arguments.length - 3);
              while (G__11592__i < G__11592__a.length) {
                G__11592__a[G__11592__i] = arguments[G__11592__i + 3];
                ++G__11592__i;
              }
              G__11591 = new cljs.core.IndexedSeq(G__11592__a, 0);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11591);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq11382) {
  var G__11383 = cljs.core.first(seq11382);
  var seq11382__$1 = cljs.core.next(seq11382);
  var G__11384 = cljs.core.first(seq11382__$1);
  var seq11382__$2 = cljs.core.next(seq11382__$1);
  var G__11385 = cljs.core.first(seq11382__$2);
  var seq11382__$3 = cljs.core.next(seq11382__$2);
  return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(G__11383, G__11384, G__11385, seq11382__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn() {
  var G__11604 = arguments.length;
  switch(G__11604) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7805__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      var G__11620 = x;
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__11620) : p.call(null, G__11620);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__6754__auto__ = function() {
        var G__11622 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__11622) : p.call(null, G__11622);
      }();
      if (cljs.core.truth_(or__6754__auto__)) {
        return or__6754__auto__;
      } else {
        var G__11623 = y;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__11623) : p.call(null, G__11623);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__6754__auto__ = function() {
        var G__11625 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__11625) : p.call(null, G__11625);
      }();
      if (cljs.core.truth_(or__6754__auto__)) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = function() {
          var G__11627 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__11627) : p.call(null, G__11627);
        }();
        if (cljs.core.truth_(or__6754__auto____$1)) {
          return or__6754__auto____$1;
        } else {
          var G__11628 = z;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__11628) : p.call(null, G__11628);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__11790__delegate = function(x, y, z, args) {
        var or__6754__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__6754__auto__)) {
          return or__6754__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__11790 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11791__i = 0, G__11791__a = new Array(arguments.length - 3);
          while (G__11791__i < G__11791__a.length) {
            G__11791__a[G__11791__i] = arguments[G__11791__i + 3];
            ++G__11791__i;
          }
          args = new cljs.core.IndexedSeq(G__11791__a, 0);
        }
        return G__11790__delegate.call(this, x, y, z, args);
      };
      G__11790.cljs$lang$maxFixedArity = 3;
      G__11790.cljs$lang$applyTo = function(arglist__11792) {
        var x = cljs.core.first(arglist__11792);
        arglist__11792 = cljs.core.next(arglist__11792);
        var y = cljs.core.first(arglist__11792);
        arglist__11792 = cljs.core.next(arglist__11792);
        var z = cljs.core.first(arglist__11792);
        var args = cljs.core.rest(arglist__11792);
        return G__11790__delegate(x, y, z, args);
      };
      G__11790.cljs$core$IFn$_invoke$arity$variadic = G__11790__delegate;
      return G__11790;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__11793 = null;
          if (arguments.length > 3) {
            var G__11794__i = 0, G__11794__a = new Array(arguments.length - 3);
            while (G__11794__i < G__11794__a.length) {
              G__11794__a[G__11794__i] = arguments[G__11794__i + 3];
              ++G__11794__i;
            }
            G__11793 = new cljs.core.IndexedSeq(G__11794__a, 0);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11793);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__6754__auto__ = function() {
        var G__11660 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11660) : p1.call(null, G__11660);
      }();
      if (cljs.core.truth_(or__6754__auto__)) {
        return or__6754__auto__;
      } else {
        var G__11661 = x;
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11661) : p2.call(null, G__11661);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__6754__auto__ = function() {
        var G__11663 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11663) : p1.call(null, G__11663);
      }();
      if (cljs.core.truth_(or__6754__auto__)) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = function() {
          var G__11665 = y;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11665) : p1.call(null, G__11665);
        }();
        if (cljs.core.truth_(or__6754__auto____$1)) {
          return or__6754__auto____$1;
        } else {
          var or__6754__auto____$2 = function() {
            var G__11667 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11667) : p2.call(null, G__11667);
          }();
          if (cljs.core.truth_(or__6754__auto____$2)) {
            return or__6754__auto____$2;
          } else {
            var G__11668 = y;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11668) : p2.call(null, G__11668);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__6754__auto__ = function() {
        var G__11670 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11670) : p1.call(null, G__11670);
      }();
      if (cljs.core.truth_(or__6754__auto__)) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = function() {
          var G__11672 = y;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11672) : p1.call(null, G__11672);
        }();
        if (cljs.core.truth_(or__6754__auto____$1)) {
          return or__6754__auto____$1;
        } else {
          var or__6754__auto____$2 = function() {
            var G__11674 = z;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11674) : p1.call(null, G__11674);
          }();
          if (cljs.core.truth_(or__6754__auto____$2)) {
            return or__6754__auto____$2;
          } else {
            var or__6754__auto____$3 = function() {
              var G__11676 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11676) : p2.call(null, G__11676);
            }();
            if (cljs.core.truth_(or__6754__auto____$3)) {
              return or__6754__auto____$3;
            } else {
              var or__6754__auto____$4 = function() {
                var G__11678 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11678) : p2.call(null, G__11678);
              }();
              if (cljs.core.truth_(or__6754__auto____$4)) {
                return or__6754__auto____$4;
              } else {
                var G__11679 = z;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11679) : p2.call(null, G__11679);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__11795__delegate = function(x, y, z, args) {
        var or__6754__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__6754__auto__)) {
          return or__6754__auto__;
        } else {
          return cljs.core.some(function(or__6754__auto__) {
            return function(p1__11593_SHARP_) {
              var or__6754__auto____$1 = function() {
                var G__11681 = p1__11593_SHARP_;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11681) : p1.call(null, G__11681);
              }();
              if (cljs.core.truth_(or__6754__auto____$1)) {
                return or__6754__auto____$1;
              } else {
                var G__11682 = p1__11593_SHARP_;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11682) : p2.call(null, G__11682);
              }
            };
          }(or__6754__auto__), args);
        }
      };
      var G__11795 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11796__i = 0, G__11796__a = new Array(arguments.length - 3);
          while (G__11796__i < G__11796__a.length) {
            G__11796__a[G__11796__i] = arguments[G__11796__i + 3];
            ++G__11796__i;
          }
          args = new cljs.core.IndexedSeq(G__11796__a, 0);
        }
        return G__11795__delegate.call(this, x, y, z, args);
      };
      G__11795.cljs$lang$maxFixedArity = 3;
      G__11795.cljs$lang$applyTo = function(arglist__11797) {
        var x = cljs.core.first(arglist__11797);
        arglist__11797 = cljs.core.next(arglist__11797);
        var y = cljs.core.first(arglist__11797);
        arglist__11797 = cljs.core.next(arglist__11797);
        var z = cljs.core.first(arglist__11797);
        var args = cljs.core.rest(arglist__11797);
        return G__11795__delegate(x, y, z, args);
      };
      G__11795.cljs$core$IFn$_invoke$arity$variadic = G__11795__delegate;
      return G__11795;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__11798 = null;
          if (arguments.length > 3) {
            var G__11799__i = 0, G__11799__a = new Array(arguments.length - 3);
            while (G__11799__i < G__11799__a.length) {
              G__11799__a[G__11799__i] = arguments[G__11799__i + 3];
              ++G__11799__i;
            }
            G__11798 = new cljs.core.IndexedSeq(G__11799__a, 0);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11798);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__6754__auto__ = function() {
        var G__11728 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11728) : p1.call(null, G__11728);
      }();
      if (cljs.core.truth_(or__6754__auto__)) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = function() {
          var G__11730 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11730) : p2.call(null, G__11730);
        }();
        if (cljs.core.truth_(or__6754__auto____$1)) {
          return or__6754__auto____$1;
        } else {
          var G__11731 = x;
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__11731) : p3.call(null, G__11731);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__6754__auto__ = function() {
        var G__11733 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11733) : p1.call(null, G__11733);
      }();
      if (cljs.core.truth_(or__6754__auto__)) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = function() {
          var G__11735 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11735) : p2.call(null, G__11735);
        }();
        if (cljs.core.truth_(or__6754__auto____$1)) {
          return or__6754__auto____$1;
        } else {
          var or__6754__auto____$2 = function() {
            var G__11737 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__11737) : p3.call(null, G__11737);
          }();
          if (cljs.core.truth_(or__6754__auto____$2)) {
            return or__6754__auto____$2;
          } else {
            var or__6754__auto____$3 = function() {
              var G__11739 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11739) : p1.call(null, G__11739);
            }();
            if (cljs.core.truth_(or__6754__auto____$3)) {
              return or__6754__auto____$3;
            } else {
              var or__6754__auto____$4 = function() {
                var G__11741 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11741) : p2.call(null, G__11741);
              }();
              if (cljs.core.truth_(or__6754__auto____$4)) {
                return or__6754__auto____$4;
              } else {
                var G__11742 = y;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__11742) : p3.call(null, G__11742);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__6754__auto__ = function() {
        var G__11744 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11744) : p1.call(null, G__11744);
      }();
      if (cljs.core.truth_(or__6754__auto__)) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = function() {
          var G__11746 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11746) : p2.call(null, G__11746);
        }();
        if (cljs.core.truth_(or__6754__auto____$1)) {
          return or__6754__auto____$1;
        } else {
          var or__6754__auto____$2 = function() {
            var G__11748 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__11748) : p3.call(null, G__11748);
          }();
          if (cljs.core.truth_(or__6754__auto____$2)) {
            return or__6754__auto____$2;
          } else {
            var or__6754__auto____$3 = function() {
              var G__11750 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11750) : p1.call(null, G__11750);
            }();
            if (cljs.core.truth_(or__6754__auto____$3)) {
              return or__6754__auto____$3;
            } else {
              var or__6754__auto____$4 = function() {
                var G__11752 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11752) : p2.call(null, G__11752);
              }();
              if (cljs.core.truth_(or__6754__auto____$4)) {
                return or__6754__auto____$4;
              } else {
                var or__6754__auto____$5 = function() {
                  var G__11754 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__11754) : p3.call(null, G__11754);
                }();
                if (cljs.core.truth_(or__6754__auto____$5)) {
                  return or__6754__auto____$5;
                } else {
                  var or__6754__auto____$6 = function() {
                    var G__11756 = z;
                    return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11756) : p1.call(null, G__11756);
                  }();
                  if (cljs.core.truth_(or__6754__auto____$6)) {
                    return or__6754__auto____$6;
                  } else {
                    var or__6754__auto____$7 = function() {
                      var G__11758 = z;
                      return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11758) : p2.call(null, G__11758);
                    }();
                    if (cljs.core.truth_(or__6754__auto____$7)) {
                      return or__6754__auto____$7;
                    } else {
                      var G__11759 = z;
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__11759) : p3.call(null, G__11759);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__11800__delegate = function(x, y, z, args) {
        var or__6754__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__6754__auto__)) {
          return or__6754__auto__;
        } else {
          return cljs.core.some(function(or__6754__auto__) {
            return function(p1__11594_SHARP_) {
              var or__6754__auto____$1 = function() {
                var G__11761 = p1__11594_SHARP_;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11761) : p1.call(null, G__11761);
              }();
              if (cljs.core.truth_(or__6754__auto____$1)) {
                return or__6754__auto____$1;
              } else {
                var or__6754__auto____$2 = function() {
                  var G__11763 = p1__11594_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11763) : p2.call(null, G__11763);
                }();
                if (cljs.core.truth_(or__6754__auto____$2)) {
                  return or__6754__auto____$2;
                } else {
                  var G__11764 = p1__11594_SHARP_;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__11764) : p3.call(null, G__11764);
                }
              }
            };
          }(or__6754__auto__), args);
        }
      };
      var G__11800 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11801__i = 0, G__11801__a = new Array(arguments.length - 3);
          while (G__11801__i < G__11801__a.length) {
            G__11801__a[G__11801__i] = arguments[G__11801__i + 3];
            ++G__11801__i;
          }
          args = new cljs.core.IndexedSeq(G__11801__a, 0);
        }
        return G__11800__delegate.call(this, x, y, z, args);
      };
      G__11800.cljs$lang$maxFixedArity = 3;
      G__11800.cljs$lang$applyTo = function(arglist__11802) {
        var x = cljs.core.first(arglist__11802);
        arglist__11802 = cljs.core.next(arglist__11802);
        var y = cljs.core.first(arglist__11802);
        arglist__11802 = cljs.core.next(arglist__11802);
        var z = cljs.core.first(arglist__11802);
        var args = cljs.core.rest(arglist__11802);
        return G__11800__delegate(x, y, z, args);
      };
      G__11800.cljs$core$IFn$_invoke$arity$variadic = G__11800__delegate;
      return G__11800;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__11803 = null;
          if (arguments.length > 3) {
            var G__11804__i = 0, G__11804__a = new Array(arguments.length - 3);
            while (G__11804__i < G__11804__a.length) {
              G__11804__a[G__11804__i] = arguments[G__11804__i + 3];
              ++G__11804__i;
            }
            G__11803 = new cljs.core.IndexedSeq(G__11804__a, 0);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11803);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__11595_SHARP_) {
            var G__11780 = x;
            return p1__11595_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__11595_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11780) : p1__11595_SHARP_.call(null, G__11780);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__11596_SHARP_) {
            var or__6754__auto__ = function() {
              var G__11782 = x;
              return p1__11596_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__11596_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11782) : p1__11596_SHARP_.call(null, G__11782);
            }();
            if (cljs.core.truth_(or__6754__auto__)) {
              return or__6754__auto__;
            } else {
              var G__11783 = y;
              return p1__11596_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__11596_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11783) : p1__11596_SHARP_.call(null, G__11783);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__11597_SHARP_) {
            var or__6754__auto__ = function() {
              var G__11785 = x;
              return p1__11597_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__11597_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11785) : p1__11597_SHARP_.call(null, G__11785);
            }();
            if (cljs.core.truth_(or__6754__auto__)) {
              return or__6754__auto__;
            } else {
              var or__6754__auto____$1 = function() {
                var G__11787 = y;
                return p1__11597_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__11597_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11787) : p1__11597_SHARP_.call(null, G__11787);
              }();
              if (cljs.core.truth_(or__6754__auto____$1)) {
                return or__6754__auto____$1;
              } else {
                var G__11788 = z;
                return p1__11597_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__11597_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11788) : p1__11597_SHARP_.call(null, G__11788);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__11805__delegate = function(x, y, z, args) {
          var or__6754__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__6754__auto__)) {
            return or__6754__auto__;
          } else {
            return cljs.core.some(function(or__6754__auto__, ps__$1) {
              return function(p1__11598_SHARP_) {
                return cljs.core.some(p1__11598_SHARP_, args);
              };
            }(or__6754__auto__, ps__$1), ps__$1);
          }
        };
        var G__11805 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__11806__i = 0, G__11806__a = new Array(arguments.length - 3);
            while (G__11806__i < G__11806__a.length) {
              G__11806__a[G__11806__i] = arguments[G__11806__i + 3];
              ++G__11806__i;
            }
            args = new cljs.core.IndexedSeq(G__11806__a, 0);
          }
          return G__11805__delegate.call(this, x, y, z, args);
        };
        G__11805.cljs$lang$maxFixedArity = 3;
        G__11805.cljs$lang$applyTo = function(arglist__11807) {
          var x = cljs.core.first(arglist__11807);
          arglist__11807 = cljs.core.next(arglist__11807);
          var y = cljs.core.first(arglist__11807);
          arglist__11807 = cljs.core.next(arglist__11807);
          var z = cljs.core.first(arglist__11807);
          var args = cljs.core.rest(arglist__11807);
          return G__11805__delegate(x, y, z, args);
        };
        G__11805.cljs$core$IFn$_invoke$arity$variadic = G__11805__delegate;
        return G__11805;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__11808 = null;
            if (arguments.length > 3) {
              var G__11809__i = 0, G__11809__a = new Array(arguments.length - 3);
              while (G__11809__i < G__11809__a.length) {
                G__11809__a[G__11809__i] = arguments[G__11809__i + 3];
                ++G__11809__i;
              }
              G__11808 = new cljs.core.IndexedSeq(G__11809__a, 0);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11808);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq11599) {
  var G__11600 = cljs.core.first(seq11599);
  var seq11599__$1 = cljs.core.next(seq11599);
  var G__11601 = cljs.core.first(seq11599__$1);
  var seq11599__$2 = cljs.core.next(seq11599__$1);
  var G__11602 = cljs.core.first(seq11599__$2);
  var seq11599__$3 = cljs.core.next(seq11599__$2);
  return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(G__11600, G__11601, G__11602, seq11599__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map() {
  var G__11817 = arguments.length;
  switch(G__11817) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__7805__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__11833 = null;
      var G__11833__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__11833__1 = function(result) {
        var G__11818 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11818) : rf.call(null, G__11818);
      };
      var G__11833__2 = function(result, input) {
        var G__11819 = result;
        var G__11820 = function() {
          var G__11821 = input;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11821) : f.call(null, G__11821);
        }();
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11819, G__11820) : rf.call(null, G__11819, G__11820);
      };
      var G__11833__3 = function() {
        var G__11834__delegate = function(result, input, inputs) {
          var G__11822 = result;
          var G__11823 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11822, G__11823) : rf.call(null, G__11822, G__11823);
        };
        var G__11834 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__11835__i = 0, G__11835__a = new Array(arguments.length - 2);
            while (G__11835__i < G__11835__a.length) {
              G__11835__a[G__11835__i] = arguments[G__11835__i + 2];
              ++G__11835__i;
            }
            inputs = new cljs.core.IndexedSeq(G__11835__a, 0);
          }
          return G__11834__delegate.call(this, result, input, inputs);
        };
        G__11834.cljs$lang$maxFixedArity = 2;
        G__11834.cljs$lang$applyTo = function(arglist__11836) {
          var result = cljs.core.first(arglist__11836);
          arglist__11836 = cljs.core.next(arglist__11836);
          var input = cljs.core.first(arglist__11836);
          var inputs = cljs.core.rest(arglist__11836);
          return G__11834__delegate(result, input, inputs);
        };
        G__11834.cljs$core$IFn$_invoke$arity$variadic = G__11834__delegate;
        return G__11834;
      }();
      G__11833 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__11833__0.call(this);
          case 1:
            return G__11833__1.call(this, result);
          case 2:
            return G__11833__2.call(this, result, input);
          default:
            var G__11837 = null;
            if (arguments.length > 2) {
              var G__11838__i = 0, G__11838__a = new Array(arguments.length - 2);
              while (G__11838__i < G__11838__a.length) {
                G__11838__a[G__11838__i] = arguments[G__11838__i + 2];
                ++G__11838__i;
              }
              G__11837 = new cljs.core.IndexedSeq(G__11838__a, 0);
            }
            return G__11833__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__11837);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11833.cljs$lang$maxFixedArity = 2;
      G__11833.cljs$lang$applyTo = G__11833__3.cljs$lang$applyTo;
      G__11833.cljs$core$IFn$_invoke$arity$0 = G__11833__0;
      G__11833.cljs$core$IFn$_invoke$arity$1 = G__11833__1;
      G__11833.cljs$core$IFn$_invoke$arity$2 = G__11833__2;
      G__11833.cljs$core$IFn$_invoke$arity$variadic = G__11833__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__11833;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__7639__auto___11839 = size;
        var i_11840 = 0;
        while (true) {
          if (i_11840 < n__7639__auto___11839) {
            cljs.core.chunk_append(b, function() {
              var G__11824 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_11840);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11824) : f.call(null, G__11824);
            }());
            var G__11841 = i_11840 + 1;
            i_11840 = G__11841;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__11825 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11825) : f.call(null, G__11825);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__11826 = cljs.core.first(s1);
        var G__11827 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11826, G__11827) : f.call(null, G__11826, G__11827);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__11828 = cljs.core.first(s1);
        var G__11829 = cljs.core.first(s2);
        var G__11830 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11828, G__11829, G__11830) : f.call(null, G__11828, G__11829, G__11830);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__11810_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__11810_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq11811) {
  var G__11812 = cljs.core.first(seq11811);
  var seq11811__$1 = cljs.core.next(seq11811);
  var G__11813 = cljs.core.first(seq11811__$1);
  var seq11811__$2 = cljs.core.next(seq11811__$1);
  var G__11814 = cljs.core.first(seq11811__$2);
  var seq11811__$3 = cljs.core.next(seq11811__$2);
  var G__11815 = cljs.core.first(seq11811__$3);
  var seq11811__$4 = cljs.core.next(seq11811__$3);
  return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(G__11812, G__11813, G__11814, G__11815, seq11811__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take() {
  var G__11843 = arguments.length;
  switch(G__11843) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__11848 = null;
        var G__11848__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__11848__1 = function(result) {
          var G__11844 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11844) : rf.call(null, G__11844);
        };
        var G__11848__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          var result__$1 = n__$1 > 0 ? function() {
            var G__11845 = result;
            var G__11846 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11845, G__11846) : rf.call(null, G__11845, G__11846);
          }() : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__11848 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__11848__0.call(this);
            case 1:
              return G__11848__1.call(this, result);
            case 2:
              return G__11848__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11848.cljs$core$IFn$_invoke$arity$0 = G__11848__0;
        G__11848.cljs$core$IFn$_invoke$arity$1 = G__11848__1;
        G__11848.cljs$core$IFn$_invoke$arity$2 = G__11848__2;
        return G__11848;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4425__auto__ = cljs.core.seq(coll);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop() {
  var G__11850 = arguments.length;
  switch(G__11850) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__11855 = null;
        var G__11855__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__11855__1 = function(result) {
          var G__11851 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11851) : rf.call(null, G__11851);
        };
        var G__11855__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            var G__11852 = result;
            var G__11853 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11852, G__11853) : rf.call(null, G__11852, G__11853);
          }
        };
        G__11855 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__11855__0.call(this);
            case 1:
              return G__11855__1.call(this, result);
            case 2:
              return G__11855__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11855.cljs$core$IFn$_invoke$arity$0 = G__11855__0;
        G__11855.cljs$core$IFn$_invoke$arity$1 = G__11855__1;
        G__11855.cljs$core$IFn$_invoke$arity$2 = G__11855__2;
        return G__11855;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__11856 = n__$1 - 1;
        var G__11857 = cljs.core.rest(s);
        n__$1 = G__11856;
        coll__$1 = G__11857;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last() {
  var G__11859 = arguments.length;
  switch(G__11859) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__11861 = cljs.core.next(s);
      var G__11862 = cljs.core.next(lead);
      s = G__11861;
      lead = G__11862;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while() {
  var G__11864 = arguments.length;
  switch(G__11864) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__11872 = null;
        var G__11872__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__11872__1 = function(result) {
          var G__11865 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11865) : rf.call(null, G__11865);
        };
        var G__11872__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__6742__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__6742__auto__)) {
              var G__11866 = input;
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11866) : pred.call(null, G__11866);
            } else {
              return and__6742__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            var G__11867 = result;
            var G__11868 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11867, G__11868) : rf.call(null, G__11867, G__11868);
          }
        };
        G__11872 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__11872__0.call(this);
            case 1:
              return G__11872__1.call(this, result);
            case 2:
              return G__11872__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11872.cljs$core$IFn$_invoke$arity$0 = G__11872__0;
        G__11872.cljs$core$IFn$_invoke$arity$1 = G__11872__1;
        G__11872.cljs$core$IFn$_invoke$arity$2 = G__11872__2;
        return G__11872;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__6742__auto__ = s;
        if (and__6742__auto__) {
          var G__11870 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__11870) : pred__$1.call(null, G__11870);
        } else {
          return and__6742__auto__;
        }
      }())) {
        var G__11873 = pred__$1;
        var G__11874 = cljs.core.rest(s);
        pred__$1 = G__11873;
        coll__$1 = G__11874;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.cycle = function cljs$core$cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cljs$core$cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function cljs$core$repeat() {
  var G__11877 = arguments.length;
  switch(G__11877) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(x, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
  }, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly() {
  var G__11880 = arguments.length;
  switch(G__11880) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }(), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return cljs$core$iterate(f, function() {
      var G__11885 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11885) : f.call(null, G__11885);
    }());
  }, null, null));
};
cljs.core.interleave = function cljs$core$interleave() {
  var G__11890 = arguments.length;
  switch(G__11890) {
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7805__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq11886) {
  var G__11887 = cljs.core.first(seq11886);
  var seq11886__$1 = cljs.core.next(seq11886);
  var G__11888 = cljs.core.first(seq11886__$1);
  var seq11886__$2 = cljs.core.next(seq11886__$1);
  return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(G__11887, G__11888, seq11886__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose() {
  var G__11893 = arguments.length;
  switch(G__11893) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__11902 = null;
        var G__11902__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__11902__1 = function(result) {
          var G__11894 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11894) : rf.call(null, G__11894);
        };
        var G__11902__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = function() {
              var G__11895 = result;
              var G__11896 = sep;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11895, G__11896) : rf.call(null, G__11895, G__11896);
            }();
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              var G__11897 = sepr;
              var G__11898 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11897, G__11898) : rf.call(null, G__11897, G__11898);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            var G__11899 = result;
            var G__11900 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11899, G__11900) : rf.call(null, G__11899, G__11900);
          }
        };
        G__11902 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__11902__0.call(this);
            case 1:
              return G__11902__1.call(this, result);
            case 2:
              return G__11902__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11902.cljs$core$IFn$_invoke$arity$0 = G__11902__0;
        G__11902.cljs$core$IFn$_invoke$arity$1 = G__11902__1;
        G__11902.cljs$core$IFn$_invoke$arity$2 = G__11902__2;
        return G__11902;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4423__auto__ = cljs.core.seq(coll);
      if (temp__4423__auto__) {
        var coll__$1 = temp__4423__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat() {
  var G__11914 = arguments.length;
  switch(G__11914) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7805__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq11911) {
  var G__11912 = cljs.core.first(seq11911);
  var seq11911__$1 = cljs.core.next(seq11911);
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(G__11912, seq11911__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter() {
  var G__11917 = arguments.length;
  switch(G__11917) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__11925 = null;
      var G__11925__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__11925__1 = function(result) {
        var G__11918 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11918) : rf.call(null, G__11918);
      };
      var G__11925__2 = function(result, input) {
        if (cljs.core.truth_(function() {
          var G__11919 = input;
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11919) : pred.call(null, G__11919);
        }())) {
          var G__11920 = result;
          var G__11921 = input;
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11920, G__11921) : rf.call(null, G__11920, G__11921);
        } else {
          return result;
        }
      };
      G__11925 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__11925__0.call(this);
          case 1:
            return G__11925__1.call(this, result);
          case 2:
            return G__11925__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11925.cljs$core$IFn$_invoke$arity$0 = G__11925__0;
      G__11925.cljs$core$IFn$_invoke$arity$1 = G__11925__1;
      G__11925.cljs$core$IFn$_invoke$arity$2 = G__11925__2;
      return G__11925;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__7639__auto___11926 = size;
        var i_11927 = 0;
        while (true) {
          if (i_11927 < n__7639__auto___11926) {
            if (cljs.core.truth_(function() {
              var G__11922 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_11927);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11922) : pred.call(null, G__11922);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_11927));
            } else {
            }
            var G__11928 = i_11927 + 1;
            i_11927 = G__11928;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(function() {
          var G__11923 = f;
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11923) : pred.call(null, G__11923);
        }())) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove() {
  var G__11930 = arguments.length;
  switch(G__11930) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(function() {
        var G__11938 = node;
        return branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__11938) : branch_QMARK_.call(null, G__11938);
      }()) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.array_seq([function() {
        var G__11939 = node;
        return children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__11939) : children.call(null, G__11939);
      }()], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__11940_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__11940_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into() {
  var G__11942 = arguments.length;
  switch(G__11942) {
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (function() {
      var G__11943 = to;
      if (G__11943) {
        var bit__7421__auto__ = G__11943.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__7421__auto__ || G__11943.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (function() {
    var G__11944 = to;
    if (G__11944) {
      var bit__7421__auto__ = G__11944.cljs$lang$protocol_mask$partition1$ & 4;
      if (bit__7421__auto__ || G__11944.cljs$core$IEditableCollection$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv() {
  var G__11952 = arguments.length;
  switch(G__11952) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__7805__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, function() {
      var G__11953 = o;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11953) : f.call(null, G__11953);
    }());
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq11946) {
  var G__11947 = cljs.core.first(seq11946);
  var seq11946__$1 = cljs.core.next(seq11946);
  var G__11948 = cljs.core.first(seq11946__$1);
  var seq11946__$2 = cljs.core.next(seq11946__$1);
  var G__11949 = cljs.core.first(seq11946__$2);
  var seq11946__$3 = cljs.core.next(seq11946__$2);
  var G__11950 = cljs.core.first(seq11946__$3);
  var seq11946__$4 = cljs.core.next(seq11946__$3);
  return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(G__11947, G__11948, G__11949, G__11950, seq11946__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(function() {
      var G__11956 = o;
      return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11956) : pred.call(null, G__11956);
    }())) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition() {
  var G__11958 = arguments.length;
  switch(G__11958) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in() {
  var G__11961 = arguments.length;
  switch(G__11961) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (ks__$1) {
      if (!function() {
        var G__11962 = m__$1;
        if (G__11962) {
          var bit__7428__auto__ = G__11962.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__7428__auto__ || G__11962.cljs$core$ILookup$) {
            return true;
          } else {
            if (!G__11962.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__11962);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__11962);
        }
      }()) {
        return not_found;
      } else {
        var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
        if (sentinel === m__$2) {
          return not_found;
        } else {
          var G__11964 = sentinel;
          var G__11965 = m__$2;
          var G__11966 = cljs.core.next(ks__$1);
          sentinel = G__11964;
          m__$1 = G__11965;
          ks__$1 = G__11966;
          continue;
        }
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__11967, v) {
  var vec__11972 = p__11967;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11972, 0, null);
  var ks = cljs.core.nthnext(vec__11972, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in() {
  var G__11981 = arguments.length;
  switch(G__11981) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 6), 0);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__7805__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__11982, f) {
  var vec__11983 = p__11982;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11983, 0, null);
  var ks = cljs.core.nthnext(vec__11983, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__11984 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11984) : f.call(null, G__11984);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__11985, f, a) {
  var vec__11986 = p__11985;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11986, 0, null);
  var ks = cljs.core.nthnext(vec__11986, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__11987 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__11988 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11987, G__11988) : f.call(null, G__11987, G__11988);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__11989, f, a, b) {
  var vec__11990 = p__11989;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11990, 0, null);
  var ks = cljs.core.nthnext(vec__11990, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__11991 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__11992 = a;
      var G__11993 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11991, G__11992, G__11993) : f.call(null, G__11991, G__11992, G__11993);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__11994, f, a, b, c) {
  var vec__11995 = p__11994;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11995, 0, null);
  var ks = cljs.core.nthnext(vec__11995, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__11996 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__11997 = a;
      var G__11998 = b;
      var G__11999 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11996, G__11997, G__11998, G__11999) : f.call(null, G__11996, G__11997, G__11998, G__11999);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__12000, f, a, b, c, args) {
  var vec__12001 = p__12000;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12001, 0, null);
  var ks = cljs.core.nthnext(vec__12001, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq11973) {
  var G__11974 = cljs.core.first(seq11973);
  var seq11973__$1 = cljs.core.next(seq11973);
  var G__11975 = cljs.core.first(seq11973__$1);
  var seq11973__$2 = cljs.core.next(seq11973__$1);
  var G__11976 = cljs.core.first(seq11973__$2);
  var seq11973__$3 = cljs.core.next(seq11973__$2);
  var G__11977 = cljs.core.first(seq11973__$3);
  var seq11973__$4 = cljs.core.next(seq11973__$3);
  var G__11978 = cljs.core.first(seq11973__$4);
  var seq11973__$5 = cljs.core.next(seq11973__$4);
  var G__11979 = cljs.core.first(seq11973__$5);
  var seq11973__$6 = cljs.core.next(seq11973__$5);
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(G__11974, G__11975, G__11976, G__11977, G__11978, G__11979, seq11973__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update() {
  var G__12011 = arguments.length;
  switch(G__12011) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 6), 0);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__7805__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__12012 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12012) : f.call(null, G__12012);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__12013 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__12014 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12013, G__12014) : f.call(null, G__12013, G__12014);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__12015 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__12016 = x;
    var G__12017 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12015, G__12016, G__12017) : f.call(null, G__12015, G__12016, G__12017);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__12018 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__12019 = x;
    var G__12020 = y;
    var G__12021 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12018, G__12019, G__12020, G__12021) : f.call(null, G__12018, G__12019, G__12020, G__12021);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq12003) {
  var G__12004 = cljs.core.first(seq12003);
  var seq12003__$1 = cljs.core.next(seq12003);
  var G__12005 = cljs.core.first(seq12003__$1);
  var seq12003__$2 = cljs.core.next(seq12003__$1);
  var G__12006 = cljs.core.first(seq12003__$2);
  var seq12003__$3 = cljs.core.next(seq12003__$2);
  var G__12007 = cljs.core.first(seq12003__$3);
  var seq12003__$4 = cljs.core.next(seq12003__$3);
  var G__12008 = cljs.core.first(seq12003__$4);
  var seq12003__$5 = cljs.core.next(seq12003__$4);
  var G__12009 = cljs.core.first(seq12003__$5);
  var seq12003__$6 = cljs.core.next(seq12003__$5);
  return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(G__12004, G__12005, G__12006, G__12007, G__12008, G__12009, seq12003__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__12023 = ll - 5;
      var G__12024 = r;
      ll = G__12023;
      ret = G__12024;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = cljs$core$push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__12029 = cljs.core.pv_aget(node, 0);
      var G__12030 = level - 5;
      node = G__12029;
      level = G__12030;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__12031 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__12032 = level - 5;
        node = G__12031;
        level = G__12032;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, cljs$core$do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__12042 = init__$2;
              var G__12043 = j + i;
              var G__12044 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12042, G__12043, G__12044) : f.call(null, G__12042, G__12043, G__12044);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__12055 = j + 1;
              var G__12056 = init__$3;
              j = G__12055;
              init__$2 = G__12056;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__12045 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12045) : cljs.core.deref.call(null, G__12045);
      } else {
        var G__12057 = i + len;
        var G__12058 = init__$2;
        i = G__12057;
        init__$1 = G__12058;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7170__auto__ = self__.__hash;
  if (!(h__7170__auto__ == null)) {
    return h__7170__auto__;
  } else {
    var h__7170__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__7170__auto____$1;
    return h__7170__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, function() {
    var G__12046 = self__.root;
    return cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__12046) : cljs.core.tv_editable_root.call(null, G__12046);
  }(), function() {
    var G__12047 = self__.tail;
    return cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__12047) : cljs.core.tv_editable_tail.call(null, G__12047);
  }());
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__12048 = init__$2;
              var G__12049 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12048, G__12049) : f.call(null, G__12048, G__12049);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__12059 = j + 1;
              var G__12060 = init__$3;
              j = G__12059;
              init__$2 = G__12060;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__12050 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12050) : cljs.core.deref.call(null, G__12050);
      } else {
        var G__12061 = i + len;
        var G__12062 = init__$2;
        i = G__12061;
        init__$1 = G__12062;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__12051 = coll__$1;
      var G__12052 = cljs.core.first_array_for_longvec(coll__$1);
      var G__12053 = 0;
      var G__12054 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__12051, G__12052, G__12053, G__12054) : cljs.core.chunked_seq.call(null, G__12051, G__12052, G__12053, G__12054);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__7639__auto___12063 = len;
    var i_12064 = 0;
    while (true) {
      if (i_12064 < n__7639__auto___12063) {
        new_tail[i_12064] = self__.tail[i_12064];
        var G__12065 = i_12064 + 1;
        i_12064 = G__12065;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__12066 = null;
  var G__12066__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__12066__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__12066 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12066__2.call(this, self__, k);
      case 3:
        return G__12066__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12066.cljs$core$IFn$_invoke$arity$2 = G__12066__2;
  G__12066.cljs$core$IFn$_invoke$arity$3 = G__12066__3;
  return G__12066;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args12041) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12041)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__12067 = i + 1;
        var G__12068 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__12067;
        out = G__12068;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7730__auto__ = this;
  return cljs.core.es6_iterator(this__7730__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.array_QMARK_(coll)) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function cljs$core$vector() {
  var argseq__7794__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__7794__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq12069) {
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12069));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__12070 = self__.vec;
      var G__12071 = self__.node;
      var G__12072 = self__.i;
      var G__12073 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__12070, G__12071, G__12072, G__12073) : cljs.core.chunked_seq.call(null, G__12070, G__12071, G__12072, G__12073);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7170__auto__ = self__.__hash;
  if (!(h__7170__auto__ == null)) {
    return h__7170__auto__;
  } else {
    var h__7170__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__7170__auto____$1;
    return h__7170__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__12074 = self__.vec;
    var G__12075 = self__.i + self__.off;
    var G__12076 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__12074, G__12075, G__12076) : cljs.core.subvec.call(null, G__12074, G__12075, G__12076);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__12077 = self__.vec;
    var G__12078 = self__.i + self__.off;
    var G__12079 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__12077, G__12078, G__12079) : cljs.core.subvec.call(null, G__12077, G__12078, G__12079);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__12080 = self__.vec;
      var G__12081 = self__.node;
      var G__12082 = self__.i;
      var G__12083 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__12080, G__12081, G__12082, G__12083) : cljs.core.chunked_seq.call(null, G__12080, G__12081, G__12082, G__12083);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__12084 = self__.vec;
    var G__12085 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__12086 = end;
    var G__12087 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__12084, G__12085, G__12086, G__12087) : cljs.core.chunked_seq.call(null, G__12084, G__12085, G__12086, G__12087);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  var G__12088 = self__.vec;
  var G__12089 = self__.node;
  var G__12090 = self__.i;
  var G__12091 = self__.off;
  var G__12092 = m;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__12088, G__12089, G__12090, G__12091, G__12092) : cljs.core.chunked_seq.call(null, G__12088, G__12089, G__12090, G__12091, G__12092);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__12093 = self__.vec;
    var G__12094 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__12095 = end;
    var G__12096 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__12093, G__12094, G__12095, G__12096) : cljs.core.chunked_seq.call(null, G__12093, G__12094, G__12095, G__12096);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7730__auto__ = this;
  return cljs.core.es6_iterator(this__7730__auto__);
};
cljs.core.chunked_seq = function cljs$core$chunked_seq() {
  var G__12098 = arguments.length;
  switch(G__12098) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__12101 = init__$1;
        var G__12102 = j;
        var G__12103 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12101, G__12102, G__12103) : f.call(null, G__12101, G__12102, G__12103);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__12104 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12104) : cljs.core.deref.call(null, G__12104);
      } else {
        var G__12126 = i + 1;
        var G__12127 = j + 1;
        var G__12128 = init__$2;
        i = G__12126;
        j = G__12127;
        init__$1 = G__12128;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__12105 = self__.meta;
  var G__12106 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__12107 = self__.start;
  var G__12108 = function() {
    var x__7066__auto__ = self__.end;
    var y__7067__auto__ = v_pos + 1;
    return x__7066__auto__ > y__7067__auto__ ? x__7066__auto__ : y__7067__auto__;
  }();
  var G__12109 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__12105, G__12106, G__12107, G__12108, G__12109) : cljs.core.build_subvec.call(null, G__12105, G__12106, G__12107, G__12108, G__12109);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__12110 = self__.meta;
    var G__12111 = self__.v;
    var G__12112 = self__.start;
    var G__12113 = self__.end - 1;
    var G__12114 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__12110, G__12111, G__12112, G__12113, G__12114) : cljs.core.build_subvec.call(null, G__12110, G__12111, G__12112, G__12113, G__12114);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7170__auto__ = self__.__hash;
  if (!(h__7170__auto__ == null)) {
    return h__7170__auto__;
  } else {
    var h__7170__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__7170__auto____$1;
    return h__7170__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  var G__12116 = meta__$1;
  var G__12117 = self__.v;
  var G__12118 = self__.start;
  var G__12119 = self__.end;
  var G__12120 = self__.__hash;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__12116, G__12117, G__12118, G__12119, G__12120) : cljs.core.build_subvec.call(null, G__12116, G__12117, G__12118, G__12119, G__12120);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__12121 = self__.meta;
  var G__12122 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__12123 = self__.start;
  var G__12124 = self__.end + 1;
  var G__12125 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__12121, G__12122, G__12123, G__12124, G__12125) : cljs.core.build_subvec.call(null, G__12121, G__12122, G__12123, G__12124, G__12125);
};
cljs.core.Subvec.prototype.call = function() {
  var G__12129 = null;
  var G__12129__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__12129__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__12129 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12129__2.call(this, self__, k);
      case 3:
        return G__12129__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12129.cljs$core$IFn$_invoke$arity$2 = G__12129__2;
  G__12129.cljs$core$IFn$_invoke$arity$3 = G__12129__3;
  return G__12129;
}();
cljs.core.Subvec.prototype.apply = function(self__, args12100) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12100)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7730__auto__ = this;
  return cljs.core.es6_iterator(this__7730__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__12130 = meta;
      var G__12131 = v.v;
      var G__12132 = v.start + start;
      var G__12133 = v.start + end;
      var G__12134 = __hash;
      meta = G__12130;
      v = G__12131;
      start = G__12132;
      end = G__12133;
      __hash = G__12134;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec() {
  var G__12136 = arguments.length;
  switch(G__12136) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return cljs.core.build_subvec(null, v, start, end, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj12141 = {};
    return obj12141;
  }(), cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return cljs$core$tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__12149 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__12150 = level - 5;
        node = G__12149;
        level = G__12150;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__12154 = null;
  var G__12154__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__12154__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__12154 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12154__2.call(this, self__, k);
      case 3:
        return G__12154__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12154.cljs$core$IFn$_invoke$arity$2 = G__12154__2;
  G__12154.cljs$core$IFn$_invoke$arity$3 = G__12154__3;
  return G__12154;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args12151) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12151)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null)], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7170__auto__ = self__.__hash;
  if (!(h__7170__auto__ == null)) {
    return h__7170__auto__;
  } else {
    var h__7170__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__7170__auto____$1;
    return h__7170__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4423__auto__ = cljs.core.next(self__.front);
  if (temp__4423__auto__) {
    var f1 = temp__4423__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7730__auto__ = this;
  return cljs.core.es6_iterator(this__7730__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4423__auto__ = cljs.core.next(self__.front);
    if (temp__4423__auto__) {
      var f1 = temp__4423__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7170__auto__ = self__.__hash;
  if (!(h__7170__auto__ == null)) {
    return h__7170__auto__;
  } else {
    var h__7170__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__7170__auto____$1;
    return h__7170__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__6754__auto__ = self__.front;
    if (cljs.core.truth_(or__6754__auto__)) {
      return or__6754__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__6754__auto__ = self__.rear;
      if (cljs.core.truth_(or__6754__auto__)) {
        return or__6754__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7730__auto__ = this;
  return cljs.core.es6_iterator(this__7730__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__12155 = i + incr;
        i = G__12155;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__12156 = i + 1;
      var G__12157 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__12156;
      out = G__12157;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = function() {
    var obj12161 = {};
    return obj12161;
  }();
  var l = ks.length;
  var i_12162 = 0;
  while (true) {
    if (i_12162 < l) {
      var k_12163 = ks[i_12162];
      new_obj[k_12163] = obj[k_12163];
      var G__12164 = i_12162 + 1;
      i_12162 = G__12164;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__6742__auto__ = function() {
      var G__12168 = k;
      return goog.isString(G__12168);
    }();
    if (cljs.core.truth_(and__6742__auto__)) {
      return !(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__6742__auto__;
    }
  }())) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__12169 = init__$1;
        var G__12170 = k;
        var G__12171 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12169, G__12170, G__12171) : f.call(null, G__12169, G__12170, G__12171);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__12172 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12172) : cljs.core.deref.call(null, G__12172);
      } else {
        var G__12178 = cljs.core.rest(keys__$1);
        var G__12179 = init__$2;
        keys__$1 = G__12178;
        init__$1 = G__12179;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7170__auto__ = self__.__hash;
  if (!(h__7170__auto__ == null)) {
    return h__7170__auto__;
  } else {
    var h__7170__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__7170__auto____$1;
    return h__7170__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__6742__auto__ = function() {
      var G__12174 = k;
      return goog.isString(G__12174);
    }();
    if (cljs.core.truth_(and__6742__auto__)) {
      return !(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__6742__auto__;
    }
  }())) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var G__12175 = k;
    return goog.isString(G__12175);
  }())) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__6742__auto__ = function() {
      var G__12177 = k;
      return goog.isString(G__12177);
    }();
    if (cljs.core.truth_(and__6742__auto__)) {
      return !(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__6742__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__12165_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__12165_SHARP_, self__.strobj[p1__12165_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__12180 = null;
  var G__12180__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__12180__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__12180 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12180__2.call(this, self__, k);
      case 3:
        return G__12180__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12180.cljs$core$IFn$_invoke$arity$2 = G__12180__2;
  G__12180.cljs$core$IFn$_invoke$arity$3 = G__12180__3;
  return G__12180;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args12166) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12166)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj12182 = {};
  return obj12182;
}(), 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__12183 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12183, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12183, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null)], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null)], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__12184 = i + 2;
        i = G__12184;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__12185 = i + 2;
        i = G__12185;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__12186 = i + 2;
        i = G__12186;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__12187 = i + 2;
        i = G__12187;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__12188 = i + 2;
        i = G__12188;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (cljs.core.truth_(function() {
      var or__6754__auto__ = function() {
        var G__12192 = k;
        return goog.isString(G__12192);
      }();
      if (cljs.core.truth_(or__6754__auto__)) {
        return or__6754__auto__;
      } else {
        return typeof k === "number";
      }
    }())) {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_12193 = 0;
  while (true) {
    if (i_12193 < l) {
      narr[i_12193] = arr[i_12193];
      var G__12194 = i_12193 + 1;
      i_12193 = G__12194;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7730__auto__ = this;
  return cljs.core.es6_iterator(this__7730__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__12196 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__12196) : cljs.core.keys.call(null, G__12196);
  }());
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__12197 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__12197) : cljs.core.vals.call(null, G__12197);
  }());
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__12198 = cljs.core.seq(coll);
  var chunk__12199 = null;
  var count__12200 = 0;
  var i__12201 = 0;
  while (true) {
    if (i__12201 < count__12200) {
      var vec__12202 = chunk__12199.cljs$core$IIndexed$_nth$arity$2(null, i__12201);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12202, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12202, 1, null);
      var G__12203_12216 = v;
      var G__12204_12217 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12203_12216, G__12204_12217) : f.call(null, G__12203_12216, G__12204_12217);
      var G__12218 = seq__12198;
      var G__12219 = chunk__12199;
      var G__12220 = count__12200;
      var G__12221 = i__12201 + 1;
      seq__12198 = G__12218;
      chunk__12199 = G__12219;
      count__12200 = G__12220;
      i__12201 = G__12221;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__12198);
      if (temp__4425__auto__) {
        var seq__12198__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__12198__$1)) {
          var c__7539__auto__ = cljs.core.chunk_first(seq__12198__$1);
          var G__12222 = cljs.core.chunk_rest(seq__12198__$1);
          var G__12223 = c__7539__auto__;
          var G__12224 = cljs.core.count(c__7539__auto__);
          var G__12225 = 0;
          seq__12198 = G__12222;
          chunk__12199 = G__12223;
          count__12200 = G__12224;
          i__12201 = G__12225;
          continue;
        } else {
          var vec__12205 = cljs.core.first(seq__12198__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12205, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12205, 1, null);
          var G__12206_12226 = v;
          var G__12207_12227 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12206_12226, G__12207_12227) : f.call(null, G__12206_12226, G__12207_12227);
          var G__12228 = cljs.core.next(seq__12198__$1);
          var G__12229 = null;
          var G__12230 = 0;
          var G__12231 = 0;
          seq__12198 = G__12228;
          chunk__12199 = G__12229;
          count__12200 = G__12230;
          i__12201 = G__12231;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__12208 = init__$1;
        var G__12209 = self__.arr[i];
        var G__12210 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12208, G__12209, G__12210) : f.call(null, G__12208, G__12209, G__12210);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__12211 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12211) : cljs.core.deref.call(null, G__12211);
      } else {
        var G__12232 = i + 2;
        var G__12233 = init__$2;
        i = G__12232;
        init__$1 = G__12233;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7170__auto__ = self__.__hash;
  if (!(h__7170__auto__ == null)) {
    return h__7170__auto__;
  } else {
    var h__7170__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__7170__auto____$1;
    return h__7170__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__12212 = other;
    if (G__12212) {
      var bit__7421__auto__ = G__12212.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__7421__auto__ || G__12212.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__12234 = i + 2;
              i = G__12234;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj12214 = {};
    return obj12214;
  }(), self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__12235 = s + 2;
            var G__12236 = d;
            s = G__12235;
            d = G__12236;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__12237 = s + 2;
            var G__12238 = d + 2;
            s = G__12237;
            d = G__12238;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__12215 = cljs.core.aclone(self__.arr);
        G__12215[idx + 1] = v;
        return G__12215;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__12239 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__12240 = cljs.core.next(es);
          ret = G__12239;
          es = G__12240;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__12241 = null;
  var G__12241__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__12241__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__12241 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12241__2.call(this, self__, k);
      case 3:
        return G__12241__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12241.cljs$core$IFn$_invoke$arity$2 = G__12241__2;
  G__12241.cljs$core$IFn$_invoke$arity$3 = G__12241__3;
  return G__12241;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args12195) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12195)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_12242 = 0;
    while (true) {
      if (i_12242 < arr__$1.length) {
        var k_12243 = arr__$1[i_12242];
        var v_12244 = arr__$1[i_12242 + 1];
        var idx_12245 = cljs.core.array_index_of(ret, k_12243);
        if (idx_12245 === -1) {
          ret.push(k_12243);
          ret.push(v_12244);
        } else {
        }
        var G__12246 = i_12242 + 2;
        i_12242 = G__12246;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var arr__$3 = function() {
    var cnt = arr__$2.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
  }();
  return arr__$3;
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7730__auto__ = this;
  return cljs.core.es6_iterator(this__7730__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__12247 = o;
      if (G__12247) {
        var bit__7428__auto__ = G__12247.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__7428__auto__ || G__12247.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__12247.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__12247);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__12247);
      }
    }()) {
      return cljs.core._assoc_BANG_(tcoll__$1, function() {
        var G__12248 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__12248) : cljs.core.key.call(null, G__12248);
      }(), function() {
        var G__12249 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__12249) : cljs.core.val.call(null, G__12249);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4423__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          var G__12255 = cljs.core.next(es);
          var G__12256 = cljs.core._assoc_BANG_(tcoll__$2, function() {
            var G__12250 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__12250) : cljs.core.key.call(null, G__12250);
          }(), function() {
            var G__12251 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__12251) : cljs.core.val.call(null, G__12251);
          }());
          es = G__12255;
          tcoll__$2 = G__12256;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(function() {
          var G__12252 = self__.len;
          var G__12253 = self__.arr;
          return cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__12252, G__12253) : cljs.core.array__GT_transient_hash_map.call(null, G__12252, G__12253);
        }(), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__12254_12257 = self__.arr;
      G__12254_12257.pop();
      G__12254_12257.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__12258 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__12259 = i + 2;
      out = G__12258;
      i = G__12259;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set() {
  var G__12261 = arguments.length;
  switch(G__12261) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__12262 = cljs.core.aclone(arr);
  G__12262[i] = a;
  return G__12262;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__12263 = cljs.core.aclone(arr);
  G__12263[i] = a;
  G__12263[j] = b;
  return G__12263;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set() {
  var G__12266 = arguments.length;
  switch(G__12266) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__12272 = init__$1;
          var G__12273 = k;
          var G__12274 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12272, G__12273, G__12274) : f.call(null, G__12272, G__12273, G__12274);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__12275 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12275) : cljs.core.deref.call(null, G__12275);
      } else {
        var G__12276 = i + 2;
        var G__12277 = init__$2;
        i = G__12276;
        init__$1 = G__12277;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__12278 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__12278) : cljs.core.create_inode_seq.call(null, G__12278);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_12292 = 0;
        var j_12293 = 0;
        while (true) {
          if (i_12292 < 32) {
            if ((self__.bitmap >>> i_12292 & 1) === 0) {
              var G__12294 = i_12292 + 1;
              var G__12295 = j_12293;
              i_12292 = G__12294;
              j_12293 = G__12295;
              continue;
            } else {
              nodes[i_12292] = !(self__.arr[j_12293] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_12293]), self__.arr[j_12293], self__.arr[j_12293 + 1], added_leaf_QMARK_) : self__.arr[j_12293 + 1];
              var G__12296 = i_12292 + 1;
              var G__12297 = j_12293 + 2;
              i_12292 = G__12296;
              j_12293 = G__12297;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__12279 = edit__$1;
          var G__12280 = shift + 5;
          var G__12281 = key_or_nil;
          var G__12282 = val_or_node;
          var G__12283 = hash;
          var G__12284 = key;
          var G__12285 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__12279, G__12280, G__12281, G__12282, G__12283, G__12284, G__12285) : cljs.core.create_node.call(null, G__12279, G__12280, G__12281, G__12282, G__12283, G__12284, G__12285);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_12298 = 0;
      var j_12299 = 0;
      while (true) {
        if (i_12298 < 32) {
          if ((self__.bitmap >>> i_12298 & 1) === 0) {
            var G__12300 = i_12298 + 1;
            var G__12301 = j_12299;
            i_12298 = G__12300;
            j_12299 = G__12301;
            continue;
          } else {
            nodes[i_12298] = !(self__.arr[j_12299] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_12299]), self__.arr[j_12299], self__.arr[j_12299 + 1], added_leaf_QMARK_) : self__.arr[j_12299 + 1];
            var G__12302 = i_12298 + 1;
            var G__12303 = j_12299 + 2;
            i_12298 = G__12302;
            j_12299 = G__12303;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__12286 = shift + 5;
          var G__12287 = key_or_nil;
          var G__12288 = val_or_node;
          var G__12289 = hash;
          var G__12290 = key;
          var G__12291 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__12286, G__12287, G__12288, G__12289, G__12290, G__12291) : cljs.core.create_node.call(null, G__12286, G__12287, G__12288, G__12289, G__12290, G__12291);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__12304 = i + 1;
        var G__12305 = j + 2;
        var G__12306 = bitmap | 1 << i;
        i = G__12304;
        j = G__12305;
        bitmap = G__12306;
        continue;
      } else {
        var G__12307 = i + 1;
        var G__12308 = j;
        var G__12309 = bitmap;
        i = G__12307;
        j = G__12308;
        bitmap = G__12309;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__12310 = self__.arr;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__12310) : cljs.core.create_array_node_seq.call(null, G__12310);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          var G__12311 = init__$2;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12311) : cljs.core.deref.call(null, G__12311);
        } else {
          var G__12312 = i + 1;
          var G__12313 = init__$2;
          i = G__12312;
          init__$1 = G__12313;
          continue;
        }
      } else {
        var G__12314 = i + 1;
        var G__12315 = init__$1;
        i = G__12314;
        init__$1 = G__12315;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__12316 = i + 2;
        i = G__12316;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__12317 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__12317) : cljs.core.create_inode_seq.call(null, G__12317);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node() {
  var G__12319 = arguments.length;
  switch(G__12319) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7170__auto__ = self__.__hash;
  if (!(h__7170__auto__ == null)) {
    return h__7170__auto__;
  } else {
    var h__7170__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__7170__auto____$1;
    return h__7170__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__12321 = self__.nodes;
    var G__12322 = self__.i + 2;
    var G__12323 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__12321, G__12322, G__12323) : cljs.core.create_inode_seq.call(null, G__12321, G__12322, G__12323);
  } else {
    var G__12324 = self__.nodes;
    var G__12325 = self__.i;
    var G__12326 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__12324, G__12325, G__12326) : cljs.core.create_inode_seq.call(null, G__12324, G__12325, G__12326);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7730__auto__ = this;
  return cljs.core.es6_iterator(this__7730__auto__);
};
cljs.core.create_inode_seq = function cljs$core$create_inode_seq() {
  var G__12328 = arguments.length;
  switch(G__12328) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__4423__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__4423__auto__)) {
            var node = temp__4423__auto__;
            var temp__4423__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__4423__auto____$1)) {
              var node_seq = temp__4423__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__12330 = j + 2;
              j = G__12330;
              continue;
            }
          } else {
            var G__12331 = j + 2;
            j = G__12331;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7170__auto__ = self__.__hash;
  if (!(h__7170__auto__ == null)) {
    return h__7170__auto__;
  } else {
    var h__7170__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__7170__auto____$1;
    return h__7170__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__12332 = null;
  var G__12333 = self__.nodes;
  var G__12334 = self__.i;
  var G__12335 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__12332, G__12333, G__12334, G__12335) : cljs.core.create_array_node_seq.call(null, G__12332, G__12333, G__12334, G__12335);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7730__auto__ = this;
  return cljs.core.es6_iterator(this__7730__auto__);
};
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq() {
  var G__12337 = arguments.length;
  switch(G__12337) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(meta, nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__4423__auto__ = nodes[j];
        if (cljs.core.truth_(temp__4423__auto__)) {
          var nj = temp__4423__auto__;
          var temp__4423__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__4423__auto____$1)) {
            var ns = temp__4423__auto____$1;
            return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
          } else {
            var G__12339 = j + 1;
            j = G__12339;
            continue;
          }
        } else {
          var G__12340 = j + 1;
          j = G__12340;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__12342 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__12342) : cljs.core.keys.call(null, G__12342);
  }());
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__12343 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__12343) : cljs.core.vals.call(null, G__12343);
  }());
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__12344 = cljs.core.seq(coll);
  var chunk__12345 = null;
  var count__12346 = 0;
  var i__12347 = 0;
  while (true) {
    if (i__12347 < count__12346) {
      var vec__12348 = chunk__12345.cljs$core$IIndexed$_nth$arity$2(null, i__12347);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12348, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12348, 1, null);
      var G__12349_12360 = v;
      var G__12350_12361 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12349_12360, G__12350_12361) : f.call(null, G__12349_12360, G__12350_12361);
      var G__12362 = seq__12344;
      var G__12363 = chunk__12345;
      var G__12364 = count__12346;
      var G__12365 = i__12347 + 1;
      seq__12344 = G__12362;
      chunk__12345 = G__12363;
      count__12346 = G__12364;
      i__12347 = G__12365;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__12344);
      if (temp__4425__auto__) {
        var seq__12344__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__12344__$1)) {
          var c__7539__auto__ = cljs.core.chunk_first(seq__12344__$1);
          var G__12366 = cljs.core.chunk_rest(seq__12344__$1);
          var G__12367 = c__7539__auto__;
          var G__12368 = cljs.core.count(c__7539__auto__);
          var G__12369 = 0;
          seq__12344 = G__12366;
          chunk__12345 = G__12367;
          count__12346 = G__12368;
          i__12347 = G__12369;
          continue;
        } else {
          var vec__12351 = cljs.core.first(seq__12344__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12351, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12351, 1, null);
          var G__12352_12370 = v;
          var G__12353_12371 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12352_12370, G__12353_12371) : f.call(null, G__12352_12370, G__12353_12371);
          var G__12372 = cljs.core.next(seq__12344__$1);
          var G__12373 = null;
          var G__12374 = 0;
          var G__12375 = 0;
          seq__12344 = G__12372;
          chunk__12345 = G__12373;
          count__12346 = G__12374;
          i__12347 = G__12375;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? function() {
    var G__12354 = init;
    var G__12355 = null;
    var G__12356 = self__.nil_val;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12354, G__12355, G__12356) : f.call(null, G__12354, G__12355, G__12356);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__12357 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12357) : cljs.core.deref.call(null, G__12357);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7170__auto__ = self__.__hash;
  if (!(h__7170__auto__ == null)) {
    return h__7170__auto__;
  } else {
    var h__7170__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__7170__auto____$1;
    return h__7170__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj12359 = {};
    return obj12359;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__12376 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__12377 = cljs.core.next(es);
          ret = G__12376;
          es = G__12377;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__12378 = null;
  var G__12378__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__12378__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__12378 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12378__2.call(this, self__, k);
      case 3:
        return G__12378__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12378.cljs$core$IFn$_invoke$arity$2 = G__12378__2;
  G__12378.cljs$core$IFn$_invoke$arity$3 = G__12378__3;
  return G__12378;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args12341) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12341)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__12379 = i + 2;
      var G__12380 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__12379;
      ret = G__12380;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__12381 = i + 1;
      var G__12382 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__12381;
      out = G__12382;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7730__auto__ = this;
  return cljs.core.es6_iterator(this__7730__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__12383 = o;
      if (G__12383) {
        var bit__7428__auto__ = G__12383.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__7428__auto__ || G__12383.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__12383.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__12383);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__12383);
      }
    }()) {
      return tcoll.assoc_BANG_(function() {
        var G__12384 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__12384) : cljs.core.key.call(null, G__12384);
      }(), function() {
        var G__12385 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__12385) : cljs.core.val.call(null, G__12385);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4423__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          var G__12388 = cljs.core.next(es);
          var G__12389 = tcoll__$1.assoc_BANG_(function() {
            var G__12386 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__12386) : cljs.core.key.call(null, G__12386);
          }(), function() {
            var G__12387 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__12387) : cljs.core.val.call(null, G__12387);
          }());
          es = G__12388;
          tcoll__$1 = G__12389;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null)], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__12390 = ascending_QMARK_ ? t.left : t.right;
      var G__12391 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__12390;
      stack__$1 = G__12391;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7170__auto__ = self__.__hash;
  if (!(h__7170__auto__ == null)) {
    return h__7170__auto__;
  } else {
    var h__7170__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__7170__auto____$1;
    return h__7170__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7730__auto__ = this;
  return cljs.core.es6_iterator(this__7730__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? cljs$core$tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__12404 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12404) : cljs.core.deref.call(null, G__12404);
  } else {
    var init__$2 = function() {
      var G__12405 = init__$1;
      var G__12406 = node.key;
      var G__12407 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12405, G__12406, G__12407) : f.call(null, G__12405, G__12406, G__12407);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      var G__12408 = init__$2;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12408) : cljs.core.deref.call(null, G__12408);
    } else {
      var init__$3 = !(node.right == null) ? cljs$core$tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        var G__12409 = init__$3;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12409) : cljs.core.deref.call(null, G__12409);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7170__auto__ = self__.__hash;
  if (!(h__7170__auto__ == null)) {
    return h__7170__auto__;
  } else {
    var h__7170__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__7170__auto____$1;
    return h__7170__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__12411 = null;
  var G__12411__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__12411__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__12411 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12411__2.call(this, self__, k);
      case 3:
        return G__12411__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12411.cljs$core$IFn$_invoke$arity$2 = G__12411__2;
  G__12411.cljs$core$IFn$_invoke$arity$3 = G__12411__3;
  return G__12411;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args12410) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12410)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7730__auto__ = this;
  return cljs.core.es6_iterator(this__7730__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7170__auto__ = self__.__hash;
  if (!(h__7170__auto__ == null)) {
    return h__7170__auto__;
  } else {
    var h__7170__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__7170__auto____$1;
    return h__7170__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__12413 = null;
  var G__12413__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__12413__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__12413 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12413__2.call(this, self__, k);
      case 3:
        return G__12413__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12413.cljs$core$IFn$_invoke$arity$2 = G__12413__2;
  G__12413.cljs$core$IFn$_invoke$arity$3 = G__12413__3;
  return G__12413;
}();
cljs.core.RedNode.prototype.apply = function(self__, args12412) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12412)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7730__auto__ = this;
  return cljs.core.es6_iterator(this__7730__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__12426 = k;
      var G__12427 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__12426, G__12427) : comp.call(null, G__12426, G__12427);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = cljs$core$tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = cljs$core$tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, cljs$core$tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, cljs$core$tree_map_append(left, right.left), right.right, null);
        } else {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__12446 = k;
      var G__12447 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__12446, G__12447) : comp.call(null, G__12446, G__12447);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = cljs$core$tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = cljs$core$tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = function() {
    var G__12458 = k;
    var G__12459 = tk;
    return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__12458, G__12459) : comp.call(null, G__12458, G__12459);
  }();
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, cljs$core$tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, cljs$core$tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__12461 = cljs.core.seq(coll);
  var chunk__12462 = null;
  var count__12463 = 0;
  var i__12464 = 0;
  while (true) {
    if (i__12464 < count__12463) {
      var vec__12465 = chunk__12462.cljs$core$IIndexed$_nth$arity$2(null, i__12464);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12465, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12465, 1, null);
      var G__12466_12478 = v;
      var G__12467_12479 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12466_12478, G__12467_12479) : f.call(null, G__12466_12478, G__12467_12479);
      var G__12480 = seq__12461;
      var G__12481 = chunk__12462;
      var G__12482 = count__12463;
      var G__12483 = i__12464 + 1;
      seq__12461 = G__12480;
      chunk__12462 = G__12481;
      count__12463 = G__12482;
      i__12464 = G__12483;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__12461);
      if (temp__4425__auto__) {
        var seq__12461__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__12461__$1)) {
          var c__7539__auto__ = cljs.core.chunk_first(seq__12461__$1);
          var G__12484 = cljs.core.chunk_rest(seq__12461__$1);
          var G__12485 = c__7539__auto__;
          var G__12486 = cljs.core.count(c__7539__auto__);
          var G__12487 = 0;
          seq__12461 = G__12484;
          chunk__12462 = G__12485;
          count__12463 = G__12486;
          i__12464 = G__12487;
          continue;
        } else {
          var vec__12468 = cljs.core.first(seq__12461__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12468, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12468, 1, null);
          var G__12469_12488 = v;
          var G__12470_12489 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12469_12488, G__12470_12489) : f.call(null, G__12469_12488, G__12470_12489);
          var G__12490 = cljs.core.next(seq__12461__$1);
          var G__12491 = null;
          var G__12492 = 0;
          var G__12493 = 0;
          seq__12461 = G__12490;
          chunk__12462 = G__12491;
          count__12463 = G__12492;
          i__12464 = G__12493;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__12471 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__12471) : cljs.core.keys.call(null, G__12471);
  }());
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__12472 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__12472) : cljs.core.vals.call(null, G__12472);
  }());
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__12473 = k;
        var G__12474 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__12473, G__12474) : self__.comp.call(null, G__12473, G__12474);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__12494 = t.left;
          t = G__12494;
          continue;
        } else {
          var G__12495 = t.right;
          t = G__12495;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7170__auto__ = self__.__hash;
  if (!(h__7170__auto__ == null)) {
    return h__7170__auto__;
  } else {
    var h__7170__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__7170__auto____$1;
    return h__7170__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__12496 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__12497 = cljs.core.next(es);
          ret = G__12496;
          es = G__12497;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__12498 = null;
  var G__12498__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__12498__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__12498 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12498__2.call(this, self__, k);
      case 3:
        return G__12498__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12498.cljs$core$IFn$_invoke$arity$2 = G__12498__2;
  G__12498.cljs$core$IFn$_invoke$arity$3 = G__12498__3;
  return G__12498;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args12460) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12460)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__12475 = k;
          var G__12476 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__12475, G__12476) : self__.comp.call(null, G__12475, G__12476);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__12499 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__12500 = t.left;
              stack = G__12499;
              t = G__12500;
              continue;
            } else {
              var G__12501 = stack;
              var G__12502 = t.right;
              stack = G__12501;
              t = G__12502;
              continue;
            }
          } else {
            if (c > 0) {
              var G__12503 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__12504 = t.right;
              stack = G__12503;
              t = G__12504;
              continue;
            } else {
              var G__12505 = stack;
              var G__12506 = t.left;
              stack = G__12505;
              t = G__12506;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  var G__12477 = entry;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__12477) : cljs.core.key.call(null, G__12477);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7730__auto__ = this;
  return cljs.core.es6_iterator(this__7730__auto__);
};
cljs.core.hash_map = function cljs$core$hash_map() {
  var argseq__7794__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__7794__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__12508 = cljs.core.nnext(in$);
      var G__12509 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__12508;
      out = G__12509;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq12507) {
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12507));
};
cljs.core.array_map = function cljs$core$array_map() {
  var argseq__7794__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__7794__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.fromArray(arr, true, false);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq12510) {
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12510));
};
cljs.core.obj_map = function cljs$core$obj_map() {
  var argseq__7794__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__7794__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = function() {
    var obj12513 = {};
    return obj12513;
  }();
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
      var G__12514 = cljs.core.nnext(kvs);
      kvs = G__12514;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq12511) {
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12511));
};
cljs.core.sorted_map = function cljs$core$sorted_map() {
  var argseq__7794__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__7794__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__12516 = cljs.core.nnext(in$);
      var G__12517 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__12516;
      out = G__12517;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq12515) {
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12515));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by() {
  var argseq__7794__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7794__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__12520 = cljs.core.nnext(in$);
      var G__12521 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__12520;
      out = G__12521;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq12518) {
  var G__12519 = cljs.core.first(seq12518);
  var seq12518__$1 = cljs.core.next(seq12518);
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(G__12519, seq12518__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__12522 = self__.mseq;
    if (G__12522) {
      var bit__7428__auto__ = G__12522.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__7428__auto__ || G__12522.cljs$core$INext$) {
        return true;
      } else {
        if (!G__12522.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__12522);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__12522);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__12523 = self__.mseq;
    if (G__12523) {
      var bit__7428__auto__ = G__12523.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__7428__auto__ || G__12523.cljs$core$INext$) {
        return true;
      } else {
        if (!G__12523.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__12523);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__12523);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7730__auto__ = this;
  return cljs.core.es6_iterator(this__7730__auto__);
};
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4425__auto__ = cljs.core.seq(hash_map);
  if (temp__4425__auto__) {
    var mseq = temp__4425__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__12524 = self__.mseq;
    if (G__12524) {
      var bit__7428__auto__ = G__12524.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__7428__auto__ || G__12524.cljs$core$INext$) {
        return true;
      } else {
        if (!G__12524.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__12524);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__12524);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__12525 = self__.mseq;
    if (G__12525) {
      var bit__7428__auto__ = G__12525.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__7428__auto__ || G__12525.cljs$core$INext$) {
        return true;
      } else {
        if (!G__12525.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__12525);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__12525);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7730__auto__ = this;
  return cljs.core.es6_iterator(this__7730__auto__);
};
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4425__auto__ = cljs.core.seq(hash_map);
  if (temp__4425__auto__) {
    var mseq = temp__4425__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge() {
  var argseq__7794__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__7794__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__12526_SHARP_, p2__12527_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__6754__auto__ = p1__12526_SHARP_;
        if (cljs.core.truth_(or__6754__auto__)) {
          return or__6754__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__12527_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq12528) {
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12528));
};
cljs.core.merge_with = function cljs$core$merge_with() {
  var argseq__7794__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7794__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.first(e);
      var v = cljs.core.second(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__12531 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__12532 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12531, G__12532) : f.call(null, G__12531, G__12532);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__6754__auto__ = m1;
          if (cljs.core.truth_(or__6754__auto__)) {
            return or__6754__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq12529) {
  var G__12530 = cljs.core.first(seq12529);
  var seq12529__$1 = cljs.core.next(seq12529);
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(G__12530, seq12529__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__12533 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__12534 = cljs.core.next(keys);
      ret = G__12533;
      keys = G__12534;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__12537 = cljs.core.seq(coll);
  var chunk__12538 = null;
  var count__12539 = 0;
  var i__12540 = 0;
  while (true) {
    if (i__12540 < count__12539) {
      var vec__12541 = chunk__12538.cljs$core$IIndexed$_nth$arity$2(null, i__12540);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12541, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12541, 1, null);
      var G__12542_12547 = v;
      var G__12543_12548 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12542_12547, G__12543_12548) : f.call(null, G__12542_12547, G__12543_12548);
      var G__12549 = seq__12537;
      var G__12550 = chunk__12538;
      var G__12551 = count__12539;
      var G__12552 = i__12540 + 1;
      seq__12537 = G__12549;
      chunk__12538 = G__12550;
      count__12539 = G__12551;
      i__12540 = G__12552;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__12537);
      if (temp__4425__auto__) {
        var seq__12537__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__12537__$1)) {
          var c__7539__auto__ = cljs.core.chunk_first(seq__12537__$1);
          var G__12553 = cljs.core.chunk_rest(seq__12537__$1);
          var G__12554 = c__7539__auto__;
          var G__12555 = cljs.core.count(c__7539__auto__);
          var G__12556 = 0;
          seq__12537 = G__12553;
          chunk__12538 = G__12554;
          count__12539 = G__12555;
          i__12540 = G__12556;
          continue;
        } else {
          var vec__12544 = cljs.core.first(seq__12537__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12544, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12544, 1, null);
          var G__12545_12557 = v;
          var G__12546_12558 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12545_12557, G__12546_12558) : f.call(null, G__12545_12557, G__12546_12558);
          var G__12559 = cljs.core.next(seq__12537__$1);
          var G__12560 = null;
          var G__12561 = 0;
          var G__12562 = 0;
          seq__12537 = G__12559;
          chunk__12538 = G__12560;
          count__12539 = G__12561;
          i__12540 = G__12562;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7170__auto__ = self__.__hash;
  if (!(h__7170__auto__ == null)) {
    return h__7170__auto__;
  } else {
    var h__7170__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__7170__auto____$1;
    return h__7170__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__12535_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__12535_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__12563 = null;
  var G__12563__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__12563__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__12563 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12563__2.call(this, self__, k);
      case 3:
        return G__12563__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12563.cljs$core$IFn$_invoke$arity$2 = G__12563__2;
  G__12563.cljs$core$IFn$_invoke$arity$3 = G__12563__3;
  return G__12563;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args12536) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12536)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__12564 = i + 1;
        var G__12565 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__12564;
        out = G__12565;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__12566 = i + 1;
        var G__12567 = cljs.core._conj_BANG_(out, items[i]);
        i = G__12566;
        out = G__12567;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7730__auto__ = this;
  return cljs.core.es6_iterator(this__7730__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__12569 = null;
  var G__12569__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__12569__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__12569 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12569__2.call(this, self__, k);
      case 3:
        return G__12569__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12569.cljs$core$IFn$_invoke$arity$2 = G__12569__2;
  G__12569.cljs$core$IFn$_invoke$arity$3 = G__12569__3;
  return G__12569;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args12568) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12568)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null)], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__12572 = cljs.core.seq(coll);
  var chunk__12573 = null;
  var count__12574 = 0;
  var i__12575 = 0;
  while (true) {
    if (i__12575 < count__12574) {
      var vec__12576 = chunk__12573.cljs$core$IIndexed$_nth$arity$2(null, i__12575);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12576, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12576, 1, null);
      var G__12577_12582 = v;
      var G__12578_12583 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12577_12582, G__12578_12583) : f.call(null, G__12577_12582, G__12578_12583);
      var G__12584 = seq__12572;
      var G__12585 = chunk__12573;
      var G__12586 = count__12574;
      var G__12587 = i__12575 + 1;
      seq__12572 = G__12584;
      chunk__12573 = G__12585;
      count__12574 = G__12586;
      i__12575 = G__12587;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__12572);
      if (temp__4425__auto__) {
        var seq__12572__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__12572__$1)) {
          var c__7539__auto__ = cljs.core.chunk_first(seq__12572__$1);
          var G__12588 = cljs.core.chunk_rest(seq__12572__$1);
          var G__12589 = c__7539__auto__;
          var G__12590 = cljs.core.count(c__7539__auto__);
          var G__12591 = 0;
          seq__12572 = G__12588;
          chunk__12573 = G__12589;
          count__12574 = G__12590;
          i__12575 = G__12591;
          continue;
        } else {
          var vec__12579 = cljs.core.first(seq__12572__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12579, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12579, 1, null);
          var G__12580_12592 = v;
          var G__12581_12593 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12580_12592, G__12581_12593) : f.call(null, G__12580_12592, G__12581_12593);
          var G__12594 = cljs.core.next(seq__12572__$1);
          var G__12595 = null;
          var G__12596 = 0;
          var G__12597 = 0;
          seq__12572 = G__12594;
          chunk__12573 = G__12595;
          count__12574 = G__12596;
          i__12575 = G__12597;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__7170__auto__ = self__.__hash;
  if (!(h__7170__auto__ == null)) {
    return h__7170__auto__;
  } else {
    var h__7170__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__7170__auto____$1;
    return h__7170__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__12570_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__12570_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__12598 = null;
  var G__12598__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__12598__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__12598 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12598__2.call(this, self__, k);
      case 3:
        return G__12598__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12598.cljs$core$IFn$_invoke$arity$2 = G__12598__2;
  G__12598.cljs$core$IFn$_invoke$arity$3 = G__12598__3;
  return G__12598;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args12571) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12571)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7730__auto__ = this;
  return cljs.core.es6_iterator(this__7730__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__7633__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__7633__auto__.length) {
        var G__12599 = i + 1;
        var G__12600 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__12599;
        res = G__12600;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__12601 = cljs.core.next(in$__$1);
          var G__12602 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__12601;
          out = G__12602;
          continue;
        } else {
          return cljs.core.persistent_BANG_(out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set() {
  var G__12605 = arguments.length;
  switch(G__12605) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__7805__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq12603) {
  return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12603));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set() {
  var argseq__7794__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__7794__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq12607) {
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12607));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by() {
  var argseq__7794__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7794__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq12608) {
  var G__12609 = cljs.core.first(seq12608);
  var seq12608__$1 = cljs.core.next(seq12608);
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(G__12609, seq12608__$1);
};
cljs.core.replace = function cljs$core$replace() {
  var G__12613 = arguments.length;
  switch(G__12613) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__12610_SHARP_) {
    var temp__4423__auto__ = cljs.core.find(smap, p1__12610_SHARP_);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var e = temp__4423__auto__;
      return cljs.core.val(e);
    } else {
      return p1__12610_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__4423__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__12611_SHARP_) {
      var temp__4423__auto__ = cljs.core.find(smap, p1__12611_SHARP_);
      if (cljs.core.truth_(temp__4423__auto__)) {
        var e = temp__4423__auto__;
        return cljs.core.second(e);
      } else {
        return p1__12611_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct() {
  var G__12616 = arguments.length;
  switch(G__12616) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__12628 = null;
        var G__12628__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__12628__1 = function(result) {
          var G__12617 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12617) : rf.call(null, G__12617);
        };
        var G__12628__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(function() {
            var G__12618 = seen;
            return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12618) : cljs.core.deref.call(null, G__12618);
          }(), input)) {
            return result;
          } else {
            cljs.core._vreset_BANG_(seen, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(seen), input));
            var G__12619 = result;
            var G__12620 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12619, G__12620) : rf.call(null, G__12619, G__12620);
          }
        };
        G__12628 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__12628__0.call(this);
            case 1:
              return G__12628__1.call(this, result);
            case 2:
              return G__12628__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__12628.cljs$core$IFn$_invoke$arity$0 = G__12628__0;
        G__12628.cljs$core$IFn$_invoke$arity$1 = G__12628__1;
        G__12628.cljs$core$IFn$_invoke$arity$2 = G__12628__2;
        return G__12628;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__12625, seen__$1) {
        while (true) {
          var vec__12626 = p__12625;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12626, 0, null);
          var xs__$1 = vec__12626;
          var temp__4425__auto__ = cljs.core.seq(xs__$1);
          if (temp__4425__auto__) {
            var s = temp__4425__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__12629 = cljs.core.rest(s);
              var G__12630 = seen__$1;
              p__12625 = G__12629;
              seen__$1 = G__12630;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__12631 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__12632 = cljs.core.next(s__$1);
      ret = G__12631;
      s__$1 = G__12632;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (function() {
    var G__12634 = x;
    if (G__12634) {
      var bit__7421__auto__ = G__12634.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__7421__auto__ || G__12634.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__12635 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__12636 = cljs.core.next(ks);
      var G__12637 = cljs.core.next(vs);
      map = G__12635;
      ks = G__12636;
      vs = G__12637;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key() {
  var G__12645 = arguments.length;
  switch(G__12645) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7805__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if (function() {
    var G__12646 = x;
    return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__12646) : k.call(null, G__12646);
  }() > function() {
    var G__12647 = y;
    return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__12647) : k.call(null, G__12647);
  }()) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__12638_SHARP_, p2__12639_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__12638_SHARP_, p2__12639_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq12640) {
  var G__12641 = cljs.core.first(seq12640);
  var seq12640__$1 = cljs.core.next(seq12640);
  var G__12642 = cljs.core.first(seq12640__$1);
  var seq12640__$2 = cljs.core.next(seq12640__$1);
  var G__12643 = cljs.core.first(seq12640__$2);
  var seq12640__$3 = cljs.core.next(seq12640__$2);
  return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(G__12641, G__12642, G__12643, seq12640__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key() {
  var G__12656 = arguments.length;
  switch(G__12656) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7805__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if (function() {
    var G__12657 = x;
    return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__12657) : k.call(null, G__12657);
  }() < function() {
    var G__12658 = y;
    return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__12658) : k.call(null, G__12658);
  }()) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__12649_SHARP_, p2__12650_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__12649_SHARP_, p2__12650_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq12651) {
  var G__12652 = cljs.core.first(seq12651);
  var seq12651__$1 = cljs.core.next(seq12651);
  var G__12653 = cljs.core.first(seq12651__$1);
  var seq12651__$2 = cljs.core.next(seq12651__$1);
  var G__12654 = cljs.core.first(seq12651__$2);
  var seq12651__$3 = cljs.core.next(seq12651__$2);
  return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(G__12652, G__12653, G__12654, seq12651__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all() {
  var G__12661 = arguments.length;
  switch(G__12661) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__12668 = null;
        var G__12668__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__12668__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(function() {
              var G__12662 = result;
              var G__12663 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12662, G__12663) : rf.call(null, G__12662, G__12663);
            }());
          }();
          var G__12664 = result__$1;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12664) : rf.call(null, G__12664);
        };
        var G__12668__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var G__12665 = result;
            var G__12666 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12665, G__12666) : rf.call(null, G__12665, G__12666);
          } else {
            return result;
          }
        };
        G__12668 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__12668__0.call(this);
            case 1:
              return G__12668__1.call(this, result);
            case 2:
              return G__12668__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__12668.cljs$core$IFn$_invoke$arity$0 = G__12668__0;
        G__12668.cljs$core$IFn$_invoke$arity$1 = G__12668__1;
        G__12668.cljs$core$IFn$_invoke$arity$2 = G__12668__2;
        return G__12668;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while() {
  var G__12670 = arguments.length;
  switch(G__12670) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__12677 = null;
      var G__12677__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__12677__1 = function(result) {
        var G__12671 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12671) : rf.call(null, G__12671);
      };
      var G__12677__2 = function(result, input) {
        if (cljs.core.truth_(function() {
          var G__12672 = input;
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__12672) : pred.call(null, G__12672);
        }())) {
          var G__12673 = result;
          var G__12674 = input;
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12673, G__12674) : rf.call(null, G__12673, G__12674);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__12677 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__12677__0.call(this);
          case 1:
            return G__12677__1.call(this, result);
          case 2:
            return G__12677__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12677.cljs$core$IFn$_invoke$arity$0 = G__12677__0;
      G__12677.cljs$core$IFn$_invoke$arity$1 = G__12677__1;
      G__12677.cljs$core$IFn$_invoke$arity$2 = G__12677__2;
      return G__12677;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.truth_(function() {
        var G__12675 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__12675) : pred.call(null, G__12675);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__12682 = function() {
      var G__12684 = cljs.core._entry_key(sc, e);
      var G__12685 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__12684, G__12685) : comp.call(null, G__12684, G__12685);
    }();
    var G__12683 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__12682, G__12683) : test.call(null, G__12682, G__12683);
  };
};
cljs.core.subseq = function cljs$core$subseq() {
  var G__12687 = arguments.length;
  switch(G__12687) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
    var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__12688 = temp__4425__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12688, 0, null);
      var s = vec__12688;
      if (cljs.core.truth_(function() {
        var G__12689 = e;
        return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__12689) : include.call(null, G__12689);
      }())) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var vec__12690 = temp__4425__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12690, 0, null);
    var s = vec__12690;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq() {
  var G__12693 = arguments.length;
  switch(G__12693) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
    var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__12694 = temp__4425__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12694, 0, null);
      var s = vec__12694;
      if (cljs.core.truth_(function() {
        var G__12695 = e;
        return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__12695) : include.call(null, G__12695);
      }())) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var vec__12696 = temp__4425__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12696, 0, null);
    var s = vec__12696;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__12698 = (self__.end - self__.start) / self__.step;
    return Math.ceil(G__12698);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__7170__auto__ = self__.__hash;
  if (!(h__7170__auto__ == null)) {
    return h__7170__auto__;
  } else {
    var h__7170__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__7170__auto____$1;
    return h__7170__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = function() {
        var G__12699 = ret;
        var G__12700 = i;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12699, G__12700) : f.call(null, G__12699, G__12700);
      }();
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        var G__12701 = ret__$1;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12701) : cljs.core.deref.call(null, G__12701);
      } else {
        var G__12702 = i + self__.step;
        var G__12703 = ret__$1;
        i = G__12702;
        ret = G__12703;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7730__auto__ = this;
  return cljs.core.es6_iterator(this__7730__auto__);
};
cljs.core.range = function cljs$core$range() {
  var G__12705 = arguments.length;
  switch(G__12705) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  return new cljs.core.Range(null, start, end, step, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth() {
  var G__12708 = arguments.length;
  switch(G__12708) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__12713 = null;
        var G__12713__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__12713__1 = function(result) {
          var G__12709 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12709) : rf.call(null, G__12709);
        };
        var G__12713__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          if (cljs.core.rem(i, n) === 0) {
            var G__12710 = result;
            var G__12711 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12710, G__12711) : rf.call(null, G__12710, G__12711);
          } else {
            return result;
          }
        };
        G__12713 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__12713__0.call(this);
            case 1:
              return G__12713__1.call(this, result);
            case 2:
              return G__12713__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__12713.cljs$core$IFn$_invoke$arity$0 = G__12713__0;
        G__12713.cljs$core$IFn$_invoke$arity$1 = G__12713__1;
        G__12713.cljs$core$IFn$_invoke$arity$2 = G__12713__2;
        return G__12713;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by() {
  var G__12716 = arguments.length;
  switch(G__12716) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__12727 = null;
        var G__12727__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__12727__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(function() {
              var G__12717 = result;
              var G__12718 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12717, G__12718) : rf.call(null, G__12717, G__12718);
            }());
          }();
          var G__12719 = result__$1;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12719) : rf.call(null, G__12719);
        };
        var G__12727__2 = function(result, input) {
          var pval = function() {
            var G__12720 = pa;
            return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12720) : cljs.core.deref.call(null, G__12720);
          }();
          var val = function() {
            var G__12721 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12721) : f.call(null, G__12721);
          }();
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = function() {
              var G__12722 = result;
              var G__12723 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12722, G__12723) : rf.call(null, G__12722, G__12723);
            }();
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__12727 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__12727__0.call(this);
            case 1:
              return G__12727__1.call(this, result);
            case 2:
              return G__12727__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__12727.cljs$core$IFn$_invoke$arity$0 = G__12727__0;
        G__12727.cljs$core$IFn$_invoke$arity$1 = G__12727__1;
        G__12727.cljs$core$IFn$_invoke$arity$2 = G__12727__2;
        return G__12727;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var fst = cljs.core.first(s);
      var fv = function() {
        var G__12724 = fst;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12724) : f.call(null, G__12724);
      }();
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4425__auto__) {
        return function(p1__12714_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, function() {
            var G__12725 = p1__12714_SHARP_;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12725) : f.call(null, G__12725);
          }());
        };
      }(fst, fv, s, temp__4425__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions() {
  var G__12729 = arguments.length;
  switch(G__12729) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4423__auto__ = cljs.core.seq(coll);
    if (temp__4423__auto__) {
      var s = temp__4423__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
        var G__12730 = init;
        var G__12731 = cljs.core.first(s);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12730, G__12731) : f.call(null, G__12730, G__12731);
      }(), cljs.core.rest(s));
    } else {
      return null;
    }
  }, null, null));
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt() {
  var G__12748 = arguments.length;
  switch(G__12748) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7805__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__12792 = null;
    var G__12792__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }()], null);
    };
    var G__12792__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__12749 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12749) : f.call(null, G__12749);
      }()], null);
    };
    var G__12792__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__12750 = x;
        var G__12751 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12750, G__12751) : f.call(null, G__12750, G__12751);
      }()], null);
    };
    var G__12792__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__12752 = x;
        var G__12753 = y;
        var G__12754 = z;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12752, G__12753, G__12754) : f.call(null, G__12752, G__12753, G__12754);
      }()], null);
    };
    var G__12792__4 = function() {
      var G__12793__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__12793 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__12794__i = 0, G__12794__a = new Array(arguments.length - 3);
          while (G__12794__i < G__12794__a.length) {
            G__12794__a[G__12794__i] = arguments[G__12794__i + 3];
            ++G__12794__i;
          }
          args = new cljs.core.IndexedSeq(G__12794__a, 0);
        }
        return G__12793__delegate.call(this, x, y, z, args);
      };
      G__12793.cljs$lang$maxFixedArity = 3;
      G__12793.cljs$lang$applyTo = function(arglist__12795) {
        var x = cljs.core.first(arglist__12795);
        arglist__12795 = cljs.core.next(arglist__12795);
        var y = cljs.core.first(arglist__12795);
        arglist__12795 = cljs.core.next(arglist__12795);
        var z = cljs.core.first(arglist__12795);
        var args = cljs.core.rest(arglist__12795);
        return G__12793__delegate(x, y, z, args);
      };
      G__12793.cljs$core$IFn$_invoke$arity$variadic = G__12793__delegate;
      return G__12793;
    }();
    G__12792 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__12792__0.call(this);
        case 1:
          return G__12792__1.call(this, x);
        case 2:
          return G__12792__2.call(this, x, y);
        case 3:
          return G__12792__3.call(this, x, y, z);
        default:
          var G__12796 = null;
          if (arguments.length > 3) {
            var G__12797__i = 0, G__12797__a = new Array(arguments.length - 3);
            while (G__12797__i < G__12797__a.length) {
              G__12797__a[G__12797__i] = arguments[G__12797__i + 3];
              ++G__12797__i;
            }
            G__12796 = new cljs.core.IndexedSeq(G__12797__a, 0);
          }
          return G__12792__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12796);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__12792.cljs$lang$maxFixedArity = 3;
    G__12792.cljs$lang$applyTo = G__12792__4.cljs$lang$applyTo;
    G__12792.cljs$core$IFn$_invoke$arity$0 = G__12792__0;
    G__12792.cljs$core$IFn$_invoke$arity$1 = G__12792__1;
    G__12792.cljs$core$IFn$_invoke$arity$2 = G__12792__2;
    G__12792.cljs$core$IFn$_invoke$arity$3 = G__12792__3;
    G__12792.cljs$core$IFn$_invoke$arity$variadic = G__12792__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__12792;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__12798 = null;
    var G__12798__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), function() {
        return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      }()], null);
    };
    var G__12798__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__12755 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12755) : f.call(null, G__12755);
      }(), function() {
        var G__12756 = x;
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12756) : g.call(null, G__12756);
      }()], null);
    };
    var G__12798__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__12757 = x;
        var G__12758 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12757, G__12758) : f.call(null, G__12757, G__12758);
      }(), function() {
        var G__12759 = x;
        var G__12760 = y;
        return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__12759, G__12760) : g.call(null, G__12759, G__12760);
      }()], null);
    };
    var G__12798__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__12761 = x;
        var G__12762 = y;
        var G__12763 = z;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12761, G__12762, G__12763) : f.call(null, G__12761, G__12762, G__12763);
      }(), function() {
        var G__12764 = x;
        var G__12765 = y;
        var G__12766 = z;
        return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__12764, G__12765, G__12766) : g.call(null, G__12764, G__12765, G__12766);
      }()], null);
    };
    var G__12798__4 = function() {
      var G__12799__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__12799 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__12800__i = 0, G__12800__a = new Array(arguments.length - 3);
          while (G__12800__i < G__12800__a.length) {
            G__12800__a[G__12800__i] = arguments[G__12800__i + 3];
            ++G__12800__i;
          }
          args = new cljs.core.IndexedSeq(G__12800__a, 0);
        }
        return G__12799__delegate.call(this, x, y, z, args);
      };
      G__12799.cljs$lang$maxFixedArity = 3;
      G__12799.cljs$lang$applyTo = function(arglist__12801) {
        var x = cljs.core.first(arglist__12801);
        arglist__12801 = cljs.core.next(arglist__12801);
        var y = cljs.core.first(arglist__12801);
        arglist__12801 = cljs.core.next(arglist__12801);
        var z = cljs.core.first(arglist__12801);
        var args = cljs.core.rest(arglist__12801);
        return G__12799__delegate(x, y, z, args);
      };
      G__12799.cljs$core$IFn$_invoke$arity$variadic = G__12799__delegate;
      return G__12799;
    }();
    G__12798 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__12798__0.call(this);
        case 1:
          return G__12798__1.call(this, x);
        case 2:
          return G__12798__2.call(this, x, y);
        case 3:
          return G__12798__3.call(this, x, y, z);
        default:
          var G__12802 = null;
          if (arguments.length > 3) {
            var G__12803__i = 0, G__12803__a = new Array(arguments.length - 3);
            while (G__12803__i < G__12803__a.length) {
              G__12803__a[G__12803__i] = arguments[G__12803__i + 3];
              ++G__12803__i;
            }
            G__12802 = new cljs.core.IndexedSeq(G__12803__a, 0);
          }
          return G__12798__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12802);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__12798.cljs$lang$maxFixedArity = 3;
    G__12798.cljs$lang$applyTo = G__12798__4.cljs$lang$applyTo;
    G__12798.cljs$core$IFn$_invoke$arity$0 = G__12798__0;
    G__12798.cljs$core$IFn$_invoke$arity$1 = G__12798__1;
    G__12798.cljs$core$IFn$_invoke$arity$2 = G__12798__2;
    G__12798.cljs$core$IFn$_invoke$arity$3 = G__12798__3;
    G__12798.cljs$core$IFn$_invoke$arity$variadic = G__12798__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__12798;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__12804 = null;
    var G__12804__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), function() {
        return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      }(), function() {
        return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
      }()], null);
    };
    var G__12804__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__12767 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12767) : f.call(null, G__12767);
      }(), function() {
        var G__12768 = x;
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12768) : g.call(null, G__12768);
      }(), function() {
        var G__12769 = x;
        return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__12769) : h.call(null, G__12769);
      }()], null);
    };
    var G__12804__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__12770 = x;
        var G__12771 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12770, G__12771) : f.call(null, G__12770, G__12771);
      }(), function() {
        var G__12772 = x;
        var G__12773 = y;
        return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__12772, G__12773) : g.call(null, G__12772, G__12773);
      }(), function() {
        var G__12774 = x;
        var G__12775 = y;
        return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__12774, G__12775) : h.call(null, G__12774, G__12775);
      }()], null);
    };
    var G__12804__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__12776 = x;
        var G__12777 = y;
        var G__12778 = z;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12776, G__12777, G__12778) : f.call(null, G__12776, G__12777, G__12778);
      }(), function() {
        var G__12779 = x;
        var G__12780 = y;
        var G__12781 = z;
        return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__12779, G__12780, G__12781) : g.call(null, G__12779, G__12780, G__12781);
      }(), function() {
        var G__12782 = x;
        var G__12783 = y;
        var G__12784 = z;
        return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__12782, G__12783, G__12784) : h.call(null, G__12782, G__12783, G__12784);
      }()], null);
    };
    var G__12804__4 = function() {
      var G__12805__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__12805 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__12806__i = 0, G__12806__a = new Array(arguments.length - 3);
          while (G__12806__i < G__12806__a.length) {
            G__12806__a[G__12806__i] = arguments[G__12806__i + 3];
            ++G__12806__i;
          }
          args = new cljs.core.IndexedSeq(G__12806__a, 0);
        }
        return G__12805__delegate.call(this, x, y, z, args);
      };
      G__12805.cljs$lang$maxFixedArity = 3;
      G__12805.cljs$lang$applyTo = function(arglist__12807) {
        var x = cljs.core.first(arglist__12807);
        arglist__12807 = cljs.core.next(arglist__12807);
        var y = cljs.core.first(arglist__12807);
        arglist__12807 = cljs.core.next(arglist__12807);
        var z = cljs.core.first(arglist__12807);
        var args = cljs.core.rest(arglist__12807);
        return G__12805__delegate(x, y, z, args);
      };
      G__12805.cljs$core$IFn$_invoke$arity$variadic = G__12805__delegate;
      return G__12805;
    }();
    G__12804 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__12804__0.call(this);
        case 1:
          return G__12804__1.call(this, x);
        case 2:
          return G__12804__2.call(this, x, y);
        case 3:
          return G__12804__3.call(this, x, y, z);
        default:
          var G__12808 = null;
          if (arguments.length > 3) {
            var G__12809__i = 0, G__12809__a = new Array(arguments.length - 3);
            while (G__12809__i < G__12809__a.length) {
              G__12809__a[G__12809__i] = arguments[G__12809__i + 3];
              ++G__12809__i;
            }
            G__12808 = new cljs.core.IndexedSeq(G__12809__a, 0);
          }
          return G__12804__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12808);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__12804.cljs$lang$maxFixedArity = 3;
    G__12804.cljs$lang$applyTo = G__12804__4.cljs$lang$applyTo;
    G__12804.cljs$core$IFn$_invoke$arity$0 = G__12804__0;
    G__12804.cljs$core$IFn$_invoke$arity$1 = G__12804__1;
    G__12804.cljs$core$IFn$_invoke$arity$2 = G__12804__2;
    G__12804.cljs$core$IFn$_invoke$arity$3 = G__12804__3;
    G__12804.cljs$core$IFn$_invoke$arity$variadic = G__12804__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__12804;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__12810 = null;
      var G__12810__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__12733_SHARP_, p2__12734_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12733_SHARP_, function() {
              return p2__12734_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__12734_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__12734_SHARP_.call(null);
            }());
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__12810__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__12735_SHARP_, p2__12736_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12735_SHARP_, function() {
              var G__12785 = x;
              return p2__12736_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__12736_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12785) : p2__12736_SHARP_.call(null, G__12785);
            }());
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__12810__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__12737_SHARP_, p2__12738_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12737_SHARP_, function() {
              var G__12786 = x;
              var G__12787 = y;
              return p2__12738_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__12738_SHARP_.cljs$core$IFn$_invoke$arity$2(G__12786, G__12787) : p2__12738_SHARP_.call(null, G__12786, G__12787);
            }());
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__12810__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__12739_SHARP_, p2__12740_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12739_SHARP_, function() {
              var G__12788 = x;
              var G__12789 = y;
              var G__12790 = z;
              return p2__12740_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__12740_SHARP_.cljs$core$IFn$_invoke$arity$3(G__12788, G__12789, G__12790) : p2__12740_SHARP_.call(null, G__12788, G__12789, G__12790);
            }());
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__12810__4 = function() {
        var G__12811__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__12741_SHARP_, p2__12742_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12741_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__12742_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__12811 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__12812__i = 0, G__12812__a = new Array(arguments.length - 3);
            while (G__12812__i < G__12812__a.length) {
              G__12812__a[G__12812__i] = arguments[G__12812__i + 3];
              ++G__12812__i;
            }
            args = new cljs.core.IndexedSeq(G__12812__a, 0);
          }
          return G__12811__delegate.call(this, x, y, z, args);
        };
        G__12811.cljs$lang$maxFixedArity = 3;
        G__12811.cljs$lang$applyTo = function(arglist__12813) {
          var x = cljs.core.first(arglist__12813);
          arglist__12813 = cljs.core.next(arglist__12813);
          var y = cljs.core.first(arglist__12813);
          arglist__12813 = cljs.core.next(arglist__12813);
          var z = cljs.core.first(arglist__12813);
          var args = cljs.core.rest(arglist__12813);
          return G__12811__delegate(x, y, z, args);
        };
        G__12811.cljs$core$IFn$_invoke$arity$variadic = G__12811__delegate;
        return G__12811;
      }();
      G__12810 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12810__0.call(this);
          case 1:
            return G__12810__1.call(this, x);
          case 2:
            return G__12810__2.call(this, x, y);
          case 3:
            return G__12810__3.call(this, x, y, z);
          default:
            var G__12814 = null;
            if (arguments.length > 3) {
              var G__12815__i = 0, G__12815__a = new Array(arguments.length - 3);
              while (G__12815__i < G__12815__a.length) {
                G__12815__a[G__12815__i] = arguments[G__12815__i + 3];
                ++G__12815__i;
              }
              G__12814 = new cljs.core.IndexedSeq(G__12815__a, 0);
            }
            return G__12810__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12814);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12810.cljs$lang$maxFixedArity = 3;
      G__12810.cljs$lang$applyTo = G__12810__4.cljs$lang$applyTo;
      G__12810.cljs$core$IFn$_invoke$arity$0 = G__12810__0;
      G__12810.cljs$core$IFn$_invoke$arity$1 = G__12810__1;
      G__12810.cljs$core$IFn$_invoke$arity$2 = G__12810__2;
      G__12810.cljs$core$IFn$_invoke$arity$3 = G__12810__3;
      G__12810.cljs$core$IFn$_invoke$arity$variadic = G__12810__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__12810;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq12743) {
  var G__12744 = cljs.core.first(seq12743);
  var seq12743__$1 = cljs.core.next(seq12743);
  var G__12745 = cljs.core.first(seq12743__$1);
  var seq12743__$2 = cljs.core.next(seq12743__$1);
  var G__12746 = cljs.core.first(seq12743__$2);
  var seq12743__$3 = cljs.core.next(seq12743__$2);
  return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(G__12744, G__12745, G__12746, seq12743__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun() {
  var G__12817 = arguments.length;
  switch(G__12817) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var G__12819 = cljs.core.next(coll);
      coll = G__12819;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__12820 = n - 1;
      var G__12821 = cljs.core.next(coll);
      n = G__12820;
      coll = G__12821;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall() {
  var G__12823 = arguments.length;
  switch(G__12823) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? cljs$core$re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__12828 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12828, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12828, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__6754__auto__ = flags;
      if (cljs.core.truth_(or__6754__auto__)) {
        return or__6754__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_12836 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__6754__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__6754__auto__)) {
              return or__6754__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__12837_12843 = cljs.core.first(coll);
          var G__12838_12844 = writer;
          var G__12839_12845 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__12837_12843, G__12838_12844, G__12839_12845) : print_one.call(null, G__12837_12843, G__12838_12844, G__12839_12845);
        } else {
        }
        var coll_12846__$1 = cljs.core.next(coll);
        var n_12847 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_12846__$1 && (n_12847 == null || !(n_12847 === 0))) {
            cljs.core._write(writer, sep);
            var G__12840_12848 = cljs.core.first(coll_12846__$1);
            var G__12841_12849 = writer;
            var G__12842_12850 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__12840_12848, G__12841_12849, G__12842_12850) : print_one.call(null, G__12840_12848, G__12841_12849, G__12842_12850);
            var G__12851 = cljs.core.next(coll_12846__$1);
            var G__12852 = n_12847 - 1;
            coll_12846__$1 = G__12851;
            n_12847 = G__12852;
            continue;
          } else {
            if (cljs.core.seq(coll_12846__$1) && n_12847 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__6754__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__6754__auto__)) {
                  return or__6754__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_12836;
  }
};
cljs.core.write_all = function cljs$core$write_all() {
  var argseq__7794__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7794__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__12855 = cljs.core.seq(ss);
  var chunk__12856 = null;
  var count__12857 = 0;
  var i__12858 = 0;
  while (true) {
    if (i__12858 < count__12857) {
      var s = chunk__12856.cljs$core$IIndexed$_nth$arity$2(null, i__12858);
      cljs.core._write(writer, s);
      var G__12859 = seq__12855;
      var G__12860 = chunk__12856;
      var G__12861 = count__12857;
      var G__12862 = i__12858 + 1;
      seq__12855 = G__12859;
      chunk__12856 = G__12860;
      count__12857 = G__12861;
      i__12858 = G__12862;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__12855);
      if (temp__4425__auto__) {
        var seq__12855__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__12855__$1)) {
          var c__7539__auto__ = cljs.core.chunk_first(seq__12855__$1);
          var G__12863 = cljs.core.chunk_rest(seq__12855__$1);
          var G__12864 = c__7539__auto__;
          var G__12865 = cljs.core.count(c__7539__auto__);
          var G__12866 = 0;
          seq__12855 = G__12863;
          chunk__12856 = G__12864;
          count__12857 = G__12865;
          i__12858 = G__12866;
          continue;
        } else {
          var s = cljs.core.first(seq__12855__$1);
          cljs.core._write(writer, s);
          var G__12867 = cljs.core.next(seq__12855__$1);
          var G__12868 = null;
          var G__12869 = 0;
          var G__12870 = 0;
          seq__12855 = G__12867;
          chunk__12856 = G__12868;
          count__12857 = G__12869;
          i__12858 = G__12870;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq12853) {
  var G__12854 = cljs.core.first(seq12853);
  var seq12853__$1 = cljs.core.next(seq12853);
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(G__12854, seq12853__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj12872 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj12872;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return [cljs.core.str('"'), cljs.core.str(s.replace(function() {
    var G__12875 = '[\\\\"\b\f\n\r\t]';
    var G__12876 = "g";
    return RegExp(G__12875, G__12876);
  }(), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write(writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__6742__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__6742__auto__)) {
          var and__6742__auto____$1 = function() {
            var G__12890 = obj;
            if (G__12890) {
              var bit__7428__auto__ = G__12890.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__7428__auto__ || G__12890.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__12890.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__12890);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__12890);
            }
          }();
          if (and__6742__auto____$1) {
            return cljs.core.meta(obj);
          } else {
            return and__6742__auto____$1;
          }
        } else {
          return and__6742__auto__;
        }
      }())) {
        cljs.core._write(writer, "^");
        var G__12891_12901 = cljs.core.meta(obj);
        var G__12892_12902 = writer;
        var G__12893_12903 = opts;
        cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__12891_12901, G__12892_12902, G__12893_12903) : cljs.core.pr_writer.call(null, G__12891_12901, G__12892_12902, G__12893_12903);
        cljs.core._write(writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write(writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__12894 = obj;
            if (G__12894) {
              var bit__7421__auto__ = G__12894.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__7421__auto__ || G__12894.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
          } else {
            if (cljs.core.type(obj) === Boolean || typeof obj === "number") {
              return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_(obj)) {
                cljs.core._write(writer, "#js ");
                var G__12895 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
                }, cljs.core.js_keys(obj));
                var G__12896 = cljs.core.pr_writer;
                var G__12897 = writer;
                var G__12898 = opts;
                return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__12895, G__12896, G__12897, G__12898) : cljs.core.print_map.call(null, G__12895, G__12896, G__12897, G__12898);
              } else {
                if (cljs.core.array_QMARK_(obj)) {
                  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (cljs.core.truth_(function() {
                    var G__12899 = obj;
                    return goog.isString(G__12899);
                  }())) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write(writer, cljs.core.quote_string(obj));
                    } else {
                      return cljs.core._write(writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count(ns) < len) {
                              var G__12904 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__12904;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                      } else {
                        if (cljs.core.truth_(cljs.core.regexp_QMARK_(obj))) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                        } else {
                          if (function() {
                            var G__12900 = obj;
                            if (G__12900) {
                              var bit__7428__auto__ = G__12900.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__7428__auto__ || G__12900.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__12900.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__12900);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__12900);
                            }
                          }()) {
                            return cljs.core._pr_writer(obj, writer, opts);
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var alt_impl = temp__4423__auto__;
    var G__12908 = obj;
    var G__12909 = writer;
    var G__12910 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__12908, G__12909, G__12910) : alt_impl.call(null, G__12908, G__12909, G__12910);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__12915 = cljs.core.seq(cljs.core.next(objs));
  var chunk__12916 = null;
  var count__12917 = 0;
  var i__12918 = 0;
  while (true) {
    if (i__12918 < count__12917) {
      var obj = chunk__12916.cljs$core$IIndexed$_nth$arity$2(null, i__12918);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__12919 = seq__12915;
      var G__12920 = chunk__12916;
      var G__12921 = count__12917;
      var G__12922 = i__12918 + 1;
      seq__12915 = G__12919;
      chunk__12916 = G__12920;
      count__12917 = G__12921;
      i__12918 = G__12922;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__12915);
      if (temp__4425__auto__) {
        var seq__12915__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__12915__$1)) {
          var c__7539__auto__ = cljs.core.chunk_first(seq__12915__$1);
          var G__12923 = cljs.core.chunk_rest(seq__12915__$1);
          var G__12924 = c__7539__auto__;
          var G__12925 = cljs.core.count(c__7539__auto__);
          var G__12926 = 0;
          seq__12915 = G__12923;
          chunk__12916 = G__12924;
          count__12917 = G__12925;
          i__12918 = G__12926;
          continue;
        } else {
          var obj = cljs.core.first(seq__12915__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__12927 = cljs.core.next(seq__12915__$1);
          var G__12928 = null;
          var G__12929 = 0;
          var G__12930 = 0;
          seq__12915 = G__12927;
          chunk__12916 = G__12928;
          count__12917 = G__12929;
          i__12918 = G__12930;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return [cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return [cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline() {
  var G__12932 = arguments.length;
  switch(G__12932) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str() {
  var argseq__7794__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__7794__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq12934) {
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12934));
};
cljs.core.prn_str = function cljs$core$prn_str() {
  var argseq__7794__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__7794__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq12935) {
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12935));
};
cljs.core.pr = function cljs$core$pr() {
  var argseq__7794__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__7794__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq12936) {
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12936));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__12937__i = 0, G__12937__a = new Array(arguments.length - 0);
      while (G__12937__i < G__12937__a.length) {
        G__12937__a[G__12937__i] = arguments[G__12937__i + 0];
        ++G__12937__i;
      }
      objs = new cljs.core.IndexedSeq(G__12937__a, 0);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__12938) {
    var objs = cljs.core.seq(arglist__12938);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str() {
  var argseq__7794__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__7794__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq12939) {
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12939));
};
cljs.core.println = function cljs$core$println() {
  var argseq__7794__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__7794__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq12940) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12940));
};
cljs.core.println_str = function cljs$core$println_str() {
  var argseq__7794__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__7794__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq12941) {
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12941));
};
cljs.core.prn = function cljs$core$prn() {
  var argseq__7794__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__7794__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq12942) {
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12942));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__12949_12955 = cljs.core.key(e);
    var G__12950_12956 = w;
    var G__12951_12957 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__12949_12955, G__12950_12956, G__12951_12957) : print_one.call(null, G__12949_12955, G__12950_12956, G__12951_12957);
    cljs.core._write(w, " ");
    var G__12952 = cljs.core.val(e);
    var G__12953 = w;
    var G__12954 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__12952, G__12953, G__12954) : print_one.call(null, G__12952, G__12953, G__12954);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cVolatile: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cAtom: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_() {
  var argseq__7794__auto__ = 2 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7794__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq12958) {
  var G__12959 = cljs.core.first(seq12958);
  var seq12958__$1 = cljs.core.next(seq12958);
  var G__12960 = cljs.core.first(seq12958__$1);
  var seq12958__$2 = cljs.core.next(seq12958__$1);
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__12959, G__12960, seq12958__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym() {
  var G__12962 = arguments.length;
  switch(G__12962) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = function() {
      var G__12963 = 0;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__12963) : cljs.core.atom.call(null, G__12963);
    }();
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = function() {
      return self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    }();
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "value", "value", 1946509744, null)], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    var G__12966 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12966) : cljs.core.deref.call(null, G__12966);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__12967_SHARP_, p2__12968_SHARP_) {
    var ret = function() {
      var G__12971 = p1__12967_SHARP_;
      var G__12972 = p2__12968_SHARP_;
      return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12971, G__12972) : rf.call(null, G__12971, G__12972);
    }();
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__12975 = null;
      var G__12975__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__12975__1 = function(result) {
        var G__12974 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12974) : rf.call(null, G__12974);
      };
      var G__12975__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__12975 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__12975__0.call(this);
          case 1:
            return G__12975__1.call(this, result);
          case 2:
            return G__12975__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12975.cljs$core$IFn$_invoke$arity$0 = G__12975__0;
      G__12975.cljs$core$IFn$_invoke$arity$1 = G__12975__1;
      G__12975.cljs$core$IFn$_invoke$arity$2 = G__12975__2;
      return G__12975;
    }();
  }(rf1);
};
cljs.core.dedupe = function cljs$core$dedupe() {
  var G__12977 = arguments.length;
  switch(G__12977) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__12983 = null;
        var G__12983__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__12983__1 = function(result) {
          var G__12978 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12978) : rf.call(null, G__12978);
        };
        var G__12983__2 = function(result, input) {
          var prior = function() {
            var G__12979 = pa;
            return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12979) : cljs.core.deref.call(null, G__12979);
          }();
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            var G__12980 = result;
            var G__12981 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12980, G__12981) : rf.call(null, G__12980, G__12981);
          }
        };
        G__12983 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__12983__0.call(this);
            case 1:
              return G__12983__1.call(this, result);
            case 2:
              return G__12983__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__12983.cljs$core$IFn$_invoke$arity$0 = G__12983__0;
        G__12983.cljs$core$IFn$_invoke$arity$1 = G__12983__1;
        G__12983.cljs$core$IFn$_invoke$arity$2 = G__12983__2;
        return G__12983;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample() {
  var G__12985 = arguments.length;
  switch(G__12985) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return function() {
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
    }() < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return function() {
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
    }() < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7730__auto__ = this;
  return cljs.core.es6_iterator(this__7730__auto__);
};
cljs.core.eduction = function cljs$core$eduction() {
  var argseq__7794__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__7794__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq12987) {
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12987));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__12989_SHARP_, p2__12988_SHARP_) {
    var G__12991 = p2__12988_SHARP_;
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__12991) : proc.call(null, G__12991);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj12993 = {};
  return obj12993;
}();
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (function() {
    var and__6742__auto__ = x;
    if (and__6742__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__7390__auto__ = x == null ? null : x;
    return function() {
      var or__6754__auto__ = cljs.core._clj__GT_js[function() {
        var G__12997 = x__7390__auto__;
        return goog.typeOf(G__12997);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (function() {
    var and__6742__auto__ = x;
    if (and__6742__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__7390__auto__ = x == null ? null : x;
    return function() {
      var or__6754__auto__ = cljs.core._key__GT_js[function() {
        var G__13001 = x__7390__auto__;
        return goog.typeOf(G__13001);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(k) {
  if (function() {
    var G__13004 = k;
    if (G__13004) {
      var bit__7428__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__6754__auto__ = bit__7428__auto__;
        if (cljs.core.truth_(or__6754__auto__)) {
          return or__6754__auto__;
        } else {
          return G__13004.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__13004.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__13004);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__13004);
    }
  }()) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      var G__13005 = k;
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__13005) : cljs.core.clj__GT_js.call(null, G__13005);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__13021 = x;
      if (G__13021) {
        var bit__7428__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__6754__auto__ = bit__7428__auto__;
          if (cljs.core.truth_(or__6754__auto__)) {
            return or__6754__auto__;
          } else {
            return G__13021.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__13021.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__13021);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__13021);
      }
    }()) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return [cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = function() {
              var obj13023 = {};
              return obj13023;
            }();
            var seq__13024_13034 = cljs.core.seq(x);
            var chunk__13025_13035 = null;
            var count__13026_13036 = 0;
            var i__13027_13037 = 0;
            while (true) {
              if (i__13027_13037 < count__13026_13036) {
                var vec__13028_13038 = chunk__13025_13035.cljs$core$IIndexed$_nth$arity$2(null, i__13027_13037);
                var k_13039 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13028_13038, 0, null);
                var v_13040 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13028_13038, 1, null);
                m[cljs.core.key__GT_js(k_13039)] = cljs$core$clj__GT_js(v_13040);
                var G__13041 = seq__13024_13034;
                var G__13042 = chunk__13025_13035;
                var G__13043 = count__13026_13036;
                var G__13044 = i__13027_13037 + 1;
                seq__13024_13034 = G__13041;
                chunk__13025_13035 = G__13042;
                count__13026_13036 = G__13043;
                i__13027_13037 = G__13044;
                continue;
              } else {
                var temp__4425__auto___13045 = cljs.core.seq(seq__13024_13034);
                if (temp__4425__auto___13045) {
                  var seq__13024_13046__$1 = temp__4425__auto___13045;
                  if (cljs.core.chunked_seq_QMARK_(seq__13024_13046__$1)) {
                    var c__7539__auto___13047 = cljs.core.chunk_first(seq__13024_13046__$1);
                    var G__13048 = cljs.core.chunk_rest(seq__13024_13046__$1);
                    var G__13049 = c__7539__auto___13047;
                    var G__13050 = cljs.core.count(c__7539__auto___13047);
                    var G__13051 = 0;
                    seq__13024_13034 = G__13048;
                    chunk__13025_13035 = G__13049;
                    count__13026_13036 = G__13050;
                    i__13027_13037 = G__13051;
                    continue;
                  } else {
                    var vec__13029_13052 = cljs.core.first(seq__13024_13046__$1);
                    var k_13053 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13029_13052, 0, null);
                    var v_13054 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13029_13052, 1, null);
                    m[cljs.core.key__GT_js(k_13053)] = cljs$core$clj__GT_js(v_13054);
                    var G__13055 = cljs.core.next(seq__13024_13046__$1);
                    var G__13056 = null;
                    var G__13057 = 0;
                    var G__13058 = 0;
                    seq__13024_13034 = G__13055;
                    chunk__13025_13035 = G__13056;
                    count__13026_13036 = G__13057;
                    i__13027_13037 = G__13058;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__13030_13059 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js, x));
              var chunk__13031_13060 = null;
              var count__13032_13061 = 0;
              var i__13033_13062 = 0;
              while (true) {
                if (i__13033_13062 < count__13032_13061) {
                  var x_13063__$1 = chunk__13031_13060.cljs$core$IIndexed$_nth$arity$2(null, i__13033_13062);
                  arr.push(x_13063__$1);
                  var G__13064 = seq__13030_13059;
                  var G__13065 = chunk__13031_13060;
                  var G__13066 = count__13032_13061;
                  var G__13067 = i__13033_13062 + 1;
                  seq__13030_13059 = G__13064;
                  chunk__13031_13060 = G__13065;
                  count__13032_13061 = G__13066;
                  i__13033_13062 = G__13067;
                  continue;
                } else {
                  var temp__4425__auto___13068 = cljs.core.seq(seq__13030_13059);
                  if (temp__4425__auto___13068) {
                    var seq__13030_13069__$1 = temp__4425__auto___13068;
                    if (cljs.core.chunked_seq_QMARK_(seq__13030_13069__$1)) {
                      var c__7539__auto___13070 = cljs.core.chunk_first(seq__13030_13069__$1);
                      var G__13071 = cljs.core.chunk_rest(seq__13030_13069__$1);
                      var G__13072 = c__7539__auto___13070;
                      var G__13073 = cljs.core.count(c__7539__auto___13070);
                      var G__13074 = 0;
                      seq__13030_13059 = G__13071;
                      chunk__13031_13060 = G__13072;
                      count__13032_13061 = G__13073;
                      i__13033_13062 = G__13074;
                      continue;
                    } else {
                      var x_13075__$1 = cljs.core.first(seq__13030_13069__$1);
                      arr.push(x_13075__$1);
                      var G__13076 = cljs.core.next(seq__13030_13069__$1);
                      var G__13077 = null;
                      var G__13078 = 0;
                      var G__13079 = 0;
                      seq__13030_13059 = G__13076;
                      chunk__13031_13060 = G__13077;
                      count__13032_13061 = G__13078;
                      i__13033_13062 = G__13079;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj13081 = {};
  return obj13081;
}();
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (function() {
    var and__6742__auto__ = x;
    if (and__6742__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__7390__auto__ = x == null ? null : x;
    return function() {
      var or__6754__auto__ = cljs.core._js__GT_clj[function() {
        var G__13085 = x__7390__auto__;
        return goog.typeOf(G__13085);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj() {
  var G__13089 = arguments.length;
  switch(G__13089) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7805__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__13090 = opts;
  var map__13090__$1 = cljs.core.seq_QMARK_(map__13090) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__13090) : map__13090;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13090__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__13090, map__13090__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (function() {
        var G__13106 = x__$1;
        if (G__13106) {
          var bit__7428__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__6754__auto__ = bit__7428__auto__;
            if (cljs.core.truth_(or__6754__auto__)) {
              return or__6754__auto__;
            } else {
              return G__13106.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__13106.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__13106);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__13106);
        }
      }()) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                  var iter__7508__auto__ = function(map__13090, map__13090__$1, keywordize_keys, keyfn) {
                    return function cljs$core$thisfn_$_iter__13107(s__13108) {
                      return new cljs.core.LazySeq(null, function(map__13090, map__13090__$1, keywordize_keys, keyfn) {
                        return function() {
                          var s__13108__$1 = s__13108;
                          while (true) {
                            var temp__4425__auto__ = cljs.core.seq(s__13108__$1);
                            if (temp__4425__auto__) {
                              var s__13108__$2 = temp__4425__auto__;
                              if (cljs.core.chunked_seq_QMARK_(s__13108__$2)) {
                                var c__7506__auto__ = cljs.core.chunk_first(s__13108__$2);
                                var size__7507__auto__ = cljs.core.count(c__7506__auto__);
                                var b__13110 = cljs.core.chunk_buffer(size__7507__auto__);
                                if (function() {
                                  var i__13109 = 0;
                                  while (true) {
                                    if (i__13109 < size__7507__auto__) {
                                      var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__7506__auto__, i__13109);
                                      cljs.core.chunk_append(b__13110, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                        var G__13115 = k;
                                        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__13115) : keyfn.call(null, G__13115);
                                      }(), cljs$core$thisfn(x__$1[k])], null));
                                      var G__13118 = i__13109 + 1;
                                      i__13109 = G__13118;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__13110), cljs$core$thisfn_$_iter__13107(cljs.core.chunk_rest(s__13108__$2)));
                                } else {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__13110), null);
                                }
                              } else {
                                var k = cljs.core.first(s__13108__$2);
                                return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                  var G__13116 = k;
                                  return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__13116) : keyfn.call(null, G__13116);
                                }(), cljs$core$thisfn(x__$1[k])], null), cljs$core$thisfn_$_iter__13107(cljs.core.rest(s__13108__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(map__13090, map__13090__$1, keywordize_keys, keyfn), null, null);
                    };
                  }(map__13090, map__13090__$1, keywordize_keys, keyfn);
                  return iter__7508__auto__(cljs.core.js_keys(x__$1));
                }());
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    };
  }(map__13090, map__13090__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq13086) {
  var G__13087 = cljs.core.first(seq13086);
  var seq13086__$1 = cljs.core.next(seq13086);
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(G__13087, seq13086__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = function() {
    var G__13121 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__13121) : cljs.core.atom.call(null, G__13121);
  }();
  return function(mem) {
    return function() {
      var G__13123__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(function() {
          var G__13122 = mem;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13122) : cljs.core.deref.call(null, G__13122);
        }(), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__13123 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__13124__i = 0, G__13124__a = new Array(arguments.length - 0);
          while (G__13124__i < G__13124__a.length) {
            G__13124__a[G__13124__i] = arguments[G__13124__i + 0];
            ++G__13124__i;
          }
          args = new cljs.core.IndexedSeq(G__13124__a, 0);
        }
        return G__13123__delegate.call(this, args);
      };
      G__13123.cljs$lang$maxFixedArity = 0;
      G__13123.cljs$lang$applyTo = function(arglist__13125) {
        var args = cljs.core.seq(arglist__13125);
        return G__13123__delegate(args);
      };
      G__13123.cljs$core$IFn$_invoke$arity$variadic = G__13123__delegate;
      return G__13123;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline() {
  var G__13129 = arguments.length;
  switch(G__13129) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__7805__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7805__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }();
    if (cljs.core.fn_QMARK_(ret)) {
      var G__13131 = ret;
      f = G__13131;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq13126) {
  var G__13127 = cljs.core.first(seq13126);
  var seq13126__$1 = cljs.core.next(seq13126);
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(G__13127, seq13126__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand() {
  var G__13133 = arguments.length;
  switch(G__13133) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function() {
    return Math.random();
  }() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__13136 = function() {
    return Math.random();
  }() * n;
  return Math.floor(G__13136);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = function() {
      var G__13138 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13138) : f.call(null, G__13138);
    }();
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__13140 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__13140) : cljs.core.atom.call(null, G__13140);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_() {
  var argseq__7794__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7794__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq13141) {
  var G__13142 = cljs.core.first(seq13141);
  var seq13141__$1 = cljs.core.next(seq13141);
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__13142, seq13141__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_() {
  var G__13144 = arguments.length;
  switch(G__13144) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
    var G__13145 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13145) : cljs.core.deref.call(null, G__13145);
  }(), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__6754__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__6754__auto__) {
    return or__6754__auto__;
  } else {
    var or__6754__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
    if (or__6754__auto____$1) {
      return or__6754__auto____$1;
    } else {
      var and__6742__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__6742__auto__) {
        var and__6742__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__6742__auto____$1) {
          var and__6742__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__6742__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__13171 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, function() {
                  var G__13168 = i;
                  return child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__13168) : child.call(null, G__13168);
                }(), function() {
                  var G__13169 = i;
                  return parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__13169) : parent.call(null, G__13169);
                }());
                var G__13172 = i + 1;
                ret = G__13171;
                i = G__13172;
                continue;
              }
              break;
            }
          } else {
            return and__6742__auto____$2;
          }
        } else {
          return and__6742__auto____$1;
        }
      } else {
        return and__6742__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents() {
  var G__13174 = arguments.length;
  switch(G__13174) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(function() {
    var G__13175 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13175) : cljs.core.deref.call(null, G__13175);
  }(), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors() {
  var G__13178 = arguments.length;
  switch(G__13178) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(function() {
    var G__13179 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13179) : cljs.core.deref.call(null, G__13179);
  }(), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants() {
  var G__13182 = arguments.length;
  switch(G__13182) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(function() {
    var G__13183 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13183) : cljs.core.deref.call(null, G__13183);
  }(), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive() {
  var G__13186 = arguments.length;
  switch(G__13186) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, function() {
            var G__13187 = target;
            return targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__13187) : targets.call(null, G__13187);
          }())));
        };
      }(tp, td, ta), m, cljs.core.cons(source, function() {
        var G__13188 = source;
        return sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__13188) : sources.call(null, G__13188);
      }()));
    };
  }(tp, td, ta);
  var or__6754__auto__ = cljs.core.contains_QMARK_(function() {
    var G__13192 = tag;
    return tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__13192) : tp.call(null, G__13192);
  }(), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(function() {
      var G__13193 = tag;
      return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__13193) : ta.call(null, G__13193);
    }(), parent)) {
      throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(function() {
      var G__13194 = parent;
      return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__13194) : ta.call(null, G__13194);
    }(), tag)) {
      throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__6754__auto__)) {
    return or__6754__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive() {
  var G__13200 = arguments.length;
  switch(G__13200) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(function() {
    var G__13201 = tag;
    return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__13201) : parentMap.call(null, G__13201);
  }()) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(function() {
    var G__13202 = tag;
    return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__13202) : parentMap.call(null, G__13202);
  }(), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__13196_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__13196_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__13196_SHARP_), cljs.core.second(p1__13196_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(function() {
    var G__13203 = tag;
    return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__13203) : parentMap.call(null, G__13203);
  }(), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__13197_SHARP_, p2__13198_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__13197_SHARP_, p2__13198_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    var G__13207 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13207) : cljs.core.deref.call(null, G__13207);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    var G__13208 = hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13208) : cljs.core.deref.call(null, G__13208);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var G__13224 = prefer_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13224) : cljs.core.deref.call(null, G__13224);
  }().call(null, x);
  var or__6754__auto__ = cljs.core.truth_(function() {
    var and__6742__auto__ = xprefs;
    if (cljs.core.truth_(and__6742__auto__)) {
      var G__13226 = y;
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__13226) : xprefs.call(null, G__13226);
    } else {
      return and__6742__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__6754__auto__)) {
    return or__6754__auto__;
  } else {
    var or__6754__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(cljs$core$prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__13227 = cljs.core.rest(ps);
          ps = G__13227;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__6754__auto____$1)) {
      return or__6754__auto____$1;
    } else {
      var or__6754__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__13228 = cljs.core.rest(ps);
            ps = G__13228;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__6754__auto____$2)) {
        return or__6754__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table) {
  var or__6754__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__6754__auto__)) {
    return or__6754__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__13242) {
    var vec__13243 = p__13242;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13243, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13243, 1, null);
    var e = vec__13243;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__13244 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13244) : cljs.core.deref.call(null, G__13244);
    }(), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__6754__auto__ = be == null;
        if (or__6754__auto__) {
          return or__6754__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, function() {
    var G__13245 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13245) : cljs.core.deref.call(null, G__13245);
  }());
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
      var G__13246 = cached_hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13246) : cljs.core.deref.call(null, G__13246);
    }(), function() {
      var G__13247 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13247) : cljs.core.deref.call(null, G__13247);
    }())) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj13249 = {};
  return obj13249;
}();
cljs.core._reset = function cljs$core$_reset(mf) {
  if (function() {
    var and__6742__auto__ = mf;
    if (and__6742__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__7390__auto__ = mf == null ? null : mf;
    return function() {
      var or__6754__auto__ = cljs.core._reset[function() {
        var G__13253 = x__7390__auto__;
        return goog.typeOf(G__13253);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._reset["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (function() {
    var and__6742__auto__ = mf;
    if (and__6742__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__7390__auto__ = mf == null ? null : mf;
    return function() {
      var or__6754__auto__ = cljs.core._add_method[function() {
        var G__13257 = x__7390__auto__;
        return goog.typeOf(G__13257);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._add_method["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (function() {
    var and__6742__auto__ = mf;
    if (and__6742__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__7390__auto__ = mf == null ? null : mf;
    return function() {
      var or__6754__auto__ = cljs.core._remove_method[function() {
        var G__13261 = x__7390__auto__;
        return goog.typeOf(G__13261);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._remove_method["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__6742__auto__ = mf;
    if (and__6742__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__7390__auto__ = mf == null ? null : mf;
    return function() {
      var or__6754__auto__ = cljs.core._prefer_method[function() {
        var G__13265 = x__7390__auto__;
        return goog.typeOf(G__13265);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._prefer_method["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (function() {
    var and__6742__auto__ = mf;
    if (and__6742__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__7390__auto__ = mf == null ? null : mf;
    return function() {
      var or__6754__auto__ = cljs.core._get_method[function() {
        var G__13269 = x__7390__auto__;
        return goog.typeOf(G__13269);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._get_method["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (function() {
    var and__6742__auto__ = mf;
    if (and__6742__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__7390__auto__ = mf == null ? null : mf;
    return function() {
      var or__6754__auto__ = cljs.core._methods[function() {
        var G__13273 = x__7390__auto__;
        return goog.typeOf(G__13273);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._methods["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (function() {
    var and__6742__auto__ = mf;
    if (and__6742__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__7390__auto__ = mf == null ? null : mf;
    return function() {
      var or__6754__auto__ = cljs.core._prefers[function() {
        var G__13277 = x__7390__auto__;
        return goog.typeOf(G__13277);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._prefers["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (function() {
    var and__6742__auto__ = mf;
    if (and__6742__auto__) {
      return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__7390__auto__ = mf == null ? null : mf;
    return function() {
      var or__6754__auto__ = cljs.core._default_dispatch_val[function() {
        var G__13281 = x__7390__auto__;
        return goog.typeOf(G__13281);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._default_dispatch_val["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (function() {
    var and__6742__auto__ = mf;
    if (and__6742__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1;
    } else {
      return and__6742__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__7390__auto__ = mf == null ? null : mf;
    return function() {
      var or__6754__auto__ = cljs.core._dispatch_fn[function() {
        var G__13285 = x__7390__auto__;
        return goog.typeOf(G__13285);
      }()];
      if (or__6754__auto__) {
        return or__6754__auto__;
      } else {
        var or__6754__auto____$1 = cljs.core._dispatch_fn["_"];
        if (or__6754__auto____$1) {
          return or__6754__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__14134 = null;
  var G__14134__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__14134__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__13287 = a;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__13287) : self__.dispatch_fn.call(null, G__13287);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__13288 = a;
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__13288) : target_fn.call(null, G__13288);
  };
  var G__14134__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__13289 = a;
      var G__13290 = b;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__13289, G__13290) : self__.dispatch_fn.call(null, G__13289, G__13290);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__13291 = a;
    var G__13292 = b;
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__13291, G__13292) : target_fn.call(null, G__13291, G__13292);
  };
  var G__14134__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__13293 = a;
      var G__13294 = b;
      var G__13295 = c;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__13293, G__13294, G__13295) : self__.dispatch_fn.call(null, G__13293, G__13294, G__13295);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__13296 = a;
    var G__13297 = b;
    var G__13298 = c;
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__13296, G__13297, G__13298) : target_fn.call(null, G__13296, G__13297, G__13298);
  };
  var G__14134__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__13299 = a;
      var G__13300 = b;
      var G__13301 = c;
      var G__13302 = d;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__13299, G__13300, G__13301, G__13302) : self__.dispatch_fn.call(null, G__13299, G__13300, G__13301, G__13302);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__13303 = a;
    var G__13304 = b;
    var G__13305 = c;
    var G__13306 = d;
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__13303, G__13304, G__13305, G__13306) : target_fn.call(null, G__13303, G__13304, G__13305, G__13306);
  };
  var G__14134__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__13307 = a;
      var G__13308 = b;
      var G__13309 = c;
      var G__13310 = d;
      var G__13311 = e;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__13307, G__13308, G__13309, G__13310, G__13311) : self__.dispatch_fn.call(null, G__13307, G__13308, G__13309, G__13310, G__13311);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__13312 = a;
    var G__13313 = b;
    var G__13314 = c;
    var G__13315 = d;
    var G__13316 = e;
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__13312, G__13313, G__13314, G__13315, G__13316) : target_fn.call(null, G__13312, G__13313, G__13314, G__13315, G__13316);
  };
  var G__14134__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__13317 = a;
      var G__13318 = b;
      var G__13319 = c;
      var G__13320 = d;
      var G__13321 = e;
      var G__13322 = f;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__13317, G__13318, G__13319, G__13320, G__13321, G__13322) : self__.dispatch_fn.call(null, G__13317, G__13318, G__13319, G__13320, G__13321, G__13322);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__13323 = a;
    var G__13324 = b;
    var G__13325 = c;
    var G__13326 = d;
    var G__13327 = e;
    var G__13328 = f;
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__13323, G__13324, G__13325, G__13326, G__13327, G__13328) : target_fn.call(null, G__13323, G__13324, G__13325, G__13326, G__13327, G__13328);
  };
  var G__14134__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__13329 = a;
      var G__13330 = b;
      var G__13331 = c;
      var G__13332 = d;
      var G__13333 = e;
      var G__13334 = f;
      var G__13335 = g;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__13329, G__13330, G__13331, G__13332, G__13333, G__13334, G__13335) : self__.dispatch_fn.call(null, G__13329, G__13330, G__13331, G__13332, G__13333, G__13334, G__13335);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__13336 = a;
    var G__13337 = b;
    var G__13338 = c;
    var G__13339 = d;
    var G__13340 = e;
    var G__13341 = f;
    var G__13342 = g;
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__13336, G__13337, G__13338, G__13339, G__13340, G__13341, G__13342) : target_fn.call(null, G__13336, G__13337, G__13338, G__13339, G__13340, G__13341, G__13342);
  };
  var G__14134__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__13343 = a;
      var G__13344 = b;
      var G__13345 = c;
      var G__13346 = d;
      var G__13347 = e;
      var G__13348 = f;
      var G__13349 = g;
      var G__13350 = h;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__13343, G__13344, G__13345, G__13346, G__13347, G__13348, G__13349, G__13350) : self__.dispatch_fn.call(null, G__13343, G__13344, G__13345, G__13346, G__13347, G__13348, G__13349, G__13350);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__13351 = a;
    var G__13352 = b;
    var G__13353 = c;
    var G__13354 = d;
    var G__13355 = e;
    var G__13356 = f;
    var G__13357 = g;
    var G__13358 = h;
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__13351, G__13352, G__13353, G__13354, G__13355, G__13356, G__13357, G__13358) : target_fn.call(null, G__13351, G__13352, G__13353, G__13354, G__13355, G__13356, G__13357, G__13358);
  };
  var G__14134__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__13359 = a;
      var G__13360 = b;
      var G__13361 = c;
      var G__13362 = d;
      var G__13363 = e;
      var G__13364 = f;
      var G__13365 = g;
      var G__13366 = h;
      var G__13367 = i;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__13359, G__13360, G__13361, G__13362, G__13363, G__13364, G__13365, G__13366, G__13367) : self__.dispatch_fn.call(null, G__13359, G__13360, G__13361, G__13362, G__13363, G__13364, G__13365, G__13366, G__13367);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__13368 = a;
    var G__13369 = b;
    var G__13370 = c;
    var G__13371 = d;
    var G__13372 = e;
    var G__13373 = f;
    var G__13374 = g;
    var G__13375 = h;
    var G__13376 = i;
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__13368, G__13369, G__13370, G__13371, G__13372, G__13373, G__13374, G__13375, G__13376) : target_fn.call(null, G__13368, G__13369, G__13370, G__13371, G__13372, G__13373, G__13374, G__13375, G__13376);
  };
  var G__14134__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__13377 = a;
      var G__13378 = b;
      var G__13379 = c;
      var G__13380 = d;
      var G__13381 = e;
      var G__13382 = f;
      var G__13383 = g;
      var G__13384 = h;
      var G__13385 = i;
      var G__13386 = j;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__13377, G__13378, G__13379, G__13380, G__13381, G__13382, G__13383, G__13384, G__13385, G__13386) : self__.dispatch_fn.call(null, G__13377, G__13378, G__13379, G__13380, G__13381, G__13382, G__13383, G__13384, G__13385, G__13386);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__13387 = a;
    var G__13388 = b;
    var G__13389 = c;
    var G__13390 = d;
    var G__13391 = e;
    var G__13392 = f;
    var G__13393 = g;
    var G__13394 = h;
    var G__13395 = i;
    var G__13396 = j;
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__13387, G__13388, G__13389, G__13390, G__13391, G__13392, G__13393, G__13394, G__13395, G__13396) : target_fn.call(null, G__13387, G__13388, G__13389, G__13390, G__13391, G__13392, G__13393, G__13394, G__13395, G__13396);
  };
  var G__14134__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__13397 = a;
      var G__13398 = b;
      var G__13399 = c;
      var G__13400 = d;
      var G__13401 = e;
      var G__13402 = f;
      var G__13403 = g;
      var G__13404 = h;
      var G__13405 = i;
      var G__13406 = j;
      var G__13407 = k;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__13397, G__13398, G__13399, G__13400, G__13401, G__13402, G__13403, G__13404, G__13405, G__13406, G__13407) : self__.dispatch_fn.call(null, G__13397, G__13398, G__13399, G__13400, G__13401, G__13402, G__13403, G__13404, G__13405, G__13406, G__13407);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__13408 = a;
    var G__13409 = b;
    var G__13410 = c;
    var G__13411 = d;
    var G__13412 = e;
    var G__13413 = f;
    var G__13414 = g;
    var G__13415 = h;
    var G__13416 = i;
    var G__13417 = j;
    var G__13418 = k;
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__13408, G__13409, G__13410, G__13411, G__13412, G__13413, G__13414, G__13415, G__13416, G__13417, G__13418) : target_fn.call(null, G__13408, G__13409, G__13410, G__13411, G__13412, G__13413, G__13414, G__13415, G__13416, G__13417, G__13418);
  };
  var G__14134__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__13419 = a;
      var G__13420 = b;
      var G__13421 = c;
      var G__13422 = d;
      var G__13423 = e;
      var G__13424 = f;
      var G__13425 = g;
      var G__13426 = h;
      var G__13427 = i;
      var G__13428 = j;
      var G__13429 = k;
      var G__13430 = l;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__13419, G__13420, G__13421, G__13422, G__13423, G__13424, G__13425, G__13426, G__13427, G__13428, G__13429, G__13430) : self__.dispatch_fn.call(null, G__13419, G__13420, G__13421, G__13422, G__13423, G__13424, G__13425, G__13426, G__13427, G__13428, G__13429, G__13430);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__13431 = a;
    var G__13432 = b;
    var G__13433 = c;
    var G__13434 = d;
    var G__13435 = e;
    var G__13436 = f;
    var G__13437 = g;
    var G__13438 = h;
    var G__13439 = i;
    var G__13440 = j;
    var G__13441 = k;
    var G__13442 = l;
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__13431, G__13432, G__13433, G__13434, G__13435, G__13436, G__13437, G__13438, G__13439, G__13440, G__13441, G__13442) : target_fn.call(null, G__13431, G__13432, G__13433, G__13434, G__13435, G__13436, G__13437, G__13438, G__13439, G__13440, G__13441, G__13442);
  };
  var G__14134__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__13443 = a;
      var G__13444 = b;
      var G__13445 = c;
      var G__13446 = d;
      var G__13447 = e;
      var G__13448 = f;
      var G__13449 = g;
      var G__13450 = h;
      var G__13451 = i;
      var G__13452 = j;
      var G__13453 = k;
      var G__13454 = l;
      var G__13455 = m;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__13443, G__13444, G__13445, G__13446, G__13447, G__13448, G__13449, G__13450, G__13451, G__13452, G__13453, G__13454, G__13455) : self__.dispatch_fn.call(null, G__13443, G__13444, G__13445, G__13446, G__13447, G__13448, G__13449, G__13450, G__13451, G__13452, G__13453, G__13454, G__13455);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__13456 = a;
    var G__13457 = b;
    var G__13458 = c;
    var G__13459 = d;
    var G__13460 = e;
    var G__13461 = f;
    var G__13462 = g;
    var G__13463 = h;
    var G__13464 = i;
    var G__13465 = j;
    var G__13466 = k;
    var G__13467 = l;
    var G__13468 = m;
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__13456, G__13457, G__13458, G__13459, G__13460, G__13461, G__13462, G__13463, G__13464, G__13465, G__13466, G__13467, G__13468) : target_fn.call(null, G__13456, G__13457, G__13458, G__13459, G__13460, G__13461, G__13462, G__13463, G__13464, G__13465, G__13466, G__13467, G__13468);
  };
  var G__14134__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__13469 = a;
      var G__13470 = b;
      var G__13471 = c;
      var G__13472 = d;
      var G__13473 = e;
      var G__13474 = f;
      var G__13475 = g;
      var G__13476 = h;
      var G__13477 = i;
      var G__13478 = j;
      var G__13479 = k;
      var G__13480 = l;
      var G__13481 = m;
      var G__13482 = n;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__13469, G__13470, G__13471, G__13472, G__13473, G__13474, G__13475, G__13476, G__13477, G__13478, G__13479, G__13480, G__13481, G__13482) : self__.dispatch_fn.call(null, G__13469, G__13470, G__13471, G__13472, G__13473, G__13474, G__13475, G__13476, G__13477, G__13478, G__13479, G__13480, G__13481, G__13482);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__13483 = a;
    var G__13484 = b;
    var G__13485 = c;
    var G__13486 = d;
    var G__13487 = e;
    var G__13488 = f;
    var G__13489 = g;
    var G__13490 = h;
    var G__13491 = i;
    var G__13492 = j;
    var G__13493 = k;
    var G__13494 = l;
    var G__13495 = m;
    var G__13496 = n;
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__13483, G__13484, G__13485, G__13486, G__13487, G__13488, G__13489, G__13490, G__13491, G__13492, G__13493, G__13494, G__13495, G__13496) : target_fn.call(null, G__13483, G__13484, G__13485, G__13486, G__13487, G__13488, G__13489, G__13490, G__13491, G__13492, G__13493, G__13494, G__13495, G__13496);
  };
  var G__14134__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__13497 = a;
      var G__13498 = b;
      var G__13499 = c;
      var G__13500 = d;
      var G__13501 = e;
      var G__13502 = f;
      var G__13503 = g;
      var G__13504 = h;
      var G__13505 = i;
      var G__13506 = j;
      var G__13507 = k;
      var G__13508 = l;
      var G__13509 = m;
      var G__13510 = n;
      var G__13511 = o;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__13497, G__13498, G__13499, G__13500, G__13501, G__13502, G__13503, G__13504, G__13505, G__13506, G__13507, G__13508, G__13509, G__13510, G__13511) : self__.dispatch_fn.call(null, G__13497, G__13498, G__13499, G__13500, G__13501, G__13502, G__13503, G__13504, G__13505, G__13506, G__13507, G__13508, G__13509, G__13510, G__13511);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__13512 = a;
    var G__13513 = b;
    var G__13514 = c;
    var G__13515 = d;
    var G__13516 = e;
    var G__13517 = f;
    var G__13518 = g;
    var G__13519 = h;
    var G__13520 = i;
    var G__13521 = j;
    var G__13522 = k;
    var G__13523 = l;
    var G__13524 = m;
    var G__13525 = n;
    var G__13526 = o;
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__13512, G__13513, G__13514, G__13515, G__13516, G__13517, G__13518, G__13519, G__13520, G__13521, G__13522, G__13523, G__13524, G__13525, G__13526) : target_fn.call(null, G__13512, G__13513, G__13514, G__13515, G__13516, G__13517, G__13518, G__13519, G__13520, G__13521, G__13522, G__13523, G__13524, G__13525, G__13526);
  };
  var G__14134__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__13527 = a;
      var G__13528 = b;
      var G__13529 = c;
      var G__13530 = d;
      var G__13531 = e;
      var G__13532 = f;
      var G__13533 = g;
      var G__13534 = h;
      var G__13535 = i;
      var G__13536 = j;
      var G__13537 = k;
      var G__13538 = l;
      var G__13539 = m;
      var G__13540 = n;
      var G__13541 = o;
      var G__13542 = p;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__13527, G__13528, G__13529, G__13530, G__13531, G__13532, G__13533, G__13534, G__13535, G__13536, G__13537, G__13538, G__13539, G__13540, G__13541, G__13542) : self__.dispatch_fn.call(null, G__13527, G__13528, G__13529, G__13530, G__13531, G__13532, G__13533, G__13534, G__13535, G__13536, G__13537, G__13538, G__13539, G__13540, G__13541, G__13542);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__13543 = a;
    var G__13544 = b;
    var G__13545 = c;
    var G__13546 = d;
    var G__13547 = e;
    var G__13548 = f;
    var G__13549 = g;
    var G__13550 = h;
    var G__13551 = i;
    var G__13552 = j;
    var G__13553 = k;
    var G__13554 = l;
    var G__13555 = m;
    var G__13556 = n;
    var G__13557 = o;
    var G__13558 = p;
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__13543, G__13544, G__13545, G__13546, G__13547, G__13548, G__13549, G__13550, G__13551, G__13552, G__13553, G__13554, G__13555, G__13556, G__13557, G__13558) : target_fn.call(null, G__13543, G__13544, G__13545, G__13546, G__13547, G__13548, G__13549, G__13550, G__13551, G__13552, G__13553, G__13554, G__13555, G__13556, G__13557, G__13558);
  };
  var G__14134__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__13559 = a;
      var G__13560 = b;
      var G__13561 = c;
      var G__13562 = d;
      var G__13563 = e;
      var G__13564 = f;
      var G__13565 = g;
      var G__13566 = h;
      var G__13567 = i;
      var G__13568 = j;
      var G__13569 = k;
      var G__13570 = l;
      var G__13571 = m;
      var G__13572 = n;
      var G__13573 = o;
      var G__13574 = p;
      var G__13575 = q;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__13559, G__13560, G__13561, G__13562, G__13563, G__13564, G__13565, G__13566, G__13567, G__13568, G__13569, G__13570, G__13571, G__13572, G__13573, G__13574, G__13575) : self__.dispatch_fn.call(null, G__13559, G__13560, G__13561, G__13562, G__13563, G__13564, G__13565, G__13566, G__13567, G__13568, G__13569, G__13570, G__13571, G__13572, G__13573, G__13574, G__13575);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__13576 = a;
    var G__13577 = b;
    var G__13578 = c;
    var G__13579 = d;
    var G__13580 = e;
    var G__13581 = f;
    var G__13582 = g;
    var G__13583 = h;
    var G__13584 = i;
    var G__13585 = j;
    var G__13586 = k;
    var G__13587 = l;
    var G__13588 = m;
    var G__13589 = n;
    var G__13590 = o;
    var G__13591 = p;
    var G__13592 = q;
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__13576, G__13577, G__13578, G__13579, G__13580, G__13581, G__13582, G__13583, G__13584, G__13585, G__13586, G__13587, G__13588, G__13589, G__13590, G__13591, G__13592) : target_fn.call(null, G__13576, G__13577, G__13578, G__13579, G__13580, G__13581, G__13582, G__13583, G__13584, G__13585, G__13586, G__13587, G__13588, G__13589, G__13590, G__13591, G__13592);
  };
  var G__14134__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__13593 = a;
      var G__13594 = b;
      var G__13595 = c;
      var G__13596 = d;
      var G__13597 = e;
      var G__13598 = f;
      var G__13599 = g;
      var G__13600 = h;
      var G__13601 = i;
      var G__13602 = j;
      var G__13603 = k;
      var G__13604 = l;
      var G__13605 = m;
      var G__13606 = n;
      var G__13607 = o;
      var G__13608 = p;
      var G__13609 = q;
      var G__13610 = r;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__13593, G__13594, G__13595, G__13596, G__13597, G__13598, G__13599, G__13600, G__13601, G__13602, G__13603, G__13604, G__13605, G__13606, G__13607, G__13608, G__13609, G__13610) : self__.dispatch_fn.call(null, G__13593, G__13594, G__13595, G__13596, G__13597, G__13598, G__13599, G__13600, G__13601, G__13602, G__13603, G__13604, G__13605, G__13606, G__13607, G__13608, G__13609, G__13610);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__13611 = a;
    var G__13612 = b;
    var G__13613 = c;
    var G__13614 = d;
    var G__13615 = e;
    var G__13616 = f;
    var G__13617 = g;
    var G__13618 = h;
    var G__13619 = i;
    var G__13620 = j;
    var G__13621 = k;
    var G__13622 = l;
    var G__13623 = m;
    var G__13624 = n;
    var G__13625 = o;
    var G__13626 = p;
    var G__13627 = q;
    var G__13628 = r;
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__13611, G__13612, G__13613, G__13614, G__13615, G__13616, G__13617, G__13618, G__13619, G__13620, G__13621, G__13622, G__13623, G__13624, G__13625, G__13626, G__13627, G__13628) : target_fn.call(null, G__13611, G__13612, G__13613, G__13614, G__13615, G__13616, G__13617, G__13618, G__13619, G__13620, G__13621, G__13622, G__13623, G__13624, G__13625, G__13626, G__13627, G__13628);
  };
  var G__14134__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__13629 = a;
      var G__13630 = b;
      var G__13631 = c;
      var G__13632 = d;
      var G__13633 = e;
      var G__13634 = f;
      var G__13635 = g;
      var G__13636 = h;
      var G__13637 = i;
      var G__13638 = j;
      var G__13639 = k;
      var G__13640 = l;
      var G__13641 = m;
      var G__13642 = n;
      var G__13643 = o;
      var G__13644 = p;
      var G__13645 = q;
      var G__13646 = r;
      var G__13647 = s;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__13629, G__13630, G__13631, G__13632, G__13633, G__13634, G__13635, G__13636, G__13637, G__13638, G__13639, G__13640, G__13641, G__13642, G__13643, G__13644, G__13645, G__13646, G__13647) : self__.dispatch_fn.call(null, G__13629, G__13630, G__13631, G__13632, G__13633, G__13634, G__13635, G__13636, G__13637, G__13638, G__13639, G__13640, G__13641, G__13642, G__13643, G__13644, G__13645, 
      G__13646, G__13647);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__13648 = a;
    var G__13649 = b;
    var G__13650 = c;
    var G__13651 = d;
    var G__13652 = e;
    var G__13653 = f;
    var G__13654 = g;
    var G__13655 = h;
    var G__13656 = i;
    var G__13657 = j;
    var G__13658 = k;
    var G__13659 = l;
    var G__13660 = m;
    var G__13661 = n;
    var G__13662 = o;
    var G__13663 = p;
    var G__13664 = q;
    var G__13665 = r;
    var G__13666 = s;
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__13648, G__13649, G__13650, G__13651, G__13652, G__13653, G__13654, G__13655, G__13656, G__13657, G__13658, G__13659, G__13660, G__13661, G__13662, G__13663, G__13664, G__13665, G__13666) : target_fn.call(null, G__13648, G__13649, G__13650, G__13651, G__13652, G__13653, G__13654, G__13655, G__13656, G__13657, G__13658, G__13659, G__13660, G__13661, G__13662, G__13663, G__13664, G__13665, G__13666);
  };
  var G__14134__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__13667 = a;
      var G__13668 = b;
      var G__13669 = c;
      var G__13670 = d;
      var G__13671 = e;
      var G__13672 = f;
      var G__13673 = g;
      var G__13674 = h;
      var G__13675 = i;
      var G__13676 = j;
      var G__13677 = k;
      var G__13678 = l;
      var G__13679 = m;
      var G__13680 = n;
      var G__13681 = o;
      var G__13682 = p;
      var G__13683 = q;
      var G__13684 = r;
      var G__13685 = s;
      var G__13686 = t;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__13667, G__13668, G__13669, G__13670, G__13671, G__13672, G__13673, G__13674, G__13675, G__13676, G__13677, G__13678, G__13679, G__13680, G__13681, G__13682, G__13683, G__13684, G__13685, G__13686) : self__.dispatch_fn.call(null, G__13667, G__13668, G__13669, G__13670, G__13671, G__13672, G__13673, G__13674, G__13675, G__13676, G__13677, G__13678, G__13679, G__13680, G__13681, G__13682, 
      G__13683, G__13684, G__13685, G__13686);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__13687 = a;
    var G__13688 = b;
    var G__13689 = c;
    var G__13690 = d;
    var G__13691 = e;
    var G__13692 = f;
    var G__13693 = g;
    var G__13694 = h;
    var G__13695 = i;
    var G__13696 = j;
    var G__13697 = k;
    var G__13698 = l;
    var G__13699 = m;
    var G__13700 = n;
    var G__13701 = o;
    var G__13702 = p;
    var G__13703 = q;
    var G__13704 = r;
    var G__13705 = s;
    var G__13706 = t;
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__13687, G__13688, G__13689, G__13690, G__13691, G__13692, G__13693, G__13694, G__13695, G__13696, G__13697, G__13698, G__13699, G__13700, G__13701, G__13702, G__13703, G__13704, G__13705, G__13706) : target_fn.call(null, G__13687, G__13688, G__13689, G__13690, G__13691, G__13692, G__13693, G__13694, G__13695, G__13696, G__13697, G__13698, G__13699, G__13700, G__13701, G__13702, G__13703, G__13704, G__13705, 
    G__13706);
  };
  var G__14134__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__14134 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__14134__1.call(this, self__);
      case 2:
        return G__14134__2.call(this, self__, a);
      case 3:
        return G__14134__3.call(this, self__, a, b);
      case 4:
        return G__14134__4.call(this, self__, a, b, c);
      case 5:
        return G__14134__5.call(this, self__, a, b, c, d);
      case 6:
        return G__14134__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__14134__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__14134__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__14134__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__14134__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__14134__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__14134__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__14134__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__14134__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__14134__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__14134__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__14134__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__14134__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__14134__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__14134__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__14134__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__14134__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14134.cljs$core$IFn$_invoke$arity$1 = G__14134__1;
  G__14134.cljs$core$IFn$_invoke$arity$2 = G__14134__2;
  G__14134.cljs$core$IFn$_invoke$arity$3 = G__14134__3;
  G__14134.cljs$core$IFn$_invoke$arity$4 = G__14134__4;
  G__14134.cljs$core$IFn$_invoke$arity$5 = G__14134__5;
  G__14134.cljs$core$IFn$_invoke$arity$6 = G__14134__6;
  G__14134.cljs$core$IFn$_invoke$arity$7 = G__14134__7;
  G__14134.cljs$core$IFn$_invoke$arity$8 = G__14134__8;
  G__14134.cljs$core$IFn$_invoke$arity$9 = G__14134__9;
  G__14134.cljs$core$IFn$_invoke$arity$10 = G__14134__10;
  G__14134.cljs$core$IFn$_invoke$arity$11 = G__14134__11;
  G__14134.cljs$core$IFn$_invoke$arity$12 = G__14134__12;
  G__14134.cljs$core$IFn$_invoke$arity$13 = G__14134__13;
  G__14134.cljs$core$IFn$_invoke$arity$14 = G__14134__14;
  G__14134.cljs$core$IFn$_invoke$arity$15 = G__14134__15;
  G__14134.cljs$core$IFn$_invoke$arity$16 = G__14134__16;
  G__14134.cljs$core$IFn$_invoke$arity$17 = G__14134__17;
  G__14134.cljs$core$IFn$_invoke$arity$18 = G__14134__18;
  G__14134.cljs$core$IFn$_invoke$arity$19 = G__14134__19;
  G__14134.cljs$core$IFn$_invoke$arity$20 = G__14134__20;
  G__14134.cljs$core$IFn$_invoke$arity$21 = G__14134__21;
  G__14134.cljs$core$IFn$_invoke$arity$22 = G__14134__22;
  return G__14134;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args13286) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13286)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__13707 = a;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__13707) : self__.dispatch_fn.call(null, G__13707);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__13708 = a;
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__13708) : target_fn.call(null, G__13708);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__13709 = a;
    var G__13710 = b;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__13709, G__13710) : self__.dispatch_fn.call(null, G__13709, G__13710);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__13711 = a;
  var G__13712 = b;
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__13711, G__13712) : target_fn.call(null, G__13711, G__13712);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__13713 = a;
    var G__13714 = b;
    var G__13715 = c;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__13713, G__13714, G__13715) : self__.dispatch_fn.call(null, G__13713, G__13714, G__13715);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__13716 = a;
  var G__13717 = b;
  var G__13718 = c;
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__13716, G__13717, G__13718) : target_fn.call(null, G__13716, G__13717, G__13718);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__13719 = a;
    var G__13720 = b;
    var G__13721 = c;
    var G__13722 = d;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__13719, G__13720, G__13721, G__13722) : self__.dispatch_fn.call(null, G__13719, G__13720, G__13721, G__13722);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__13723 = a;
  var G__13724 = b;
  var G__13725 = c;
  var G__13726 = d;
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__13723, G__13724, G__13725, G__13726) : target_fn.call(null, G__13723, G__13724, G__13725, G__13726);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__13727 = a;
    var G__13728 = b;
    var G__13729 = c;
    var G__13730 = d;
    var G__13731 = e;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__13727, G__13728, G__13729, G__13730, G__13731) : self__.dispatch_fn.call(null, G__13727, G__13728, G__13729, G__13730, G__13731);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__13732 = a;
  var G__13733 = b;
  var G__13734 = c;
  var G__13735 = d;
  var G__13736 = e;
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__13732, G__13733, G__13734, G__13735, G__13736) : target_fn.call(null, G__13732, G__13733, G__13734, G__13735, G__13736);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__13737 = a;
    var G__13738 = b;
    var G__13739 = c;
    var G__13740 = d;
    var G__13741 = e;
    var G__13742 = f;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__13737, G__13738, G__13739, G__13740, G__13741, G__13742) : self__.dispatch_fn.call(null, G__13737, G__13738, G__13739, G__13740, G__13741, G__13742);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__13743 = a;
  var G__13744 = b;
  var G__13745 = c;
  var G__13746 = d;
  var G__13747 = e;
  var G__13748 = f;
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__13743, G__13744, G__13745, G__13746, G__13747, G__13748) : target_fn.call(null, G__13743, G__13744, G__13745, G__13746, G__13747, G__13748);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__13749 = a;
    var G__13750 = b;
    var G__13751 = c;
    var G__13752 = d;
    var G__13753 = e;
    var G__13754 = f;
    var G__13755 = g;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__13749, G__13750, G__13751, G__13752, G__13753, G__13754, G__13755) : self__.dispatch_fn.call(null, G__13749, G__13750, G__13751, G__13752, G__13753, G__13754, G__13755);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__13756 = a;
  var G__13757 = b;
  var G__13758 = c;
  var G__13759 = d;
  var G__13760 = e;
  var G__13761 = f;
  var G__13762 = g;
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__13756, G__13757, G__13758, G__13759, G__13760, G__13761, G__13762) : target_fn.call(null, G__13756, G__13757, G__13758, G__13759, G__13760, G__13761, G__13762);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__13763 = a;
    var G__13764 = b;
    var G__13765 = c;
    var G__13766 = d;
    var G__13767 = e;
    var G__13768 = f;
    var G__13769 = g;
    var G__13770 = h;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__13763, G__13764, G__13765, G__13766, G__13767, G__13768, G__13769, G__13770) : self__.dispatch_fn.call(null, G__13763, G__13764, G__13765, G__13766, G__13767, G__13768, G__13769, G__13770);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__13771 = a;
  var G__13772 = b;
  var G__13773 = c;
  var G__13774 = d;
  var G__13775 = e;
  var G__13776 = f;
  var G__13777 = g;
  var G__13778 = h;
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__13771, G__13772, G__13773, G__13774, G__13775, G__13776, G__13777, G__13778) : target_fn.call(null, G__13771, G__13772, G__13773, G__13774, G__13775, G__13776, G__13777, G__13778);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__13779 = a;
    var G__13780 = b;
    var G__13781 = c;
    var G__13782 = d;
    var G__13783 = e;
    var G__13784 = f;
    var G__13785 = g;
    var G__13786 = h;
    var G__13787 = i;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__13779, G__13780, G__13781, G__13782, G__13783, G__13784, G__13785, G__13786, G__13787) : self__.dispatch_fn.call(null, G__13779, G__13780, G__13781, G__13782, G__13783, G__13784, G__13785, G__13786, G__13787);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__13788 = a;
  var G__13789 = b;
  var G__13790 = c;
  var G__13791 = d;
  var G__13792 = e;
  var G__13793 = f;
  var G__13794 = g;
  var G__13795 = h;
  var G__13796 = i;
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__13788, G__13789, G__13790, G__13791, G__13792, G__13793, G__13794, G__13795, G__13796) : target_fn.call(null, G__13788, G__13789, G__13790, G__13791, G__13792, G__13793, G__13794, G__13795, G__13796);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__13797 = a;
    var G__13798 = b;
    var G__13799 = c;
    var G__13800 = d;
    var G__13801 = e;
    var G__13802 = f;
    var G__13803 = g;
    var G__13804 = h;
    var G__13805 = i;
    var G__13806 = j;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__13797, G__13798, G__13799, G__13800, G__13801, G__13802, G__13803, G__13804, G__13805, G__13806) : self__.dispatch_fn.call(null, G__13797, G__13798, G__13799, G__13800, G__13801, G__13802, G__13803, G__13804, G__13805, G__13806);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__13807 = a;
  var G__13808 = b;
  var G__13809 = c;
  var G__13810 = d;
  var G__13811 = e;
  var G__13812 = f;
  var G__13813 = g;
  var G__13814 = h;
  var G__13815 = i;
  var G__13816 = j;
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__13807, G__13808, G__13809, G__13810, G__13811, G__13812, G__13813, G__13814, G__13815, G__13816) : target_fn.call(null, G__13807, G__13808, G__13809, G__13810, G__13811, G__13812, G__13813, G__13814, G__13815, G__13816);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__13817 = a;
    var G__13818 = b;
    var G__13819 = c;
    var G__13820 = d;
    var G__13821 = e;
    var G__13822 = f;
    var G__13823 = g;
    var G__13824 = h;
    var G__13825 = i;
    var G__13826 = j;
    var G__13827 = k;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__13817, G__13818, G__13819, G__13820, G__13821, G__13822, G__13823, G__13824, G__13825, G__13826, G__13827) : self__.dispatch_fn.call(null, G__13817, G__13818, G__13819, G__13820, G__13821, G__13822, G__13823, G__13824, G__13825, G__13826, G__13827);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__13828 = a;
  var G__13829 = b;
  var G__13830 = c;
  var G__13831 = d;
  var G__13832 = e;
  var G__13833 = f;
  var G__13834 = g;
  var G__13835 = h;
  var G__13836 = i;
  var G__13837 = j;
  var G__13838 = k;
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__13828, G__13829, G__13830, G__13831, G__13832, G__13833, G__13834, G__13835, G__13836, G__13837, G__13838) : target_fn.call(null, G__13828, G__13829, G__13830, G__13831, G__13832, G__13833, G__13834, G__13835, G__13836, G__13837, G__13838);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__13839 = a;
    var G__13840 = b;
    var G__13841 = c;
    var G__13842 = d;
    var G__13843 = e;
    var G__13844 = f;
    var G__13845 = g;
    var G__13846 = h;
    var G__13847 = i;
    var G__13848 = j;
    var G__13849 = k;
    var G__13850 = l;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__13839, G__13840, G__13841, G__13842, G__13843, G__13844, G__13845, G__13846, G__13847, G__13848, G__13849, G__13850) : self__.dispatch_fn.call(null, G__13839, G__13840, G__13841, G__13842, G__13843, G__13844, G__13845, G__13846, G__13847, G__13848, G__13849, G__13850);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__13851 = a;
  var G__13852 = b;
  var G__13853 = c;
  var G__13854 = d;
  var G__13855 = e;
  var G__13856 = f;
  var G__13857 = g;
  var G__13858 = h;
  var G__13859 = i;
  var G__13860 = j;
  var G__13861 = k;
  var G__13862 = l;
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__13851, G__13852, G__13853, G__13854, G__13855, G__13856, G__13857, G__13858, G__13859, G__13860, G__13861, G__13862) : target_fn.call(null, G__13851, G__13852, G__13853, G__13854, G__13855, G__13856, G__13857, G__13858, G__13859, G__13860, G__13861, G__13862);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__13863 = a;
    var G__13864 = b;
    var G__13865 = c;
    var G__13866 = d;
    var G__13867 = e;
    var G__13868 = f;
    var G__13869 = g;
    var G__13870 = h;
    var G__13871 = i;
    var G__13872 = j;
    var G__13873 = k;
    var G__13874 = l;
    var G__13875 = m;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__13863, G__13864, G__13865, G__13866, G__13867, G__13868, G__13869, G__13870, G__13871, G__13872, G__13873, G__13874, G__13875) : self__.dispatch_fn.call(null, G__13863, G__13864, G__13865, G__13866, G__13867, G__13868, G__13869, G__13870, G__13871, G__13872, G__13873, G__13874, G__13875);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__13876 = a;
  var G__13877 = b;
  var G__13878 = c;
  var G__13879 = d;
  var G__13880 = e;
  var G__13881 = f;
  var G__13882 = g;
  var G__13883 = h;
  var G__13884 = i;
  var G__13885 = j;
  var G__13886 = k;
  var G__13887 = l;
  var G__13888 = m;
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__13876, G__13877, G__13878, G__13879, G__13880, G__13881, G__13882, G__13883, G__13884, G__13885, G__13886, G__13887, G__13888) : target_fn.call(null, G__13876, G__13877, G__13878, G__13879, G__13880, G__13881, G__13882, G__13883, G__13884, G__13885, G__13886, G__13887, G__13888);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__13889 = a;
    var G__13890 = b;
    var G__13891 = c;
    var G__13892 = d;
    var G__13893 = e;
    var G__13894 = f;
    var G__13895 = g;
    var G__13896 = h;
    var G__13897 = i;
    var G__13898 = j;
    var G__13899 = k;
    var G__13900 = l;
    var G__13901 = m;
    var G__13902 = n;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__13889, G__13890, G__13891, G__13892, G__13893, G__13894, G__13895, G__13896, G__13897, G__13898, G__13899, G__13900, G__13901, G__13902) : self__.dispatch_fn.call(null, G__13889, G__13890, G__13891, G__13892, G__13893, G__13894, G__13895, G__13896, G__13897, G__13898, G__13899, G__13900, G__13901, G__13902);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__13903 = a;
  var G__13904 = b;
  var G__13905 = c;
  var G__13906 = d;
  var G__13907 = e;
  var G__13908 = f;
  var G__13909 = g;
  var G__13910 = h;
  var G__13911 = i;
  var G__13912 = j;
  var G__13913 = k;
  var G__13914 = l;
  var G__13915 = m;
  var G__13916 = n;
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__13903, G__13904, G__13905, G__13906, G__13907, G__13908, G__13909, G__13910, G__13911, G__13912, G__13913, G__13914, G__13915, G__13916) : target_fn.call(null, G__13903, G__13904, G__13905, G__13906, G__13907, G__13908, G__13909, G__13910, G__13911, G__13912, G__13913, G__13914, G__13915, G__13916);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__13917 = a;
    var G__13918 = b;
    var G__13919 = c;
    var G__13920 = d;
    var G__13921 = e;
    var G__13922 = f;
    var G__13923 = g;
    var G__13924 = h;
    var G__13925 = i;
    var G__13926 = j;
    var G__13927 = k;
    var G__13928 = l;
    var G__13929 = m;
    var G__13930 = n;
    var G__13931 = o;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__13917, G__13918, G__13919, G__13920, G__13921, G__13922, G__13923, G__13924, G__13925, G__13926, G__13927, G__13928, G__13929, G__13930, G__13931) : self__.dispatch_fn.call(null, G__13917, G__13918, G__13919, G__13920, G__13921, G__13922, G__13923, G__13924, G__13925, G__13926, G__13927, G__13928, G__13929, G__13930, G__13931);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__13932 = a;
  var G__13933 = b;
  var G__13934 = c;
  var G__13935 = d;
  var G__13936 = e;
  var G__13937 = f;
  var G__13938 = g;
  var G__13939 = h;
  var G__13940 = i;
  var G__13941 = j;
  var G__13942 = k;
  var G__13943 = l;
  var G__13944 = m;
  var G__13945 = n;
  var G__13946 = o;
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__13932, G__13933, G__13934, G__13935, G__13936, G__13937, G__13938, G__13939, G__13940, G__13941, G__13942, G__13943, G__13944, G__13945, G__13946) : target_fn.call(null, G__13932, G__13933, G__13934, G__13935, G__13936, G__13937, G__13938, G__13939, G__13940, G__13941, G__13942, G__13943, G__13944, G__13945, G__13946);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__13947 = a;
    var G__13948 = b;
    var G__13949 = c;
    var G__13950 = d;
    var G__13951 = e;
    var G__13952 = f;
    var G__13953 = g;
    var G__13954 = h;
    var G__13955 = i;
    var G__13956 = j;
    var G__13957 = k;
    var G__13958 = l;
    var G__13959 = m;
    var G__13960 = n;
    var G__13961 = o;
    var G__13962 = p;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__13947, G__13948, G__13949, G__13950, G__13951, G__13952, G__13953, G__13954, G__13955, G__13956, G__13957, G__13958, G__13959, G__13960, G__13961, G__13962) : self__.dispatch_fn.call(null, G__13947, G__13948, G__13949, G__13950, G__13951, G__13952, G__13953, G__13954, G__13955, G__13956, G__13957, G__13958, G__13959, G__13960, G__13961, G__13962);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__13963 = a;
  var G__13964 = b;
  var G__13965 = c;
  var G__13966 = d;
  var G__13967 = e;
  var G__13968 = f;
  var G__13969 = g;
  var G__13970 = h;
  var G__13971 = i;
  var G__13972 = j;
  var G__13973 = k;
  var G__13974 = l;
  var G__13975 = m;
  var G__13976 = n;
  var G__13977 = o;
  var G__13978 = p;
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__13963, G__13964, G__13965, G__13966, G__13967, G__13968, G__13969, G__13970, G__13971, G__13972, G__13973, G__13974, G__13975, G__13976, G__13977, G__13978) : target_fn.call(null, G__13963, G__13964, G__13965, G__13966, G__13967, G__13968, G__13969, G__13970, G__13971, G__13972, G__13973, G__13974, G__13975, G__13976, G__13977, G__13978);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__13979 = a;
    var G__13980 = b;
    var G__13981 = c;
    var G__13982 = d;
    var G__13983 = e;
    var G__13984 = f;
    var G__13985 = g;
    var G__13986 = h;
    var G__13987 = i;
    var G__13988 = j;
    var G__13989 = k;
    var G__13990 = l;
    var G__13991 = m;
    var G__13992 = n;
    var G__13993 = o;
    var G__13994 = p;
    var G__13995 = q;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__13979, G__13980, G__13981, G__13982, G__13983, G__13984, G__13985, G__13986, G__13987, G__13988, G__13989, G__13990, G__13991, G__13992, G__13993, G__13994, G__13995) : self__.dispatch_fn.call(null, G__13979, G__13980, G__13981, G__13982, G__13983, G__13984, G__13985, G__13986, G__13987, G__13988, G__13989, G__13990, G__13991, G__13992, G__13993, G__13994, G__13995);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__13996 = a;
  var G__13997 = b;
  var G__13998 = c;
  var G__13999 = d;
  var G__14000 = e;
  var G__14001 = f;
  var G__14002 = g;
  var G__14003 = h;
  var G__14004 = i;
  var G__14005 = j;
  var G__14006 = k;
  var G__14007 = l;
  var G__14008 = m;
  var G__14009 = n;
  var G__14010 = o;
  var G__14011 = p;
  var G__14012 = q;
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__13996, G__13997, G__13998, G__13999, G__14000, G__14001, G__14002, G__14003, G__14004, G__14005, G__14006, G__14007, G__14008, G__14009, G__14010, G__14011, G__14012) : target_fn.call(null, G__13996, G__13997, G__13998, G__13999, G__14000, G__14001, G__14002, G__14003, G__14004, G__14005, G__14006, G__14007, G__14008, G__14009, G__14010, G__14011, G__14012);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__14013 = a;
    var G__14014 = b;
    var G__14015 = c;
    var G__14016 = d;
    var G__14017 = e;
    var G__14018 = f;
    var G__14019 = g;
    var G__14020 = h;
    var G__14021 = i;
    var G__14022 = j;
    var G__14023 = k;
    var G__14024 = l;
    var G__14025 = m;
    var G__14026 = n;
    var G__14027 = o;
    var G__14028 = p;
    var G__14029 = q;
    var G__14030 = r;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__14013, G__14014, G__14015, G__14016, G__14017, G__14018, G__14019, G__14020, G__14021, G__14022, G__14023, G__14024, G__14025, G__14026, G__14027, G__14028, G__14029, G__14030) : self__.dispatch_fn.call(null, G__14013, G__14014, G__14015, G__14016, G__14017, G__14018, G__14019, G__14020, G__14021, G__14022, G__14023, G__14024, G__14025, G__14026, G__14027, G__14028, G__14029, G__14030);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__14031 = a;
  var G__14032 = b;
  var G__14033 = c;
  var G__14034 = d;
  var G__14035 = e;
  var G__14036 = f;
  var G__14037 = g;
  var G__14038 = h;
  var G__14039 = i;
  var G__14040 = j;
  var G__14041 = k;
  var G__14042 = l;
  var G__14043 = m;
  var G__14044 = n;
  var G__14045 = o;
  var G__14046 = p;
  var G__14047 = q;
  var G__14048 = r;
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__14031, G__14032, G__14033, G__14034, G__14035, G__14036, G__14037, G__14038, G__14039, G__14040, G__14041, G__14042, G__14043, G__14044, G__14045, G__14046, G__14047, G__14048) : target_fn.call(null, G__14031, G__14032, G__14033, G__14034, G__14035, G__14036, G__14037, G__14038, G__14039, G__14040, G__14041, G__14042, G__14043, G__14044, G__14045, G__14046, G__14047, G__14048);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__14049 = a;
    var G__14050 = b;
    var G__14051 = c;
    var G__14052 = d;
    var G__14053 = e;
    var G__14054 = f;
    var G__14055 = g;
    var G__14056 = h;
    var G__14057 = i;
    var G__14058 = j;
    var G__14059 = k;
    var G__14060 = l;
    var G__14061 = m;
    var G__14062 = n;
    var G__14063 = o;
    var G__14064 = p;
    var G__14065 = q;
    var G__14066 = r;
    var G__14067 = s;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__14049, G__14050, G__14051, G__14052, G__14053, G__14054, G__14055, G__14056, G__14057, G__14058, G__14059, G__14060, G__14061, G__14062, G__14063, G__14064, G__14065, G__14066, G__14067) : self__.dispatch_fn.call(null, G__14049, G__14050, G__14051, G__14052, G__14053, G__14054, G__14055, G__14056, G__14057, G__14058, G__14059, G__14060, G__14061, G__14062, G__14063, G__14064, G__14065, 
    G__14066, G__14067);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__14068 = a;
  var G__14069 = b;
  var G__14070 = c;
  var G__14071 = d;
  var G__14072 = e;
  var G__14073 = f;
  var G__14074 = g;
  var G__14075 = h;
  var G__14076 = i;
  var G__14077 = j;
  var G__14078 = k;
  var G__14079 = l;
  var G__14080 = m;
  var G__14081 = n;
  var G__14082 = o;
  var G__14083 = p;
  var G__14084 = q;
  var G__14085 = r;
  var G__14086 = s;
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__14068, G__14069, G__14070, G__14071, G__14072, G__14073, G__14074, G__14075, G__14076, G__14077, G__14078, G__14079, G__14080, G__14081, G__14082, G__14083, G__14084, G__14085, G__14086) : target_fn.call(null, G__14068, G__14069, G__14070, G__14071, G__14072, G__14073, G__14074, G__14075, G__14076, G__14077, G__14078, G__14079, G__14080, G__14081, G__14082, G__14083, G__14084, G__14085, G__14086);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__14087 = a;
    var G__14088 = b;
    var G__14089 = c;
    var G__14090 = d;
    var G__14091 = e;
    var G__14092 = f;
    var G__14093 = g;
    var G__14094 = h;
    var G__14095 = i;
    var G__14096 = j;
    var G__14097 = k;
    var G__14098 = l;
    var G__14099 = m;
    var G__14100 = n;
    var G__14101 = o;
    var G__14102 = p;
    var G__14103 = q;
    var G__14104 = r;
    var G__14105 = s;
    var G__14106 = t;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__14087, G__14088, G__14089, G__14090, G__14091, G__14092, G__14093, G__14094, G__14095, G__14096, G__14097, G__14098, G__14099, G__14100, G__14101, G__14102, G__14103, G__14104, G__14105, G__14106) : self__.dispatch_fn.call(null, G__14087, G__14088, G__14089, G__14090, G__14091, G__14092, G__14093, G__14094, G__14095, G__14096, G__14097, G__14098, G__14099, G__14100, G__14101, G__14102, 
    G__14103, G__14104, G__14105, G__14106);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__14107 = a;
  var G__14108 = b;
  var G__14109 = c;
  var G__14110 = d;
  var G__14111 = e;
  var G__14112 = f;
  var G__14113 = g;
  var G__14114 = h;
  var G__14115 = i;
  var G__14116 = j;
  var G__14117 = k;
  var G__14118 = l;
  var G__14119 = m;
  var G__14120 = n;
  var G__14121 = o;
  var G__14122 = p;
  var G__14123 = q;
  var G__14124 = r;
  var G__14125 = s;
  var G__14126 = t;
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__14107, G__14108, G__14109, G__14110, G__14111, G__14112, G__14113, G__14114, G__14115, G__14116, G__14117, G__14118, G__14119, G__14120, G__14121, G__14122, G__14123, G__14124, G__14125, G__14126) : target_fn.call(null, G__14107, G__14108, G__14109, G__14110, G__14111, G__14112, G__14113, G__14114, G__14115, G__14116, G__14117, G__14118, G__14119, G__14120, G__14121, G__14122, G__14123, G__14124, G__14125, 
  G__14126);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__14127 = self__.method_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14127) : cljs.core.deref.call(null, G__14127);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__14128 = self__.prefer_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14128) : cljs.core.deref.call(null, G__14128);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
    var G__14130 = self__.cached_hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14130) : cljs.core.deref.call(null, G__14130);
  }(), function() {
    var G__14131 = self__.hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14131) : cljs.core.deref.call(null, G__14131);
  }())) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4423__auto__ = function() {
    var G__14132 = self__.method_cache;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14132) : cljs.core.deref.call(null, G__14132);
  }().call(null, dispatch_val);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var target_fn = temp__4423__auto__;
    return target_fn;
  } else {
    var temp__4423__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4423__auto____$1)) {
      var target_fn = temp__4423__auto____$1;
      return target_fn;
    } else {
      return function() {
        var G__14133 = self__.method_table;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14133) : cljs.core.deref.call(null, G__14133);
      }().call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__14129 = this$__$1;
  return goog.getUid(G__14129);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = function() {
      var G__14135 = self__.uuid;
      return goog.string.hashCode(G__14135);
    }();
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__14136 = self__.uuid;
  var G__14137 = other.uuid;
  return goog.array.defaultCompare(G__14136, G__14137);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  return new cljs.core.UUID(s, null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(15).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(14)).toString(16);
  return cljs.core.uuid([cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str("4"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(rhex), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), 
  cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex())].join(""));
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#ExceptionInfo{:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error;
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info() {
  var G__14139 = arguments.length;
  switch(G__14139) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(function() {
      var G__14145 = x;
      var G__14146 = y;
      return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__14145, G__14146) : pred.call(null, G__14145, G__14146);
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(function() {
        var G__14147 = y;
        var G__14148 = x;
        return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__14147, G__14148) : pred.call(null, G__14147, G__14148);
      }())) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this$__$1, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__14149 = v instanceof cljs.core.Keyword ? v.fqn : null;
  switch(G__14149) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, [cljs.core.str("#"), cljs.core.str(self__.tag), cljs.core.str(" ")].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__7333__auto__, writer__7334__auto__, opt__7335__auto__) {
  return cljs.core._write(writer__7334__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null))], 0)))].join(""));
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
goog.provide("obb_rules.units.vector");
goog.require("cljs.core");
obb_rules.units.vector.metadata = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "category", "category", -593092832), new cljs.core.Keyword(null, "displacement", "displacement", -1309600669), new cljs.core.Keyword(null, "attack-type", "attack-type", -639911421), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "movement-cost", "movement-cost", -716301045), new cljs.core.Keyword(null, 
"type", "type", 1174270348), new cljs.core.Keyword(null, "defense", "defense", 1755014992), new cljs.core.Keyword(null, "code", "code", 1586293142), new cljs.core.Keyword(null, "movement-type", "movement-type", -1340819145), new cljs.core.Keyword(null, "attack", "attack", 1957061788), new cljs.core.Keyword(null, "range", "range", 1639692286)], [new cljs.core.Keyword(null, "medium", "medium", -1864319384), new cljs.core.Keyword(null, "air", "air", -104121788), new cljs.core.Keyword(null, "catapult", 
"catapult", -369050119), "vector", 80, 3, new cljs.core.Keyword(null, "mechanic", "mechanic", -1805001628), 1200, "v", new cljs.core.Keyword(null, "normal", "normal", -1519123858), 2E3, 4]);
goog.provide("obb_rules.units.pretorian");
goog.require("cljs.core");
obb_rules.units.pretorian.metadata = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "category", "category", -593092832), new cljs.core.Keyword(null, "displacement", "displacement", -1309600669), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "movement-cost", "movement-cost", -716301045), new cljs.core.Keyword(null, "after-hit", "after-hit", 491119628), new cljs.core.Keyword(null, "type", 
"type", 1174270348), new cljs.core.Keyword(null, "defense", "defense", 1755014992), new cljs.core.Keyword(null, "code", "code", 1586293142), new cljs.core.Keyword(null, "movement-type", "movement-type", -1340819145), new cljs.core.Keyword(null, "attack", "attack", 1957061788), new cljs.core.Keyword(null, "range", "range", 1639692286)], [new cljs.core.Keyword(null, "medium", "medium", -1864319384), new cljs.core.Keyword(null, "air", "air", -104121788), "pretorian", 48, 2, new cljs.core.PersistentVector(null, 
1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "strikeback", "strikeback", 833058309)], null)], null), new cljs.core.Keyword(null, "mechanic", "mechanic", -1805001628), 5550, "h", new cljs.core.Keyword(null, "diagonal", "diagonal", -1969989146), 450, 3]);
goog.provide("obb_rules.units.panther");
goog.require("cljs.core");
obb_rules.units.panther.metadata = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "category", "category", -593092832), new cljs.core.Keyword(null, "displacement", "displacement", -1309600669), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "movement-cost", "movement-cost", -716301045), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "after-attack", 
"after-attack", -1103058896), new cljs.core.Keyword(null, "defense", "defense", 1755014992), new cljs.core.Keyword(null, "code", "code", 1586293142), new cljs.core.Keyword(null, "movement-type", "movement-type", -1340819145), new cljs.core.Keyword(null, "attack", "attack", 1957061788), new cljs.core.Keyword(null, "range", "range", 1639692286)], [new cljs.core.Keyword(null, "light", "light", 1918998747), new cljs.core.Keyword(null, "ground", "ground", 1193572934), "panther", 11, 1, new cljs.core.Keyword(null, 
"mechanic", "mechanic", -1805001628), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rebound", "rebound", -1472887389)], null)], null), 300, "p", new cljs.core.Keyword(null, "all", "all", 892129742), 300, 1]);
goog.provide("obb_rules.units.crusader");
goog.require("cljs.core");
obb_rules.units.crusader.metadata = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "category", "category", -593092832), new cljs.core.Keyword(null, "displacement", "displacement", -1309600669), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "movement-cost", "movement-cost", -716301045), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "defense", 
"defense", 1755014992), new cljs.core.Keyword(null, "code", "code", 1586293142), new cljs.core.Keyword(null, "movement-type", "movement-type", -1340819145), new cljs.core.Keyword(null, "attack", "attack", 1957061788), new cljs.core.Keyword(null, "range", "range", 1639692286)], [new cljs.core.Keyword(null, "heavy", "heavy", 2126165008), new cljs.core.Keyword(null, "air", "air", -104121788), "crusader", 62, 4, new cljs.core.Keyword(null, "mechanic", "mechanic", -1805001628), 2200, "c", new cljs.core.Keyword(null, 
"front", "front", -1523508988), 2400, 6]);
goog.provide("obb_rules.units.doomer");
goog.require("cljs.core");
obb_rules.units.doomer.metadata = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "category", "category", -593092832), new cljs.core.Keyword(null, "displacement", "displacement", -1309600669), new cljs.core.Keyword(null, "attack-type", "attack-type", -639911421), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "movement-cost", "movement-cost", -716301045), new cljs.core.Keyword(null, 
"type", "type", 1174270348), new cljs.core.Keyword(null, "after-attack", "after-attack", -1103058896), new cljs.core.Keyword(null, "defense", "defense", 1755014992), new cljs.core.Keyword(null, "code", "code", 1586293142), new cljs.core.Keyword(null, "movement-type", "movement-type", -1340819145), new cljs.core.Keyword(null, "attack", "attack", 1957061788), new cljs.core.Keyword(null, "range", "range", 1639692286)], [new cljs.core.Keyword(null, "heavy", "heavy", 2126165008), new cljs.core.Keyword(null, 
"air", "air", -104121788), new cljs.core.Keyword(null, "catapult", "catapult", -369050119), "doomer", 68, 3, new cljs.core.Keyword(null, "mechanic", "mechanic", -1805001628), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rebound", "rebound", -1472887389)], null)], null), 500, "doo", new cljs.core.Keyword(null, "diagonal", "diagonal", -1969989146), 6E3, 
3]);
goog.provide("obb_rules.units.eagle");
goog.require("cljs.core");
obb_rules.units.eagle.metadata = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "category", "category", -593092832), new cljs.core.Keyword(null, "displacement", "displacement", -1309600669), new cljs.core.Keyword(null, "attack-type", "attack-type", -639911421), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "movement-cost", "movement-cost", -716301045), new cljs.core.Keyword(null, 
"type", "type", 1174270348), new cljs.core.Keyword(null, "defense", "defense", 1755014992), new cljs.core.Keyword(null, "code", "code", 1586293142), new cljs.core.Keyword(null, "movement-type", "movement-type", -1340819145), new cljs.core.Keyword(null, "attack", "attack", 1957061788), new cljs.core.Keyword(null, "range", "range", 1639692286)], [new cljs.core.Keyword(null, "medium", "medium", -1864319384), new cljs.core.Keyword(null, "air", "air", -104121788), new cljs.core.Keyword(null, "catapult", 
"catapult", -369050119), "eagle", 70, 2, new cljs.core.Keyword(null, "mechanic", "mechanic", -1805001628), 1200, "e", new cljs.core.Keyword(null, "diagonal", "diagonal", -1969989146), 1500, 3]);
goog.provide("obb_rules.units.driller");
goog.require("cljs.core");
obb_rules.units.driller.metadata = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "category", "category", -593092832), new cljs.core.Keyword(null, "displacement", "displacement", -1309600669), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "movement-cost", "movement-cost", -716301045), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "after-attack", 
"after-attack", -1103058896), new cljs.core.Keyword(null, "defense", "defense", 1755014992), new cljs.core.Keyword(null, "code", "code", 1586293142), new cljs.core.Keyword(null, "movement-type", "movement-type", -1340819145), new cljs.core.Keyword(null, "attack", "attack", 1957061788), new cljs.core.Keyword(null, "range", "range", 1639692286)], [new cljs.core.Keyword(null, "medium", "medium", -1864319384), new cljs.core.Keyword(null, "ground", "ground", 1193572934), "driller", 32, 2, new cljs.core.Keyword(null, 
"mechanic", "mechanic", -1805001628), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "triple", "triple", 672002454)], null)], null), 1500, "d", new cljs.core.Keyword(null, "all", "all", 892129742), 1500, 1]);
goog.provide("obb_rules.units.krill");
goog.require("cljs.core");
obb_rules.units.krill.metadata = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "category", "category", -593092832), new cljs.core.Keyword(null, "displacement", "displacement", -1309600669), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "movement-cost", "movement-cost", -716301045), new cljs.core.Keyword(null, "after-hit", "after-hit", 491119628), new cljs.core.Keyword(null, "type", 
"type", 1174270348), new cljs.core.Keyword(null, "defense", "defense", 1755014992), new cljs.core.Keyword(null, "code", "code", 1586293142), new cljs.core.Keyword(null, "movement-type", "movement-type", -1340819145), new cljs.core.Keyword(null, "attack", "attack", 1957061788), new cljs.core.Keyword(null, "range", "range", 1639692286)], [new cljs.core.Keyword(null, "medium", "medium", -1864319384), new cljs.core.Keyword(null, "air", "air", -104121788), "krill", 30, 2, new cljs.core.PersistentVector(null, 
1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "strikeback", "strikeback", 833058309)], null)], null), new cljs.core.Keyword(null, "mechanic", "mechanic", -1805001628), 1E3, "kr", new cljs.core.Keyword(null, "all", "all", 892129742), 1500, 3]);
goog.provide("obb_rules.units.kahuna");
goog.require("cljs.core");
obb_rules.units.kahuna.metadata = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "category", "category", -593092832), new cljs.core.Keyword(null, "displacement", "displacement", -1309600669), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "movement-cost", "movement-cost", -716301045), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "after-attack", 
"after-attack", -1103058896), new cljs.core.Keyword(null, "defense", "defense", 1755014992), new cljs.core.Keyword(null, "bonus", "bonus", -1684391149), new cljs.core.Keyword(null, "code", "code", 1586293142), new cljs.core.Keyword(null, "movement-type", "movement-type", -1340819145), new cljs.core.Keyword(null, "attack", "attack", 1957061788), new cljs.core.Keyword(null, "range", "range", 1639692286)], [new cljs.core.Keyword(null, "medium", "medium", -1864319384), new cljs.core.Keyword(null, "ground", 
"ground", 1193572934), "kahuna", 42, 2, new cljs.core.Keyword(null, "mechanic", "mechanic", -1805001628), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rebound", "rebound", -1472887389)], null)], null), 1300, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "defense", "defense", 1755014992), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "displacement", "displacement", -1309600669), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "air", "air", -104121788), 400], null), new cljs.core.Keyword(null, "terrain", "terrain", 704966005), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ground", "ground", 1193572934), 400], null)], null), new cljs.core.Keyword(null, "attack", "attack", 1957061788), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"terrain", "terrain", 704966005), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ground", "ground", 1193572934), 400], null)], null)], null), "kh", new cljs.core.Keyword(null, "all", "all", 892129742), 1E3, 2]);
goog.provide("obb_rules.units.fenix");
goog.require("cljs.core");
obb_rules.units.fenix.metadata = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "category", "category", -593092832), new cljs.core.Keyword(null, "displacement", "displacement", -1309600669), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "movement-cost", "movement-cost", -716301045), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "after-attack", 
"after-attack", -1103058896), new cljs.core.Keyword(null, "defense", "defense", 1755014992), new cljs.core.Keyword(null, "code", "code", 1586293142), new cljs.core.Keyword(null, "movement-type", "movement-type", -1340819145), new cljs.core.Keyword(null, "attack", "attack", 1957061788), new cljs.core.Keyword(null, "range", "range", 1639692286)], [new cljs.core.Keyword(null, "heavy", "heavy", 2126165008), new cljs.core.Keyword(null, "air", "air", -104121788), "fenix", 100, 3, new cljs.core.Keyword(null, 
"mechanic", "mechanic", -1805001628), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rebound", "rebound", -1472887389)], null)], null), 2950, "f", new cljs.core.Keyword(null, "normal", "normal", -1519123858), 2500, 4]);
goog.provide("obb_rules.units.raptor");
goog.require("cljs.core");
obb_rules.units.raptor.metadata = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "category", "category", -593092832), new cljs.core.Keyword(null, "displacement", "displacement", -1309600669), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "movement-cost", "movement-cost", -716301045), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "defense", "defense", 
1755014992), new cljs.core.Keyword(null, "bonus", "bonus", -1684391149), new cljs.core.Keyword(null, "code", "code", 1586293142), new cljs.core.Keyword(null, "movement-type", "movement-type", -1340819145), new cljs.core.Keyword(null, "attack", "attack", 1957061788), new cljs.core.Keyword(null, "range", "range", 1639692286)], [new cljs.core.Keyword(null, "light", "light", 1918998747), new cljs.core.Keyword(null, "air", "air", -104121788), "raptor", 20, 1, new cljs.core.Keyword(null, "mechanic", "mechanic", 
-1805001628), 400, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "attack", "attack", 1957061788), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "category", "category", -593092832), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "light", "light", 1918998747), 1E3], null)], null)], null), "rp", new cljs.core.Keyword(null, "all", "all", 892129742), 280, 2]);
goog.provide("obb_rules.units.scarab");
goog.require("cljs.core");
obb_rules.units.scarab.metadata = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "category", "category", -593092832), new cljs.core.Keyword(null, "displacement", "displacement", -1309600669), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "movement-cost", "movement-cost", -716301045), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "defense", "defense", 
1755014992), new cljs.core.Keyword(null, "code", "code", 1586293142), new cljs.core.Keyword(null, "movement-type", "movement-type", -1340819145), new cljs.core.Keyword(null, "attack", "attack", 1957061788), new cljs.core.Keyword(null, "range", "range", 1639692286)], [new cljs.core.Keyword(null, "medium", "medium", -1864319384), new cljs.core.Keyword(null, "air", "air", -104121788), "scarab", 38, 1, new cljs.core.Keyword(null, "mechanic", "mechanic", -1805001628), 2300, "sc", new cljs.core.Keyword(null, 
"front", "front", -1523508988), 1900, 2]);
goog.provide("obb_rules.units.rain");
goog.require("cljs.core");
obb_rules.units.rain.metadata = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "category", "category", -593092832), new cljs.core.Keyword(null, "displacement", "displacement", -1309600669), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "movement-cost", "movement-cost", -716301045), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "defense", "defense", 
1755014992), new cljs.core.Keyword(null, "bonus", "bonus", -1684391149), new cljs.core.Keyword(null, "code", "code", 1586293142), new cljs.core.Keyword(null, "movement-type", "movement-type", -1340819145), new cljs.core.Keyword(null, "attack", "attack", 1957061788), new cljs.core.Keyword(null, "range", "range", 1639692286)], [new cljs.core.Keyword(null, "light", "light", 1918998747), new cljs.core.Keyword(null, "air", "air", -104121788), "rain", 4, 1, new cljs.core.Keyword(null, "mechanic", "mechanic", 
-1805001628), 70, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "attack", "attack", 1957061788), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "category", "category", -593092832), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "heavy", "heavy", 2126165008), 1200], null)], null)], null), "r", new cljs.core.Keyword(null, "all", "all", 892129742), 120, 1]);
goog.provide("obb_rules.units.anubis");
goog.require("cljs.core");
obb_rules.units.anubis.metadata = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "category", "category", -593092832), new cljs.core.Keyword(null, "displacement", "displacement", -1309600669), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "movement-cost", "movement-cost", -716301045), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "defense", "defense", 
1755014992), new cljs.core.Keyword(null, "bonus", "bonus", -1684391149), new cljs.core.Keyword(null, "code", "code", 1586293142), new cljs.core.Keyword(null, "movement-type", "movement-type", -1340819145), new cljs.core.Keyword(null, "attack", "attack", 1957061788), new cljs.core.Keyword(null, "range", "range", 1639692286)], [new cljs.core.Keyword(null, "light", "light", 1918998747), new cljs.core.Keyword(null, "air", "air", -104121788), "anubis", 7, 1, new cljs.core.Keyword(null, "mechanic", "mechanic", 
-1805001628), 500, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "defense", "defense", 1755014992), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "category", "category", -593092832), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "heavy", "heavy", 2126165008), 1600], null)], null)], null), "a", new cljs.core.Keyword(null, "all", "all", 892129742), 200, 1]);
goog.provide("obb_rules.units.kamikaze");
goog.require("cljs.core");
obb_rules.units.kamikaze.metadata = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "category", "category", -593092832), new cljs.core.Keyword(null, "displacement", "displacement", -1309600669), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "movement-cost", "movement-cost", -716301045), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "defense", 
"defense", 1755014992), new cljs.core.Keyword(null, "code", "code", 1586293142), new cljs.core.Keyword(null, "movement-type", "movement-type", -1340819145), new cljs.core.Keyword(null, "attack", "attack", 1957061788), new cljs.core.Keyword(null, "range", "range", 1639692286)], [new cljs.core.Keyword(null, "medium", "medium", -1864319384), new cljs.core.Keyword(null, "air", "air", -104121788), "kamikaze", 60, 1, new cljs.core.Keyword(null, "mechanic", "mechanic", -1805001628), 1, "k", new cljs.core.Keyword(null, 
"all", "all", 892129742), 4E3, 1]);
goog.provide("obb_rules.units.toxic");
goog.require("cljs.core");
obb_rules.units.toxic.metadata = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "category", "category", -593092832), new cljs.core.Keyword(null, "displacement", "displacement", -1309600669), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "movement-cost", "movement-cost", -716301045), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "defense", "defense", 
1755014992), new cljs.core.Keyword(null, "bonus", "bonus", -1684391149), new cljs.core.Keyword(null, "code", "code", 1586293142), new cljs.core.Keyword(null, "movement-type", "movement-type", -1340819145), new cljs.core.Keyword(null, "attack", "attack", 1957061788), new cljs.core.Keyword(null, "range", "range", 1639692286)], [new cljs.core.Keyword(null, "light", "light", 1918998747), new cljs.core.Keyword(null, "air", "air", -104121788), "toxic", 9, 1, new cljs.core.Keyword(null, "mechanic", "mechanic", 
-1805001628), 600, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "attack", "attack", 1957061788), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "organic", "organic", -1424795777), 1E3], null)], null)], null), "tx", new cljs.core.Keyword(null, "normal", "normal", -1519123858), 450, 2]);
goog.provide("obb_rules.units.worm");
goog.require("cljs.core");
obb_rules.units.worm.metadata = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "category", "category", -593092832), new cljs.core.Keyword(null, "displacement", "displacement", -1309600669), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "movement-cost", "movement-cost", -716301045), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "defense", "defense", 
1755014992), new cljs.core.Keyword(null, "code", "code", 1586293142), new cljs.core.Keyword(null, "movement-type", "movement-type", -1340819145), new cljs.core.Keyword(null, "attack", "attack", 1957061788), new cljs.core.Keyword(null, "range", "range", 1639692286)], [new cljs.core.Keyword(null, "medium", "medium", -1864319384), new cljs.core.Keyword(null, "ground", "ground", 1193572934), "worm", 25, 2, new cljs.core.Keyword(null, "organic", "organic", -1424795777), 1200, "w", new cljs.core.Keyword(null, 
"all", "all", 892129742), 1200, 3]);
goog.provide("obb_rules.units.heavy_seeker");
goog.require("cljs.core");
obb_rules.units.heavy_seeker.metadata = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "category", "category", -593092832), new cljs.core.Keyword(null, "displacement", "displacement", -1309600669), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "movement-cost", "movement-cost", -716301045), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "defense", 
"defense", 1755014992), new cljs.core.Keyword(null, "code", "code", 1586293142), new cljs.core.Keyword(null, "movement-type", "movement-type", -1340819145), new cljs.core.Keyword(null, "attack", "attack", 1957061788), new cljs.core.Keyword(null, "range", "range", 1639692286)], [new cljs.core.Keyword(null, "heavy", "heavy", 2126165008), new cljs.core.Keyword(null, "air", "air", -104121788), "heavy-seeker", 65, 4, new cljs.core.Keyword(null, "organic", "organic", -1424795777), 2200, "hr", new cljs.core.Keyword(null, 
"diagonal", "diagonal", -1969989146), 2500, 5]);
goog.provide("obb_rules.units.nova");
goog.require("cljs.core");
obb_rules.units.nova.metadata = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "category", "category", -593092832), new cljs.core.Keyword(null, "displacement", "displacement", -1309600669), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "movement-cost", "movement-cost", -716301045), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "defense", "defense", 
1755014992), new cljs.core.Keyword(null, "bonus", "bonus", -1684391149), new cljs.core.Keyword(null, "code", "code", 1586293142), new cljs.core.Keyword(null, "movement-type", "movement-type", -1340819145), new cljs.core.Keyword(null, "attack", "attack", 1957061788), new cljs.core.Keyword(null, "range", "range", 1639692286)], [new cljs.core.Keyword(null, "heavy", "heavy", 2126165008), new cljs.core.Keyword(null, "air", "air", -104121788), "nova", 70, 4, new cljs.core.Keyword(null, "mechanic", "mechanic", 
-1805001628), 1900, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "attack", "attack", 1957061788), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "organic", "organic", -1424795777), 4E3], null)], null)], null), "n", new cljs.core.Keyword(null, "normal", "normal", -1519123858), 2700, 5]);
goog.provide("obb_rules.units.boozer");
goog.require("cljs.core");
obb_rules.units.boozer.metadata = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "category", "category", -593092832), new cljs.core.Keyword(null, "displacement", "displacement", -1309600669), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "movement-cost", "movement-cost", -716301045), new cljs.core.Keyword(null, "after-hit", "after-hit", 491119628), new cljs.core.Keyword(null, "type", 
"type", 1174270348), new cljs.core.Keyword(null, "defense", "defense", 1755014992), new cljs.core.Keyword(null, "bonus", "bonus", -1684391149), new cljs.core.Keyword(null, "code", "code", 1586293142), new cljs.core.Keyword(null, "movement-type", "movement-type", -1340819145), new cljs.core.Keyword(null, "attack", "attack", 1957061788), new cljs.core.Keyword(null, "range", "range", 1639692286)], [new cljs.core.Keyword(null, "heavy", "heavy", 2126165008), new cljs.core.Keyword(null, "ground", "ground", 
1193572934), "boozer", 68, 4, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "strikeback", "strikeback", 833058309)], null)], null), new cljs.core.Keyword(null, "mechanic", "mechanic", -1805001628), 2800, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "attack", "attack", 1957061788), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"displacement", "displacement", -1309600669), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "air", "air", -104121788), 4E3], null)], null)], null), "bz", new cljs.core.Keyword(null, "front", "front", -1523508988), 3200, 5]);
goog.provide("obb_rules.unit");
goog.require("cljs.core");
goog.require("obb_rules.units.panther");
goog.require("obb_rules.units.crusader");
goog.require("obb_rules.units.doomer");
goog.require("obb_rules.units.eagle");
goog.require("obb_rules.units.driller");
goog.require("obb_rules.units.krill");
goog.require("obb_rules.units.kahuna");
goog.require("obb_rules.units.fenix");
goog.require("obb_rules.units.raptor");
goog.require("obb_rules.units.scarab");
goog.require("obb_rules.units.rain");
goog.require("obb_rules.units.anubis");
goog.require("obb_rules.units.kamikaze");
goog.require("obb_rules.units.toxic");
goog.require("obb_rules.units.worm");
goog.require("obb_rules.units.pretorian");
goog.require("obb_rules.units.heavy_seeker");
goog.require("obb_rules.units.nova");
goog.require("obb_rules.units.vector");
goog.require("obb_rules.units.boozer");
obb_rules.unit.CombatUnit = function(name, code, value, attack, attack_type, range, defense, bonus, type, category, displacement, movement_type, movement_cost, __meta, __extmap, __hash) {
  this.name = name;
  this.code = code;
  this.value = value;
  this.attack = attack;
  this.attack_type = attack_type;
  this.range = range;
  this.defense = defense;
  this.bonus = bonus;
  this.type = type;
  this.category = category;
  this.displacement = displacement;
  this.movement_type = movement_type;
  this.movement_cost = movement_cost;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
obb_rules.unit.CombatUnit.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__7369__auto__, k__7370__auto__) {
  var self__ = this;
  var this__7369__auto____$1 = this;
  return cljs.core._lookup.call(null, this__7369__auto____$1, k__7370__auto__, null);
};
obb_rules.unit.CombatUnit.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__7371__auto__, k8843, else__7372__auto__) {
  var self__ = this;
  var this__7371__auto____$1 = this;
  var G__8845 = k8843 instanceof cljs.core.Keyword ? k8843.fqn : null;
  switch(G__8845) {
    case "category":
      return self__.category;
      break;
    case "displacement":
      return self__.displacement;
      break;
    case "attack-type":
      return self__.attack_type;
      break;
    case "name":
      return self__.name;
      break;
    case "value":
      return self__.value;
      break;
    case "movement-cost":
      return self__.movement_cost;
      break;
    case "type":
      return self__.type;
      break;
    case "defense":
      return self__.defense;
      break;
    case "bonus":
      return self__.bonus;
      break;
    case "code":
      return self__.code;
      break;
    case "movement-type":
      return self__.movement_type;
      break;
    case "attack":
      return self__.attack;
      break;
    case "range":
      return self__.range;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k8843, else__7372__auto__);
  }
};
obb_rules.unit.CombatUnit.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__7383__auto__, writer__7384__auto__, opts__7385__auto__) {
  var self__ = this;
  var this__7383__auto____$1 = this;
  var pr_pair__7386__auto__ = function(this__7383__auto____$1) {
    return function(keyval__7387__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__7384__auto__, cljs.core.pr_writer, "", " ", "", opts__7385__auto__, keyval__7387__auto__);
    };
  }(this__7383__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__7384__auto__, pr_pair__7386__auto__, "#obb-rules.unit.CombatUnit{", ", ", "}", opts__7385__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "code", "code", 1586293142), self__.code], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), self__.value], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attack", "attack", 1957061788), self__.attack], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "attack-type", "attack-type", -639911421), self__.attack_type], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "range", "range", 1639692286), self__.range], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "defense", "defense", 1755014992), self__.defense], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "bonus", "bonus", -1684391149), self__.bonus], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "category", "category", -593092832), self__.category], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "displacement", "displacement", -1309600669), self__.displacement], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "movement-type", "movement-type", -1340819145), self__.movement_type], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "movement-cost", "movement-cost", -716301045), self__.movement_cost], null)], null), self__.__extmap));
};
obb_rules.unit.CombatUnit.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__7367__auto__) {
  var self__ = this;
  var this__7367__auto____$1 = this;
  return self__.__meta;
};
obb_rules.unit.CombatUnit.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__7363__auto__) {
  var self__ = this;
  var this__7363__auto____$1 = this;
  return new obb_rules.unit.CombatUnit(self__.name, self__.code, self__.value, self__.attack, self__.attack_type, self__.range, self__.defense, self__.bonus, self__.type, self__.category, self__.displacement, self__.movement_type, self__.movement_cost, self__.__meta, self__.__extmap, self__.__hash);
};
obb_rules.unit.CombatUnit.prototype.cljs$core$ICounted$_count$arity$1 = function(this__7373__auto__) {
  var self__ = this;
  var this__7373__auto____$1 = this;
  return 13 + cljs.core.count.call(null, self__.__extmap);
};
obb_rules.unit.CombatUnit.prototype.cljs$core$IHash$_hash$arity$1 = function(this__7364__auto__) {
  var self__ = this;
  var this__7364__auto____$1 = this;
  var h__7190__auto__ = self__.__hash;
  if (!(h__7190__auto__ == null)) {
    return h__7190__auto__;
  } else {
    var h__7190__auto____$1 = cljs.core.hash_imap.call(null, this__7364__auto____$1);
    self__.__hash = h__7190__auto____$1;
    return h__7190__auto____$1;
  }
};
obb_rules.unit.CombatUnit.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__7365__auto__, other__7366__auto__) {
  var self__ = this;
  var this__7365__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6762__auto__ = other__7366__auto__;
    if (cljs.core.truth_(and__6762__auto__)) {
      var and__6762__auto____$1 = this__7365__auto____$1.constructor === other__7366__auto__.constructor;
      if (and__6762__auto____$1) {
        return cljs.core.equiv_map.call(null, this__7365__auto____$1, other__7366__auto__);
      } else {
        return and__6762__auto____$1;
      }
    } else {
      return and__6762__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
obb_rules.unit.CombatUnit.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__7378__auto__, k__7379__auto__) {
  var self__ = this;
  var this__7378__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 13, [new cljs.core.Keyword(null, "category", "category", -593092832), null, new cljs.core.Keyword(null, "displacement", "displacement", -1309600669), null, new cljs.core.Keyword(null, "attack-type", "attack-type", -639911421), null, new cljs.core.Keyword(null, "name", "name", 1843675177), null, new cljs.core.Keyword(null, "value", "value", 305978217), null, new cljs.core.Keyword(null, 
  "movement-cost", "movement-cost", -716301045), null, new cljs.core.Keyword(null, "type", "type", 1174270348), null, new cljs.core.Keyword(null, "defense", "defense", 1755014992), null, new cljs.core.Keyword(null, "bonus", "bonus", -1684391149), null, new cljs.core.Keyword(null, "code", "code", 1586293142), null, new cljs.core.Keyword(null, "movement-type", "movement-type", -1340819145), null, new cljs.core.Keyword(null, "attack", "attack", 1957061788), null, new cljs.core.Keyword(null, "range", 
  "range", 1639692286), null], null), null), k__7379__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__7378__auto____$1), self__.__meta), k__7379__auto__);
  } else {
    return new obb_rules.unit.CombatUnit(self__.name, self__.code, self__.value, self__.attack, self__.attack_type, self__.range, self__.defense, self__.bonus, self__.type, self__.category, self__.displacement, self__.movement_type, self__.movement_cost, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__7379__auto__)), null);
  }
};
obb_rules.unit.CombatUnit.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__7376__auto__, k__7377__auto__, G__8842) {
  var self__ = this;
  var this__7376__auto____$1 = this;
  var pred__8846 = cljs.core.keyword_identical_QMARK_;
  var expr__8847 = k__7377__auto__;
  if (cljs.core.truth_(pred__8846.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), expr__8847))) {
    return new obb_rules.unit.CombatUnit(G__8842, self__.code, self__.value, self__.attack, self__.attack_type, self__.range, self__.defense, self__.bonus, self__.type, self__.category, self__.displacement, self__.movement_type, self__.movement_cost, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__8846.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), expr__8847))) {
      return new obb_rules.unit.CombatUnit(self__.name, G__8842, self__.value, self__.attack, self__.attack_type, self__.range, self__.defense, self__.bonus, self__.type, self__.category, self__.displacement, self__.movement_type, self__.movement_cost, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__8846.call(null, new cljs.core.Keyword(null, "value", "value", 305978217), expr__8847))) {
        return new obb_rules.unit.CombatUnit(self__.name, self__.code, G__8842, self__.attack, self__.attack_type, self__.range, self__.defense, self__.bonus, self__.type, self__.category, self__.displacement, self__.movement_type, self__.movement_cost, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__8846.call(null, new cljs.core.Keyword(null, "attack", "attack", 1957061788), expr__8847))) {
          return new obb_rules.unit.CombatUnit(self__.name, self__.code, self__.value, G__8842, self__.attack_type, self__.range, self__.defense, self__.bonus, self__.type, self__.category, self__.displacement, self__.movement_type, self__.movement_cost, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__8846.call(null, new cljs.core.Keyword(null, "attack-type", "attack-type", -639911421), expr__8847))) {
            return new obb_rules.unit.CombatUnit(self__.name, self__.code, self__.value, self__.attack, G__8842, self__.range, self__.defense, self__.bonus, self__.type, self__.category, self__.displacement, self__.movement_type, self__.movement_cost, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__8846.call(null, new cljs.core.Keyword(null, "range", "range", 1639692286), expr__8847))) {
              return new obb_rules.unit.CombatUnit(self__.name, self__.code, self__.value, self__.attack, self__.attack_type, G__8842, self__.defense, self__.bonus, self__.type, self__.category, self__.displacement, self__.movement_type, self__.movement_cost, self__.__meta, self__.__extmap, null);
            } else {
              if (cljs.core.truth_(pred__8846.call(null, new cljs.core.Keyword(null, "defense", "defense", 1755014992), expr__8847))) {
                return new obb_rules.unit.CombatUnit(self__.name, self__.code, self__.value, self__.attack, self__.attack_type, self__.range, G__8842, self__.bonus, self__.type, self__.category, self__.displacement, self__.movement_type, self__.movement_cost, self__.__meta, self__.__extmap, null);
              } else {
                if (cljs.core.truth_(pred__8846.call(null, new cljs.core.Keyword(null, "bonus", "bonus", -1684391149), expr__8847))) {
                  return new obb_rules.unit.CombatUnit(self__.name, self__.code, self__.value, self__.attack, self__.attack_type, self__.range, self__.defense, G__8842, self__.type, self__.category, self__.displacement, self__.movement_type, self__.movement_cost, self__.__meta, self__.__extmap, null);
                } else {
                  if (cljs.core.truth_(pred__8846.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), expr__8847))) {
                    return new obb_rules.unit.CombatUnit(self__.name, self__.code, self__.value, self__.attack, self__.attack_type, self__.range, self__.defense, self__.bonus, G__8842, self__.category, self__.displacement, self__.movement_type, self__.movement_cost, self__.__meta, self__.__extmap, null);
                  } else {
                    if (cljs.core.truth_(pred__8846.call(null, new cljs.core.Keyword(null, "category", "category", -593092832), expr__8847))) {
                      return new obb_rules.unit.CombatUnit(self__.name, self__.code, self__.value, self__.attack, self__.attack_type, self__.range, self__.defense, self__.bonus, self__.type, G__8842, self__.displacement, self__.movement_type, self__.movement_cost, self__.__meta, self__.__extmap, null);
                    } else {
                      if (cljs.core.truth_(pred__8846.call(null, new cljs.core.Keyword(null, "displacement", "displacement", -1309600669), expr__8847))) {
                        return new obb_rules.unit.CombatUnit(self__.name, self__.code, self__.value, self__.attack, self__.attack_type, self__.range, self__.defense, self__.bonus, self__.type, self__.category, G__8842, self__.movement_type, self__.movement_cost, self__.__meta, self__.__extmap, null);
                      } else {
                        if (cljs.core.truth_(pred__8846.call(null, new cljs.core.Keyword(null, "movement-type", "movement-type", -1340819145), expr__8847))) {
                          return new obb_rules.unit.CombatUnit(self__.name, self__.code, self__.value, self__.attack, self__.attack_type, self__.range, self__.defense, self__.bonus, self__.type, self__.category, self__.displacement, G__8842, self__.movement_cost, self__.__meta, self__.__extmap, null);
                        } else {
                          if (cljs.core.truth_(pred__8846.call(null, new cljs.core.Keyword(null, "movement-cost", "movement-cost", -716301045), expr__8847))) {
                            return new obb_rules.unit.CombatUnit(self__.name, self__.code, self__.value, self__.attack, self__.attack_type, self__.range, self__.defense, self__.bonus, self__.type, self__.category, self__.displacement, self__.movement_type, G__8842, self__.__meta, self__.__extmap, null);
                          } else {
                            return new obb_rules.unit.CombatUnit(self__.name, self__.code, self__.value, self__.attack, self__.attack_type, self__.range, self__.defense, self__.bonus, self__.type, self__.category, self__.displacement, self__.movement_type, self__.movement_cost, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__7377__auto__, G__8842), null);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
obb_rules.unit.CombatUnit.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__7381__auto__) {
  var self__ = this;
  var this__7381__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "code", "code", 1586293142), self__.code], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), self__.value], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attack", "attack", 1957061788), self__.attack], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attack-type", "attack-type", -639911421), self__.attack_type], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "range", "range", 1639692286), self__.range], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "defense", "defense", 1755014992), self__.defense], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "bonus", "bonus", -1684391149), self__.bonus], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "category", "category", -593092832), self__.category], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "displacement", "displacement", -1309600669), self__.displacement], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "movement-type", "movement-type", -1340819145), self__.movement_type], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "movement-cost", "movement-cost", -716301045), self__.movement_cost], null)], null), self__.__extmap));
};
obb_rules.unit.CombatUnit.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__7368__auto__, G__8842) {
  var self__ = this;
  var this__7368__auto____$1 = this;
  return new obb_rules.unit.CombatUnit(self__.name, self__.code, self__.value, self__.attack, self__.attack_type, self__.range, self__.defense, self__.bonus, self__.type, self__.category, self__.displacement, self__.movement_type, self__.movement_cost, G__8842, self__.__extmap, self__.__hash);
};
obb_rules.unit.CombatUnit.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__7374__auto__, entry__7375__auto__) {
  var self__ = this;
  var this__7374__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__7375__auto__)) {
    return cljs.core._assoc.call(null, this__7374__auto____$1, cljs.core._nth.call(null, entry__7375__auto__, 0), cljs.core._nth.call(null, entry__7375__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__7374__auto____$1, entry__7375__auto__);
  }
};
obb_rules.unit.CombatUnit.getBasis = function() {
  return new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "code", "code", -1068142627, null), new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "attack", "attack", -697373981, null), new cljs.core.Symbol(null, "attack-type", "attack-type", 1000620106, null), new cljs.core.Symbol(null, "range", "range", -1014743483, null), new cljs.core.Symbol(null, 
  "defense", "defense", -899420777, null), new cljs.core.Symbol(null, "bonus", "bonus", -43859622, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "category", "category", 1047438695, null), new cljs.core.Symbol(null, "displacement", "displacement", 330930858, null), new cljs.core.Symbol(null, "movement-type", "movement-type", 299712382, null), new cljs.core.Symbol(null, "movement-cost", "movement-cost", 924230482, null)], null);
};
obb_rules.unit.CombatUnit.cljs$lang$type = true;
obb_rules.unit.CombatUnit.cljs$lang$ctorPrSeq = function(this__7403__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "obb-rules.unit/CombatUnit");
};
obb_rules.unit.CombatUnit.cljs$lang$ctorPrWriter = function(this__7403__auto__, writer__7404__auto__) {
  return cljs.core._write.call(null, writer__7404__auto__, "obb-rules.unit/CombatUnit");
};
obb_rules.unit.__GT_CombatUnit = function obb_rules$unit$__GT_CombatUnit(name, code, value, attack, attack_type, range, defense, bonus, type, category, displacement, movement_type, movement_cost) {
  return new obb_rules.unit.CombatUnit(name, code, value, attack, attack_type, range, defense, bonus, type, category, displacement, movement_type, movement_cost, null, null, null);
};
obb_rules.unit.map__GT_CombatUnit = function obb_rules$unit$map__GT_CombatUnit(G__8844) {
  return new obb_rules.unit.CombatUnit((new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(G__8844), (new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(G__8844), (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(G__8844), (new cljs.core.Keyword(null, "attack", "attack", 1957061788)).cljs$core$IFn$_invoke$arity$1(G__8844), (new cljs.core.Keyword(null, "attack-type", "attack-type", -639911421)).cljs$core$IFn$_invoke$arity$1(G__8844), 
  (new cljs.core.Keyword(null, "range", "range", 1639692286)).cljs$core$IFn$_invoke$arity$1(G__8844), (new cljs.core.Keyword(null, "defense", "defense", 1755014992)).cljs$core$IFn$_invoke$arity$1(G__8844), (new cljs.core.Keyword(null, "bonus", "bonus", -1684391149)).cljs$core$IFn$_invoke$arity$1(G__8844), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(G__8844), (new cljs.core.Keyword(null, "category", "category", -593092832)).cljs$core$IFn$_invoke$arity$1(G__8844), 
  (new cljs.core.Keyword(null, "displacement", "displacement", -1309600669)).cljs$core$IFn$_invoke$arity$1(G__8844), (new cljs.core.Keyword(null, "movement-type", "movement-type", -1340819145)).cljs$core$IFn$_invoke$arity$1(G__8844), (new cljs.core.Keyword(null, "movement-cost", "movement-cost", -716301045)).cljs$core$IFn$_invoke$arity$1(G__8844), null, cljs.core.dissoc.call(null, G__8844, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "code", "code", 1586293142), 
  new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "attack", "attack", 1957061788), new cljs.core.Keyword(null, "attack-type", "attack-type", -639911421), new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.Keyword(null, "defense", "defense", 1755014992), new cljs.core.Keyword(null, "bonus", "bonus", -1684391149), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "category", "category", -593092832), new cljs.core.Keyword(null, 
  "displacement", "displacement", -1309600669), new cljs.core.Keyword(null, "movement-type", "movement-type", -1340819145), new cljs.core.Keyword(null, "movement-cost", "movement-cost", -716301045)), null);
};
obb_rules.unit.gather_units = function obb_rules$unit$gather_units() {
  return cljs.core.mapv.call(null, function(p1__8850_SHARP_) {
    return obb_rules.unit.map__GT_CombatUnit.call(null, p1__8850_SHARP_);
  }, new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [obb_rules.units.rain.metadata, obb_rules.units.nova.metadata, obb_rules.units.pretorian.metadata, obb_rules.units.raptor.metadata, obb_rules.units.toxic.metadata, obb_rules.units.worm.metadata, obb_rules.units.vector.metadata, obb_rules.units.anubis.metadata, obb_rules.units.boozer.metadata, obb_rules.units.eagle.metadata, obb_rules.units.heavy_seeker.metadata, obb_rules.units.doomer.metadata, obb_rules.units.fenix.metadata, 
  obb_rules.units.driller.metadata, obb_rules.units.krill.metadata, obb_rules.units.kahuna.metadata, obb_rules.units.panther.metadata, obb_rules.units.scarab.metadata, obb_rules.units.kamikaze.metadata, obb_rules.units.crusader.metadata], null));
};
obb_rules.unit.get_units = cljs.core.memoize.call(null, obb_rules.unit.gather_units);
obb_rules.unit.build_units = function obb_rules$unit$build_units(units, selector) {
  return cljs.core.reduce.call(null, function(p1__8851_SHARP_, p2__8852_SHARP_) {
    return cljs.core.conj.call(null, p1__8851_SHARP_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [selector.call(null, p2__8852_SHARP_), p2__8852_SHARP_], null));
  }, cljs.core.PersistentArrayMap.EMPTY, units);
};
obb_rules.unit.units_by_name = new cljs.core.Delay(function() {
  return obb_rules.unit.build_units.call(null, obb_rules.unit.get_units.call(null), new cljs.core.Keyword(null, "name", "name", 1843675177));
}, null);
obb_rules.unit.units_by_code = new cljs.core.Delay(function() {
  return obb_rules.unit.build_units.call(null, obb_rules.unit.get_units.call(null), new cljs.core.Keyword(null, "code", "code", 1586293142));
}, null);
obb_rules.unit.get_unit_by_code = function obb_rules$unit$get_unit_by_code(code) {
  return cljs.core.deref.call(null, obb_rules.unit.units_by_code).call(null, code);
};
obb_rules.unit.get_unit_by_name = function obb_rules$unit$get_unit_by_name(name) {
  return cljs.core.deref.call(null, obb_rules.unit.units_by_name).call(null, name);
};
obb_rules.unit.fetch = function obb_rules$unit$fetch(raw) {
  var identifier = cljs.core.name.call(null, raw);
  var or__6774__auto__ = obb_rules.unit.get_unit_by_name.call(null, identifier);
  if (cljs.core.truth_(or__6774__auto__)) {
    return or__6774__auto__;
  } else {
    return obb_rules.unit.get_unit_by_code.call(null, identifier);
  }
};
obb_rules.unit.unit_name = function obb_rules$unit$unit_name(unit) {
  return (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(unit);
};
obb_rules.unit.unit_code = function obb_rules$unit$unit_code(unit) {
  return (new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(unit);
};
obb_rules.unit.unit_attack = function obb_rules$unit$unit_attack(unit) {
  return (new cljs.core.Keyword(null, "attack", "attack", 1957061788)).cljs$core$IFn$_invoke$arity$1(unit);
};
obb_rules.unit.unit_bonus = function obb_rules$unit$unit_bonus(unit) {
  return (new cljs.core.Keyword(null, "bonus", "bonus", -1684391149)).cljs$core$IFn$_invoke$arity$1(unit);
};
obb_rules.unit.unit_range = function obb_rules$unit$unit_range(unit) {
  return (new cljs.core.Keyword(null, "range", "range", 1639692286)).cljs$core$IFn$_invoke$arity$1(unit);
};
obb_rules.unit.unit_defense = function obb_rules$unit$unit_defense(unit) {
  return (new cljs.core.Keyword(null, "defense", "defense", 1755014992)).cljs$core$IFn$_invoke$arity$1(unit);
};
obb_rules.unit.unit_movement_cost = function obb_rules$unit$unit_movement_cost(unit) {
  return (new cljs.core.Keyword(null, "movement-cost", "movement-cost", -716301045)).cljs$core$IFn$_invoke$arity$1(unit);
};
obb_rules.unit.unit_movement_type = function obb_rules$unit$unit_movement_type(unit) {
  return (new cljs.core.Keyword(null, "movement-type", "movement-type", -1340819145)).cljs$core$IFn$_invoke$arity$1(unit);
};
obb_rules.unit.unit_category = function obb_rules$unit$unit_category(unit) {
  return (new cljs.core.Keyword(null, "category", "category", -593092832)).cljs$core$IFn$_invoke$arity$1(unit);
};
obb_rules.unit.unit_displacement = function obb_rules$unit$unit_displacement(unit) {
  return (new cljs.core.Keyword(null, "displacement", "displacement", -1309600669)).cljs$core$IFn$_invoke$arity$1(unit);
};
obb_rules.unit.unit_type = function obb_rules$unit$unit_type(unit) {
  return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(unit);
};
obb_rules.unit.unit_value = function obb_rules$unit$unit_value(unit) {
  var or__6774__auto__ = (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(unit);
  if (cljs.core.truth_(or__6774__auto__)) {
    return or__6774__auto__;
  } else {
    return 0;
  }
};
obb_rules.unit.attack_type = function obb_rules$unit$attack_type(unit) {
  var or__6774__auto__ = (new cljs.core.Keyword(null, "attack-type", "attack-type", -639911421)).cljs$core$IFn$_invoke$arity$1(unit);
  if (cljs.core.truth_(or__6774__auto__)) {
    return or__6774__auto__;
  } else {
    return new cljs.core.Keyword(null, "direct", "direct", -1775717856);
  }
};
obb_rules.unit.event_hooks = function obb_rules$unit$event_hooks(unit, event) {
  return event.call(null, unit);
};
obb_rules.unit.catapult_QMARK_ = function obb_rules$unit$catapult_QMARK_(unit) {
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "catapult", "catapult", -369050119), obb_rules.unit.attack_type.call(null, unit));
};
obb_rules.unit.units_by_category = function obb_rules$unit$units_by_category(category) {
  return cljs.core.filter.call(null, function(u) {
    return cljs.core._EQ_.call(null, obb_rules.unit.unit_category.call(null, u), category);
  }, obb_rules.unit.get_units.call(null));
};
goog.provide("clojure.walk");
goog.require("cljs.core");
clojure.walk.walk = function clojure$walk$walk(inner, outer, form) {
  if (cljs.core.seq_QMARK_.call(null, form)) {
    return outer.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, inner, form)));
  } else {
    if (cljs.core.coll_QMARK_.call(null, form)) {
      return outer.call(null, cljs.core.into.call(null, cljs.core.empty.call(null, form), cljs.core.map.call(null, inner, form)));
    } else {
      return outer.call(null, form);
    }
  }
};
clojure.walk.postwalk = function clojure$walk$postwalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, clojure$walk$postwalk, f), f, form);
};
clojure.walk.prewalk = function clojure$walk$prewalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, clojure$walk$prewalk, f), cljs.core.identity, f.call(null, form));
};
clojure.walk.keywordize_keys = function clojure$walk$keywordize_keys(m) {
  var f = function(p__8942) {
    var vec__8943 = p__8942;
    var k = cljs.core.nth.call(null, vec__8943, 0, null);
    var v = cljs.core.nth.call(null, vec__8943, 1, null);
    if (typeof k === "string") {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.stringify_keys = function clojure$walk$stringify_keys(m) {
  var f = function(p__8946) {
    var vec__8947 = p__8946;
    var k = cljs.core.nth.call(null, vec__8947, 0, null);
    var v = cljs.core.nth.call(null, vec__8947, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.prewalk_replace = function clojure$walk$prewalk_replace(smap, form) {
  return clojure.walk.prewalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
clojure.walk.postwalk_replace = function clojure$walk$postwalk_replace(smap, form) {
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
goog.provide("obb_rules.simplifier");
goog.require("cljs.core");
goog.require("clojure.walk");
goog.require("obb_rules.unit");
obb_rules.simplifier.name_EQ_ = function obb_rules$simplifier$name_EQ_(a, b) {
  return cljs.core._EQ_.call(null, cljs.core.name.call(null, a), cljs.core.name.call(null, b));
};
obb_rules.simplifier.not_name_EQ_ = function obb_rules$simplifier$not_name_EQ_(a, b) {
  return cljs.core.not.call(null, obb_rules.simplifier.name_EQ_.call(null, a, b));
};
obb_rules.simplifier.resolve_unit = function obb_rules$simplifier$resolve_unit(value) {
  if (typeof value === "string") {
    return value;
  } else {
    return obb_rules.unit.unit_name.call(null, value);
  }
};
obb_rules.simplifier.simplify_if_unit = function obb_rules$simplifier$simplify_if_unit(p__8863) {
  var vec__8865 = p__8863;
  var k = cljs.core.nth.call(null, vec__8865, 0, null);
  var v = cljs.core.nth.call(null, vec__8865, 1, null);
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "unit", "unit", 375175175), cljs.core.keyword.call(null, k))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, obb_rules.simplifier.resolve_unit.call(null, v)], null);
  } else {
    if (cljs.core.map_QMARK_.call(null, v)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, obb_rules.simplifier.clean_unit.call(null, v)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  }
};
obb_rules.simplifier.build_if_unit = function obb_rules$simplifier$build_if_unit(p__8866) {
  var vec__8868 = p__8866;
  var k = cljs.core.nth.call(null, vec__8868, 0, null);
  var v = cljs.core.nth.call(null, vec__8868, 1, null);
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "unit", "unit", 375175175), cljs.core.keyword.call(null, k))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, obb_rules.unit.fetch.call(null, v)], null);
  } else {
    if (cljs.core.map_QMARK_.call(null, v)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, obb_rules.simplifier.build_unit.call(null, v)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  }
};
obb_rules.simplifier.clean_unit = function obb_rules$simplifier$clean_unit(obj) {
  return cljs.core.PersistentArrayMap.EMPTY;
};
obb_rules.simplifier.build_unit = function obb_rules$simplifier$build_unit(obj) {
  return clojure.walk.walk.call(null, obb_rules.simplifier.build_if_unit, cljs.core.identity, obj);
};
obb_rules.simplifier.clean_action_results = function obb_rules$simplifier$clean_action_results(result) {
  var results = cljs.core.get_in.call(null, result, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), new cljs.core.Keyword(null, "action-results", "action-results", -389719209)], null));
  var new_results = cljs.core.map.call(null, function(results) {
    return function(p__8871) {
      var vec__8872 = p__8871;
      var k = cljs.core.nth.call(null, vec__8872, 0, null);
      var v = cljs.core.nth.call(null, vec__8872, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.dissoc.call(null, v, new cljs.core.Keyword(null, "board", "board", -1907017633))], null);
    };
  }(results), results);
  return cljs.core.assoc_in.call(null, result, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), new cljs.core.Keyword(null, "action-results", "action-results", -389719209)], null), new_results);
};
obb_rules.simplifier.coordenize = function obb_rules$simplifier$coordenize(raw) {
  var beter_raw = clojure.string.replace.call(null, [cljs.core.str(raw)].join(""), /:/, "");
  var temp__4423__auto__ = cljs.core.re_matches.call(null, /\[(\d+) (\d+)\]/, beter_raw);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var parsed = temp__4423__auto__;
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, cljs.core.read_string, cljs.core.rest.call(null, parsed)));
  } else {
    return raw;
  }
};
obb_rules.simplifier.build_coordinate_keys = function obb_rules$simplifier$build_coordinate_keys(result) {
  var elements = cljs.core.get_in.call(null, result, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), new cljs.core.Keyword(null, "elements", "elements", 657646735)], null));
  var cleaned = cljs.core.reduce.call(null, function(elements) {
    return function(h, p__8875) {
      var vec__8876 = p__8875;
      var k = cljs.core.nth.call(null, vec__8876, 0, null);
      var v = cljs.core.nth.call(null, vec__8876, 1, null);
      return cljs.core.assoc.call(null, h, obb_rules.simplifier.coordenize.call(null, k), v);
    };
  }(elements), cljs.core.PersistentArrayMap.EMPTY, elements);
  return cljs.core.assoc_in.call(null, result, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), new cljs.core.Keyword(null, "elements", "elements", 657646735)], null), cleaned);
};
obb_rules.simplifier.clean_coordinate_keys = function obb_rules$simplifier$clean_coordinate_keys(result) {
  var elements = cljs.core.get_in.call(null, result, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), new cljs.core.Keyword(null, "elements", "elements", 657646735)], null));
  var cleaned = cljs.core.reduce.call(null, function(elements) {
    return function(h, p__8879) {
      var vec__8880 = p__8879;
      var k = cljs.core.nth.call(null, vec__8880, 0, null);
      var v = cljs.core.nth.call(null, vec__8880, 1, null);
      return cljs.core.assoc.call(null, h, [cljs.core.str(k)].join(""), v);
    };
  }(elements), cljs.core.PersistentArrayMap.EMPTY, elements);
  return cljs.core.assoc_in.call(null, result, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "board", "board", -1907017633), new cljs.core.Keyword(null, "elements", "elements", 657646735)], null), cleaned);
};
obb_rules.simplifier.build_result = function obb_rules$simplifier$build_result(result) {
  return obb_rules.simplifier.build_unit.call(null, obb_rules.simplifier.build_coordinate_keys.call(null, result));
};
obb_rules.simplifier.clean_result = function obb_rules$simplifier$clean_result(result) {
  return obb_rules.simplifier.clean_unit.call(null, obb_rules.simplifier.clean_coordinate_keys.call(null, obb_rules.simplifier.clean_action_results.call(null, result)));
};
goog.provide("obb_rules.math");
goog.require("cljs.core");
obb_rules.math.abs = function obb_rules$math$abs(n) {
  return Math.abs(n);
};
goog.provide("obb_rules.main");
goog.require("cljs.core");
obb_rules.main.main = function obb_rules$main$main() {
  return cljs.core.println.call(null, "Main");
};
goog.provide("obb_rules.element");
goog.require("cljs.core");
goog.require("obb_rules.unit");
obb_rules.element.create_element = function obb_rules$element$create_element() {
  var G__8884 = arguments.length;
  switch(G__8884) {
    case 4:
      return obb_rules.element.create_element.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return obb_rules.element.create_element.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
obb_rules.element.create_element.cljs$core$IFn$_invoke$arity$4 = function(player, unit, quantity, direction) {
  return obb_rules.element.create_element.call(null, player, unit, quantity, direction, null);
};
obb_rules.element.create_element.cljs$core$IFn$_invoke$arity$5 = function(player, unit, quantity, direction, coordinate) {
  return new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "player", "player", -97687400), player, new cljs.core.Keyword(null, "unit", "unit", 375175175), unit, new cljs.core.Keyword(null, "quantity", "quantity", -1929050694), quantity, new cljs.core.Keyword(null, "direction", "direction", -633359395), direction, new cljs.core.Keyword(null, "coordinate", "coordinate", -112811209), coordinate, new cljs.core.Keyword(null, "hitpoints", "hitpoints", -575579159), obb_rules.unit.unit_defense.call(null, 
  unit)], null);
};
obb_rules.element.create_element.cljs$lang$maxFixedArity = 5;
obb_rules.element.element_player = function obb_rules$element$element_player(element) {
  return element.call(null, new cljs.core.Keyword(null, "player", "player", -97687400));
};
obb_rules.element.element_unit = function obb_rules$element$element_unit(element) {
  return element.call(null, new cljs.core.Keyword(null, "unit", "unit", 375175175));
};
obb_rules.element.hooks = function obb_rules$element$hooks(element, event) {
  var unit = obb_rules.element.element_unit.call(null, element);
  return obb_rules.unit.event_hooks.call(null, unit, event);
};
obb_rules.element.catapult_attack_QMARK_ = function obb_rules$element$catapult_attack_QMARK_(element) {
  var unit = obb_rules.element.element_unit.call(null, element);
  return obb_rules.unit.catapult_QMARK_.call(null, unit);
};
obb_rules.element.element_cost = function obb_rules$element$element_cost(element) {
  var unit = obb_rules.element.element_unit.call(null, element);
  return obb_rules.unit.unit_movement_cost.call(null, unit);
};
obb_rules.element.element_range = function obb_rules$element$element_range(element) {
  var unit = obb_rules.element.element_unit.call(null, element);
  return obb_rules.unit.unit_range.call(null, unit);
};
obb_rules.element.element_direction = function obb_rules$element$element_direction() {
  var G__8887 = arguments.length;
  switch(G__8887) {
    case 1:
      return obb_rules.element.element_direction.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return obb_rules.element.element_direction.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
obb_rules.element.element_direction.cljs$core$IFn$_invoke$arity$1 = function(element) {
  return element.call(null, new cljs.core.Keyword(null, "direction", "direction", -633359395));
};
obb_rules.element.element_direction.cljs$core$IFn$_invoke$arity$2 = function(element, new_direction) {
  return cljs.core.assoc.call(null, element, new cljs.core.Keyword(null, "direction", "direction", -633359395), new_direction);
};
obb_rules.element.element_direction.cljs$lang$maxFixedArity = 2;
obb_rules.element.element_hitpoints = function obb_rules$element$element_hitpoints() {
  var G__8890 = arguments.length;
  switch(G__8890) {
    case 1:
      return obb_rules.element.element_hitpoints.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return obb_rules.element.element_hitpoints.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
obb_rules.element.element_hitpoints.cljs$core$IFn$_invoke$arity$1 = function(element) {
  return element.call(null, new cljs.core.Keyword(null, "hitpoints", "hitpoints", -575579159));
};
obb_rules.element.element_hitpoints.cljs$core$IFn$_invoke$arity$2 = function(element, new_hitpoints) {
  return cljs.core.assoc.call(null, element, new cljs.core.Keyword(null, "hitpoints", "hitpoints", -575579159), new_hitpoints);
};
obb_rules.element.element_hitpoints.cljs$lang$maxFixedArity = 2;
obb_rules.element.get_bonus = function obb_rules$element$get_bonus(unit, bonus_prop, bonus_type, specific_type) {
  var temp__4423__auto__ = obb_rules.unit.unit_bonus.call(null, unit);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var bonus = temp__4423__auto__;
    var temp__4423__auto____$1 = cljs.core.get_in.call(null, bonus, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [bonus_prop, bonus_type], null));
    if (cljs.core.truth_(temp__4423__auto____$1)) {
      var specific = temp__4423__auto____$1;
      var or__6774__auto__ = cljs.core.get.call(null, specific, specific_type);
      if (cljs.core.truth_(or__6774__auto__)) {
        return or__6774__auto__;
      } else {
        return 0;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
obb_rules.element.category_bonus = function obb_rules$element$category_bonus(bonus_type, source_unit, target_unit) {
  var category = obb_rules.unit.unit_category.call(null, target_unit);
  return obb_rules.element.get_bonus.call(null, source_unit, bonus_type, new cljs.core.Keyword(null, "category", "category", -593092832), category);
};
obb_rules.element.displacement_bonus = function obb_rules$element$displacement_bonus(bonus_type, source_unit, target_unit) {
  var displacement = obb_rules.unit.unit_displacement.call(null, target_unit);
  return obb_rules.element.get_bonus.call(null, source_unit, bonus_type, new cljs.core.Keyword(null, "displacement", "displacement", -1309600669), displacement);
};
obb_rules.element.type_bonus = function obb_rules$element$type_bonus(bonus_type, source_unit, target_unit) {
  var unit_type = obb_rules.unit.unit_type.call(null, target_unit);
  return obb_rules.element.get_bonus.call(null, source_unit, bonus_type, new cljs.core.Keyword(null, "type", "type", 1174270348), unit_type);
};
obb_rules.element.terrain_bonus = function obb_rules$element$terrain_bonus(bonus_type, board, unit) {
  return obb_rules.element.get_bonus.call(null, unit, bonus_type, new cljs.core.Keyword(null, "terrain", "terrain", 704966005), cljs.core.keyword.call(null, cljs.core.get.call(null, board, new cljs.core.Keyword(null, "terrain", "terrain", 704966005))));
};
obb_rules.element.resolve_bonus = function obb_rules$element$resolve_bonus(bonus_type, board, attacker_unit, defender_unit) {
  return obb_rules.element.category_bonus.call(null, bonus_type, attacker_unit, defender_unit) + obb_rules.element.terrain_bonus.call(null, bonus_type, board, attacker_unit) + obb_rules.element.displacement_bonus.call(null, bonus_type, attacker_unit, defender_unit) + obb_rules.element.type_bonus.call(null, bonus_type, attacker_unit, defender_unit);
};
obb_rules.element.element_attack = function obb_rules$element$element_attack(board, element, target) {
  var attacker_unit = obb_rules.element.element_unit.call(null, element);
  var defender_unit = obb_rules.element.element_unit.call(null, target);
  var attack = obb_rules.unit.unit_attack.call(null, attacker_unit);
  var bonus = obb_rules.element.resolve_bonus.call(null, new cljs.core.Keyword(null, "attack", "attack", 1957061788), board, attacker_unit, defender_unit);
  return attack + bonus;
};
obb_rules.element.element_defense = function obb_rules$element$element_defense(board, element, target) {
  var attacker_unit = obb_rules.element.element_unit.call(null, element);
  var defender_unit = obb_rules.element.element_unit.call(null, target);
  var defense = obb_rules.unit.unit_defense.call(null, defender_unit);
  var bonus = obb_rules.element.resolve_bonus.call(null, new cljs.core.Keyword(null, "defense", "defense", 1755014992), board, defender_unit, attacker_unit);
  return defense + bonus;
};
obb_rules.element.element_quantity = function obb_rules$element$element_quantity() {
  var G__8893 = arguments.length;
  switch(G__8893) {
    case 1:
      return obb_rules.element.element_quantity.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return obb_rules.element.element_quantity.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
obb_rules.element.element_quantity.cljs$core$IFn$_invoke$arity$1 = function(element) {
  return element.call(null, new cljs.core.Keyword(null, "quantity", "quantity", -1929050694));
};
obb_rules.element.element_quantity.cljs$core$IFn$_invoke$arity$2 = function(element, new_quantity) {
  return cljs.core.assoc.call(null, element, new cljs.core.Keyword(null, "quantity", "quantity", -1929050694), new_quantity);
};
obb_rules.element.element_quantity.cljs$lang$maxFixedArity = 2;
obb_rules.element.remove_specific_quantity = function obb_rules$element$remove_specific_quantity(element, quantity) {
  var current_quantity = obb_rules.element.element_quantity.call(null, element);
  var remaining_quantity = current_quantity - quantity;
  if (0 > remaining_quantity) {
    return obb_rules.element.element_quantity.call(null, element, 0);
  } else {
    return obb_rules.element.element_quantity.call(null, element, remaining_quantity);
  }
};
obb_rules.element.remove_hitpoints = function obb_rules$element$remove_hitpoints(element, percentage) {
  var unit = obb_rules.element.element_unit.call(null, element);
  var defense = obb_rules.unit.unit_defense.call(null, unit);
  var hitpoints_to_take = percentage * defense;
  var current_hitpoints = obb_rules.element.element_hitpoints.call(null, element);
  var new_hitpoints = current_hitpoints - hitpoints_to_take;
  if (0 < new_hitpoints) {
    return obb_rules.element.element_hitpoints.call(null, element, new_hitpoints);
  } else {
    return cljs.core.assoc.call(null, element, new cljs.core.Keyword(null, "hitpoints", "hitpoints", -575579159), defense, new cljs.core.Keyword(null, "quantity", "quantity", -1929050694), obb_rules.element.element_quantity.call(null, element) - 1);
  }
};
obb_rules.element.remove_quantity = function obb_rules$element$remove_quantity(element, quantity) {
  if (cljs.core._EQ_.call(null, quantity, 0)) {
    return element;
  } else {
    if (quantity >= 1) {
      return obb_rules.element.remove_specific_quantity.call(null, element, quantity);
    } else {
      return obb_rules.element.remove_hitpoints.call(null, element, quantity);
    }
  }
};
obb_rules.element.element_coordinate = function obb_rules$element$element_coordinate() {
  var G__8896 = arguments.length;
  switch(G__8896) {
    case 1:
      return obb_rules.element.element_coordinate.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return obb_rules.element.element_coordinate.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
obb_rules.element.element_coordinate.cljs$core$IFn$_invoke$arity$1 = function(element) {
  var c = element.call(null, new cljs.core.Keyword(null, "coordinate", "coordinate", -112811209));
  if (cljs.core.truth_(c)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("NoCoordinate:"), cljs.core.str(element)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "c", "c", -122660552, null)))].join(""));
  }
  return c;
};
obb_rules.element.element_coordinate.cljs$core$IFn$_invoke$arity$2 = function(element, new_coordinate) {
  return cljs.core.assoc.call(null, element, new cljs.core.Keyword(null, "coordinate", "coordinate", -112811209), new_coordinate);
};
obb_rules.element.element_coordinate.cljs$lang$maxFixedArity = 2;
obb_rules.element.can_join_elements_QMARK_ = function obb_rules$element$can_join_elements_QMARK_(e1, e2) {
  return cljs.core._EQ_.call(null, obb_rules.element.element_player.call(null, e1), obb_rules.element.element_player.call(null, e2)) && cljs.core._EQ_.call(null, obb_rules.element.element_unit.call(null, e1), obb_rules.element.element_unit.call(null, e2));
};
obb_rules.element.join_elements = function obb_rules$element$join_elements() {
  var argseq__7814__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return obb_rules.element.join_elements.cljs$core$IFn$_invoke$arity$variadic(argseq__7814__auto__);
};
obb_rules.element.join_elements.cljs$core$IFn$_invoke$arity$variadic = function(elements) {
  var quantities = cljs.core.map.call(null, function(e) {
    return obb_rules.element.element_quantity.call(null, e);
  }, elements);
  var template = cljs.core.first.call(null, elements);
  return cljs.core.assoc.call(null, template, new cljs.core.Keyword(null, "quantity", "quantity", -1929050694), cljs.core.apply.call(null, cljs.core._PLUS_, quantities));
};
obb_rules.element.join_elements.cljs$lang$maxFixedArity = 0;
obb_rules.element.join_elements.cljs$lang$applyTo = function(seq8898) {
  return obb_rules.element.join_elements.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8898));
};
obb_rules.element.frozen_QMARK_ = function obb_rules$element$frozen_QMARK_(element) {
  var and__6762__auto__ = element;
  if (cljs.core.truth_(and__6762__auto__)) {
    return cljs.core._EQ_.call(null, true, element.call(null, new cljs.core.Keyword(null, "frozen", "frozen", -1824610372)));
  } else {
    return and__6762__auto__;
  }
};
obb_rules.element.freeze = function obb_rules$element$freeze(element) {
  return cljs.core.assoc.call(null, element, new cljs.core.Keyword(null, "frozen", "frozen", -1824610372), true);
};
obb_rules.element.unfreeze = function obb_rules$element$unfreeze(element) {
  return cljs.core.dissoc.call(null, element, new cljs.core.Keyword(null, "frozen", "frozen", -1824610372));
};
obb_rules.element.assert_element = function obb_rules$element$assert_element(element) {
  if (cljs.core.truth_(element)) {
    if (cljs.core.truth_(obb_rules.element.element_player.call(null, element))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("NoPlayer-"), cljs.core.str(element)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "element-player", "element-player", -1550501405, null), new cljs.core.Symbol(null, "element", "element", -680416020, null))))].join(""));
    }
    if (cljs.core.truth_(obb_rules.element.element_quantity.call(null, element))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("NoQuantity"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "element-quantity", "element-quantity", -1681601608, null), new cljs.core.Symbol(null, "element", "element", -680416020, null))))].join(""));
    }
    if (cljs.core.truth_(obb_rules.element.element_direction.call(null, element))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("NoDirection"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "element-direction", "element-direction", 1081913393, null), new cljs.core.Symbol(null, "element", "element", -680416020, null))))].join(""));
    }
    if (cljs.core.truth_(obb_rules.element.element_unit.call(null, element))) {
      return null;
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("NoCoordinate"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "element-unit", "element-unit", -1313401972, null), new cljs.core.Symbol(null, "element", "element", -680416020, null))))].join(""));
    }
  } else {
    return null;
  }
};
goog.provide("obb_rules.laws");
goog.require("cljs.core");
obb_rules.laws.default_board_w = 8;
obb_rules.laws.default_board_h = 8;
obb_rules.laws.max_action_points = 6;
obb_rules.laws.min_move_percentage = .2;
obb_rules.laws.max_move_percentage = 1 - obb_rules.laws.min_move_percentage;
goog.provide("obb_rules.board");
goog.require("cljs.core");
goog.require("obb_rules.math");
goog.require("obb_rules.laws");
goog.require("obb_rules.element");
goog.require("obb_rules.simplifier");
obb_rules.board.random_terrain = function obb_rules$board$random_terrain() {
  return cljs.core.rand_nth.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "water", "water", -824098213), new cljs.core.Keyword(null, "ice", "ice", -415533543), new cljs.core.Keyword(null, "terrest", "terrest", 1919162097), new cljs.core.Keyword(null, "desert", "desert", -559764082), new cljs.core.Keyword(null, "rock", "rock", 946709275), new cljs.core.Keyword(null, "forest", "forest", 278860306)], null));
};
obb_rules.board.create_board = function obb_rules$board$create_board() {
  var G__8904 = arguments.length;
  switch(G__8904) {
    case 0:
      return obb_rules.board.create_board.cljs$core$IFn$_invoke$arity$0();
      break;
    case 2:
      return obb_rules.board.create_board.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
obb_rules.board.create_board.cljs$core$IFn$_invoke$arity$0 = function() {
  return obb_rules.board.create_board.call(null, obb_rules.laws.default_board_w, obb_rules.laws.default_board_h);
};
obb_rules.board.create_board.cljs$core$IFn$_invoke$arity$2 = function(w, h) {
  return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "width", "width", -384071477), w, new cljs.core.Keyword(null, "height", "height", 1025178622), h, new cljs.core.Keyword(null, "terrain", "terrain", 704966005), obb_rules.board.random_terrain.call(null), new cljs.core.Keyword(null, "elements", "elements", 657646735), cljs.core.PersistentArrayMap.EMPTY], null);
};
obb_rules.board.create_board.cljs$lang$maxFixedArity = 2;
obb_rules.board.player_element_QMARK_ = function obb_rules$board$player_element_QMARK_(player, p__8906) {
  var vec__8908 = p__8906;
  var coordinate = cljs.core.nth.call(null, vec__8908, 0, null);
  var element = cljs.core.nth.call(null, vec__8908, 1, null);
  return obb_rules.simplifier.name_EQ_.call(null, player, obb_rules.element.element_player.call(null, element));
};
obb_rules.board.board_elements = function obb_rules$board$board_elements(board, player) {
  return cljs.core.map.call(null, function(p1__8909_SHARP_) {
    return cljs.core.last.call(null, p1__8909_SHARP_);
  }, cljs.core.filter.call(null, cljs.core.partial.call(null, obb_rules.board.player_element_QMARK_, player), board.call(null, new cljs.core.Keyword(null, "elements", "elements", 657646735))));
};
obb_rules.board.board_elements_count = function obb_rules$board$board_elements_count() {
  var G__8911 = arguments.length;
  switch(G__8911) {
    case 1:
      return obb_rules.board.board_elements_count.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return obb_rules.board.board_elements_count.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
obb_rules.board.board_elements_count.cljs$core$IFn$_invoke$arity$1 = function(board) {
  return cljs.core.count.call(null, board.call(null, new cljs.core.Keyword(null, "elements", "elements", 657646735)));
};
obb_rules.board.board_elements_count.cljs$core$IFn$_invoke$arity$2 = function(board, player) {
  return cljs.core.count.call(null, obb_rules.board.board_elements.call(null, board, player));
};
obb_rules.board.board_elements_count.cljs$lang$maxFixedArity = 2;
obb_rules.board.empty_board_QMARK_ = function obb_rules$board$empty_board_QMARK_() {
  var G__8914 = arguments.length;
  switch(G__8914) {
    case 1:
      return obb_rules.board.empty_board_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return obb_rules.board.empty_board_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
obb_rules.board.empty_board_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(board) {
  return cljs.core._EQ_.call(null, 0, obb_rules.board.board_elements_count.call(null, board));
};
obb_rules.board.empty_board_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(board, player) {
  return cljs.core._EQ_.call(null, 0, obb_rules.board.board_elements_count.call(null, board, cljs.core.keyword.call(null, player)));
};
obb_rules.board.empty_board_QMARK_.cljs$lang$maxFixedArity = 2;
obb_rules.board.board_width = function obb_rules$board$board_width(board) {
  var or__6774__auto__ = board.call(null, new cljs.core.Keyword(null, "width", "width", -384071477));
  if (cljs.core.truth_(or__6774__auto__)) {
    return or__6774__auto__;
  } else {
    return obb_rules.laws.default_board_w;
  }
};
obb_rules.board.board_height = function obb_rules$board$board_height(board) {
  var or__6774__auto__ = board.call(null, new cljs.core.Keyword(null, "height", "height", 1025178622));
  if (cljs.core.truth_(or__6774__auto__)) {
    return or__6774__auto__;
  } else {
    return obb_rules.laws.default_board_h;
  }
};
obb_rules.board.board_terrain = function obb_rules$board$board_terrain(board) {
  return board.call(null, new cljs.core.Keyword(null, "terrain", "terrain", 704966005));
};
obb_rules.board.elements = function obb_rules$board$elements() {
  var G__8917 = arguments.length;
  switch(G__8917) {
    case 1:
      return obb_rules.board.elements.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return obb_rules.board.elements.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
obb_rules.board.elements.cljs$core$IFn$_invoke$arity$1 = function(board) {
  return board.call(null, new cljs.core.Keyword(null, "elements", "elements", 657646735));
};
obb_rules.board.elements.cljs$core$IFn$_invoke$arity$2 = function(board, elements) {
  return cljs.core.assoc.call(null, board, new cljs.core.Keyword(null, "elements", "elements", 657646735), elements);
};
obb_rules.board.elements.cljs$lang$maxFixedArity = 2;
obb_rules.board.get_element = function obb_rules$board$get_element(board, coord) {
  return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "elements", "elements", 657646735), coord], null));
};
obb_rules.board.get_element_consider_removed = function obb_rules$board$get_element_consider_removed(board, coord) {
  var or__6774__auto__ = obb_rules.board.get_element.call(null, board, coord);
  if (cljs.core.truth_(or__6774__auto__)) {
    return or__6774__auto__;
  } else {
    return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "removed-elements", "removed-elements", 1264344662), coord], null));
  }
};
obb_rules.board.in_bounds_QMARK_ = function obb_rules$board$in_bounds_QMARK_(board, p__8919) {
  var vec__8921 = p__8919;
  var x = cljs.core.nth.call(null, vec__8921, 0, null);
  var y = cljs.core.nth.call(null, vec__8921, 1, null);
  var w = obb_rules.board.board_width.call(null, board);
  var h = obb_rules.board.board_height.call(null, board);
  return x > 0 && y > 0 && x <= w && y <= h;
};
obb_rules.board.can_place_element_QMARK_ = function obb_rules$board$can_place_element_QMARK_(board, coord, elem) {
  var and__6762__auto__ = obb_rules.board.in_bounds_QMARK_.call(null, board, coord);
  if (cljs.core.truth_(and__6762__auto__)) {
    return obb_rules.board.get_element.call(null, board, coord) == null;
  } else {
    return and__6762__auto__;
  }
};
obb_rules.board.register_removed_element = function obb_rules$board$register_removed_element(board, coord, element, destroyed_QMARK_) {
  if (cljs.core.truth_(destroyed_QMARK_)) {
    var all_removed = function() {
      var or__6774__auto__ = board.call(null, new cljs.core.Keyword(null, "removed-elements", "removed-elements", 1264344662));
      if (cljs.core.truth_(or__6774__auto__)) {
        return or__6774__auto__;
      } else {
        return cljs.core.PersistentArrayMap.EMPTY;
      }
    }();
    return cljs.core.assoc.call(null, board, new cljs.core.Keyword(null, "removed-elements", "removed-elements", 1264344662), cljs.core.assoc.call(null, all_removed, coord, element));
  } else {
    return board;
  }
};
obb_rules.board.remove_element = function obb_rules$board$remove_element() {
  var G__8923 = arguments.length;
  switch(G__8923) {
    case 2:
      return obb_rules.board.remove_element.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return obb_rules.board.remove_element.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
obb_rules.board.remove_element.cljs$core$IFn$_invoke$arity$2 = function(board, coord) {
  return obb_rules.board.remove_element.call(null, board, coord, false);
};
obb_rules.board.remove_element.cljs$core$IFn$_invoke$arity$3 = function(board, coord, destroyed_QMARK_) {
  var elements = board.call(null, new cljs.core.Keyword(null, "elements", "elements", 657646735));
  var new_elements = cljs.core.dissoc.call(null, elements, coord);
  return cljs.core.assoc.call(null, obb_rules.board.register_removed_element.call(null, board, coord, cljs.core.get.call(null, elements, coord), destroyed_QMARK_), new cljs.core.Keyword(null, "elements", "elements", 657646735), new_elements);
};
obb_rules.board.remove_element.cljs$lang$maxFixedArity = 3;
obb_rules.board.swap_element = function obb_rules$board$swap_element(board, coord, new_elem) {
  var elements = board.call(null, new cljs.core.Keyword(null, "elements", "elements", 657646735));
  var element_with_coord = obb_rules.element.element_coordinate.call(null, new_elem, coord);
  var new_elements = cljs.core.assoc.call(null, elements, coord, element_with_coord);
  obb_rules.element.assert_element.call(null, element_with_coord);
  return cljs.core.assoc.call(null, board, new cljs.core.Keyword(null, "elements", "elements", 657646735), new_elements);
};
obb_rules.board.place_element = function obb_rules$board$place_element(board, coord, element) {
  obb_rules.element.assert_element.call(null, element);
  if (cljs.core.truth_(obb_rules.board.can_place_element_QMARK_.call(null, board, coord, element))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "can-place-element?", "can-place-element?", -436049716, null), new cljs.core.Symbol(null, "board", "board", -266486106, null), new cljs.core.Symbol(null, "coord", "coord", 186874888, null), new cljs.core.Symbol(null, "element", "element", -680416020, null))))].join(""));
  }
  return obb_rules.board.swap_element.call(null, board, coord, element);
};
obb_rules.board.has_element_QMARK_ = function obb_rules$board$has_element_QMARK_(board, coord) {
  return !(obb_rules.board.get_element.call(null, board, coord) == null);
};
obb_rules.board.adjacent_QMARK_ = function obb_rules$board$adjacent_QMARK_(p__8925, p__8926) {
  var vec__8929 = p__8925;
  var c1x = cljs.core.nth.call(null, vec__8929, 0, null);
  var c1y = cljs.core.nth.call(null, vec__8929, 1, null);
  var vec__8930 = p__8926;
  var c2x = cljs.core.nth.call(null, vec__8930, 0, null);
  var c2y = cljs.core.nth.call(null, vec__8930, 1, null);
  return 2 > obb_rules.math.abs.call(null, c1x - c2x) && 2 > obb_rules.math.abs.call(null, c1y - c2y);
};
obb_rules.board.remove_from_element = function obb_rules$board$remove_from_element() {
  var G__8932 = arguments.length;
  switch(G__8932) {
    case 3:
      return obb_rules.board.remove_from_element.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return obb_rules.board.remove_from_element.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
obb_rules.board.remove_from_element.cljs$core$IFn$_invoke$arity$3 = function(board, coord, quantity) {
  return obb_rules.board.remove_from_element.call(null, board, coord, quantity, false);
};
obb_rules.board.remove_from_element.cljs$core$IFn$_invoke$arity$4 = function(board, coord, quantity, destroyed_QMARK_) {
  var element = obb_rules.board.get_element.call(null, board, coord);
  var new_element = obb_rules.element.remove_quantity.call(null, element, quantity);
  var remaining_quantity = obb_rules.element.element_quantity.call(null, new_element);
  if (cljs.core._EQ_.call(null, 0, remaining_quantity)) {
    return obb_rules.board.remove_element.call(null, board, coord, destroyed_QMARK_);
  } else {
    return obb_rules.board.swap_element.call(null, board, coord, new_element);
  }
};
obb_rules.board.remove_from_element.cljs$lang$maxFixedArity = 4;
obb_rules.board.destroy_from_element = function obb_rules$board$destroy_from_element(board, coord, quantity) {
  return obb_rules.board.remove_from_element.call(null, board, coord, quantity, true);
};
obb_rules.board.add_to_element = function obb_rules$board$add_to_element(board, coord, extra_quantity, from_element) {
  var element = function() {
    var or__6774__auto__ = obb_rules.board.get_element.call(null, board, coord);
    if (cljs.core.truth_(or__6774__auto__)) {
      return or__6774__auto__;
    } else {
      return from_element;
    }
  }();
  var quantity = function() {
    var or__6774__auto__ = 0;
    if (cljs.core.truth_(or__6774__auto__)) {
      return or__6774__auto__;
    } else {
      return obb_rules.element.element_quantity.call(null, element);
    }
  }();
  var new_quantity = quantity + extra_quantity;
  var new_element = obb_rules.element.element_quantity.call(null, element, new_quantity);
  if (cljs.core.truth_(element)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("NoElement-"), cljs.core.str(coord), cljs.core.str(" - "), cljs.core.str(board)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "element", "element", -680416020, null)))].join(""));
  }
  obb_rules.element.assert_element.call(null, new_element);
  return obb_rules.board.swap_element.call(null, board, coord, new_element);
};
obb_rules.board.set_stash = function obb_rules$board$set_stash(board, player, stash) {
  return cljs.core.assoc_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "stash", "stash", 1808320309), player], null), stash);
};
obb_rules.board.get_stash = function obb_rules$board$get_stash(board, player) {
  return cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "stash", "stash", 1808320309), cljs.core.keyword.call(null, player)], null));
};
