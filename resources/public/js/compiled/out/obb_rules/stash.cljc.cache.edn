;; Analyzed by ClojureScript 1.7.28
{:use-macros nil, :excludes #{}, :name obb-rules.stash, :imports nil, :requires {unit obb-rules.unit, obb-rules.unit obb-rules.unit}, :uses nil, :defs {create-from-hash {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/stash.cljc", :line 4, :column 7, :end-line 4, :end-column 23, :arglists (quote ([unit-hash])), :doc "Creates a new stash from the given hash"}, :name obb-rules.stash/create-from-hash, :variadic false, :file "src/obb_rules/stash.cljc", :end-column 23, :method-params ([unit-hash]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([unit-hash])), :doc "Creates a new stash from the given hash"}, create {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/stash.cljc", :line 9, :column 7, :end-line 9, :end-column 13, :arglists (quote ([& units])), :doc "Creates a new stash", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(units)], :arglists ([& units]), :arglists-meta (nil)}}, :name obb-rules.stash/create, :variadic true, :file "src/obb_rules/stash.cljc", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(units)], :arglists ([& units]), :arglists-meta (nil)}, :method-params [(units)], :protocol-impl nil, :arglists-meta (nil), :column nil, :line nil, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists ([& units]), :doc "Creates a new stash"}, accessorfn {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/stash.cljc", :line 14, :column 8, :end-line 14, :end-column 18, :private true, :arglists (quote ([stash unit-name])), :doc "Gets the way to access a unit key on the stash"}, :private true, :name obb-rules.stash/accessorfn, :variadic false, :file "src/obb_rules/stash.cljc", :end-column 18, :method-params ([stash unit-name]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([stash unit-name])), :doc "Gets the way to access a unit key on the stash"}, how-many? {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/stash.cljc", :line 21, :column 7, :end-line 21, :end-column 16, :arglists (quote ([stash unit])), :doc "States how many of a unit are present"}, :name obb-rules.stash/how-many?, :variadic false, :file "src/obb_rules/stash.cljc", :end-column 16, :method-params ([stash unit]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([stash unit])), :doc "States how many of a unit are present"}, cleared? {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/stash.cljc", :line 26, :column 7, :end-line 26, :end-column 15, :arglists (quote ([stash])), :doc "Returns true if this stash is empty"}, :name obb-rules.stash/cleared?, :variadic false, :file "src/obb_rules/stash.cljc", :end-column 15, :method-params ([stash]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([stash])), :doc "Returns true if this stash is empty"}, available? {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/stash.cljc", :line 31, :column 7, :end-line 31, :end-column 17, :arglists (quote ([stash unit quantity])), :doc "Checks if a given quantity is available"}, :name obb-rules.stash/available?, :variadic false, :file "src/obb_rules/stash.cljc", :end-column 17, :method-params ([stash unit quantity]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 31, :max-fixed-arity 3, :fn-var true, :arglists (quote ([stash unit quantity])), :doc "Checks if a given quantity is available"}, retrieve {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/stash.cljc", :line 36, :column 7, :end-line 36, :end-column 15, :arglists (quote ([stash unit quantity])), :doc "Removes units from stash"}, :name obb-rules.stash/retrieve, :variadic false, :file "src/obb_rules/stash.cljc", :end-column 15, :method-params ([stash unit quantity]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 36, :max-fixed-arity 3, :fn-var true, :arglists (quote ([stash unit quantity])), :doc "Removes units from stash"}, random-by-category {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/stash.cljc", :line 48, :column 8, :end-line 48, :end-column 26, :private true, :arglists (quote ([expected-units category quantity])), :doc "Returns random units for the given category"}, :private true, :name obb-rules.stash/random-by-category, :variadic false, :file "src/obb_rules/stash.cljc", :end-column 26, :method-params ([expected-units category quantity]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 48, :max-fixed-arity 3, :fn-var true, :arglists (quote ([expected-units category quantity])), :doc "Returns random units for the given category"}, random {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/stash.cljc", :line 58, :column 7, :end-line 58, :end-column 13, :arglists (quote ([])), :doc "Creates a stash randomly populated"}, :name obb-rules.stash/random, :variadic false, :file "src/obb_rules/stash.cljc", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 58, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Creates a stash randomly populated"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:medium :heavy :light}, :order [:light :medium :heavy]}, :doc nil}