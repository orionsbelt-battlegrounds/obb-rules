;; Analyzed by ClojureScript 1.7.28
{:use-macros nil, :excludes #{}, :name obb-rules.ai.alamo, :imports nil, :requires {obb-rules.board obb-rules.board, math obb-rules.math, obb-rules.logger obb-rules.logger, board obb-rules.board, obb-rules.element obb-rules.element, obb-rules.result obb-rules.result, obb-rules.ai.firingsquad obb-rules.ai.firingsquad, element obb-rules.element, firingsquad obb-rules.ai.firingsquad, obb-rules.actions.move obb-rules.actions.move, game obb-rules.game, move obb-rules.actions.move, common obb-rules.ai.common, obb-rules.math obb-rules.math, obb-rules.game obb-rules.game, result obb-rules.result, logger obb-rules.logger, laws obb-rules.laws, obb-rules.ai.common obb-rules.ai.common, obb-rules.laws obb-rules.laws}, :uses nil, :defs {other-player {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/ai/alamo.cljc", :line 60, :column 8, :end-line 60, :end-column 20, :private true, :arglists (quote ([board])), :doc "Gets the other player to play on the given board"}, :private true, :name obb-rules.ai.alamo/other-player, :variadic false, :file "src/obb_rules/ai/alamo.cljc", :end-column 20, :method-params ([board]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 60, :max-fixed-arity 1, :fn-var true, :arglists (quote ([board])), :doc "Gets the other player to play on the given board"}, find-one {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/ai/alamo.cljc", :line 124, :column 8, :end-line 124, :end-column 16, :private true, :arglists (quote ([player options])), :doc "Given a collection of sorted options, tries to find a good one"}, :private true, :name obb-rules.ai.alamo/find-one, :variadic false, :file "src/obb_rules/ai/alamo.cljc", :end-column 16, :method-params ([player options]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 124, :max-fixed-arity 2, :fn-var true, :arglists (quote ([player options])), :doc "Given a collection of sorted options, tries to find a good one"}, merge-counter-option {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/ai/alamo.cljc", :line 77, :column 8, :end-line 77, :end-column 28, :private true, :arglists (quote ([element option counter-option element-board])), :doc "Given an option and a counter option will return a new option that is\n  a merged one"}, :private true, :name obb-rules.ai.alamo/merge-counter-option, :variadic false, :file "src/obb_rules/ai/alamo.cljc", :end-column 28, :method-params ([element option counter-option element-board]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 77, :max-fixed-arity 4, :fn-var true, :arglists (quote ([element option counter-option element-board])), :doc "Given an option and a counter option will return a new option that is\n  a merged one"}, consider-opponent-move {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/ai/alamo.cljc", :line 97, :column 8, :end-line 97, :end-column 30, :private true, :arglists (quote ([options element])), :doc "For each option given, will play a bot against it and recalculate\n  option value"}, :private true, :name obb-rules.ai.alamo/consider-opponent-move, :variadic false, :file "src/obb_rules/ai/alamo.cljc", :end-column 30, :method-params ([options element]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 97, :max-fixed-arity 2, :fn-var true, :arglists (quote ([options element])), :doc "For each option given, will play a bot against it and recalculate\n  option value"}, element-options-logger {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/ai/alamo.cljc", :line 38, :column 8, :end-line 38, :end-column 30, :private true, :arglists (quote ([coll element])), :doc "Utility for debugging"}, :private true, :name obb-rules.ai.alamo/element-options-logger, :variadic false, :file "src/obb_rules/ai/alamo.cljc", :end-column 30, :method-params ([coll element]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists (quote ([coll element])), :doc "Utility for debugging"}, get-element-on-new-board {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/ai/alamo.cljc", :line 67, :column 8, :end-line 67, :end-column 32, :private true, :arglists (quote ([element option counter-option])), :doc "Tries to find the element on the new board"}, :private true, :name obb-rules.ai.alamo/get-element-on-new-board, :variadic false, :file "src/obb_rules/ai/alamo.cljc", :end-column 32, :method-params ([element option counter-option]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 67, :max-fixed-arity 3, :fn-var true, :arglists (quote ([element option counter-option])), :doc "Tries to find the element on the new board"}, element-depth {:name obb-rules.ai.alamo/element-depth, :file "src/obb_rules/ai/alamo.cljc", :line nil, :column nil, :end-line 15, :end-column 19, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/ai/alamo.cljc", :line 15, :column 6, :end-line 15, :end-column 19}}, gather-element-actions {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/ai/alamo.cljc", :line 115, :column 8, :end-line 115, :end-column 30, :private true, :arglists (quote ([game all element])), :doc "Gathers possible actions for the given element"}, :private true, :name obb-rules.ai.alamo/gather-element-actions, :variadic false, :file "src/obb_rules/ai/alamo.cljc", :end-column 30, :method-params ([game all element]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 115, :max-fixed-arity 3, :fn-var true, :arglists (quote ([game all element])), :doc "Gathers possible actions for the given element"}, actions {:name obb-rules.ai.alamo/actions, :file "src/obb_rules/ai/alamo.cljc", :line nil, :column nil, :end-line 17, :end-column 18, :doc "Returns a list of actions to apply to the current game", :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/ai/alamo.cljc", :line 17, :column 11, :end-line 17, :end-column 18, :doc "Returns a list of actions to apply to the current game"}}, final-actions-logger {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/ai/alamo.cljc", :line 28, :column 8, :end-line 28, :end-column 28, :private true, :arglists (quote ([coll])), :doc "Utility for debugging"}, :private true, :name obb-rules.ai.alamo/final-actions-logger, :variadic false, :file "src/obb_rules/ai/alamo.cljc", :end-column 28, :method-params ([coll]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coll])), :doc "Utility for debugging"}, take-best {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/ai/alamo.cljc", :line 49, :column 8, :end-line 49, :end-column 17, :private true, :arglists (quote ([game element n])), :doc "Takes the best n options for a given element"}, :private true, :name obb-rules.ai.alamo/take-best, :variadic false, :file "src/obb_rules/ai/alamo.cljc", :end-column 17, :method-params ([game element n]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 49, :max-fixed-arity 3, :fn-var true, :arglists (quote ([game element n])), :doc "Takes the best n options for a given element"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:p2 :firingsquad :default :value :old-value :element-coord :p1 :actions :turn :removed-elements :action-results :hierarchy :deploy :auto-deploy :board}, :order [:hierarchy :deploy :turn :default :auto-deploy :firingsquad :p1 :p2 :board :element-coord :value :old-value :removed-elements :action-results :actions]}, :doc "Bot implementation that it's defensive"}