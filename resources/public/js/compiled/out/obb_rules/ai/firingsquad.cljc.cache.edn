;; Analyzed by ClojureScript 0.0-3308
{:use-macros nil, :excludes #{}, :name obb-rules.ai.firingsquad, :imports nil, :requires {obb-rules.board obb-rules.board, math obb-rules.math, board obb-rules.board, obb-rules.element obb-rules.element, obb-rules.result obb-rules.result, element obb-rules.element, obb-rules.actions.move obb-rules.actions.move, game obb-rules.game, move obb-rules.actions.move, common obb-rules.ai.common, obb-rules.math obb-rules.math, obb-rules.game obb-rules.game, result obb-rules.result, laws obb-rules.laws, obb-rules.ai.common obb-rules.ai.common, obb-rules.laws obb-rules.laws}, :uses nil, :defs {actions {:name obb-rules.ai.firingsquad/actions, :file "src/obb_rules/ai/firingsquad.cljc", :line 13, :column 1, :end-line 13, :end-column 18, :doc "Returns a list of actions to apply to the current game", :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/ai/firingsquad.cljc", :line 13, :column 11, :end-line 13, :end-column 18, :doc "Returns a list of actions to apply to the current game"}}, logger {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/ai/firingsquad.cljc", :line 24, :column 8, :end-line 24, :end-column 14, :private true, :arglists (quote ([coll])), :doc "Utility for debugging"}, :private true, :name obb-rules.ai.firingsquad/logger, :variadic false, :file "src/obb_rules/ai/firingsquad.cljc", :end-column 14, :method-params ([coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coll])), :doc "Utility for debugging"}, gather-element-actions {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/ai/firingsquad.cljc", :line 30, :column 8, :end-line 30, :end-column 30, :private true, :arglists (quote ([game all element])), :doc "Gathers possible actions for the given element"}, :private true, :name obb-rules.ai.firingsquad/gather-element-actions, :variadic false, :file "src/obb_rules/ai/firingsquad.cljc", :end-column 30, :method-params ([game all element]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 3, :fn-var true, :arglists (quote ([game all element])), :doc "Gathers possible actions for the given element"}, find-one {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/ai/firingsquad.cljc", :line 40, :column 8, :end-line 40, :end-column 16, :private true, :arglists (quote ([player options])), :doc "Given a collection of sorted options, tries to find a good one"}, :private true, :name obb-rules.ai.firingsquad/find-one, :variadic false, :file "src/obb_rules/ai/firingsquad.cljc", :end-column 16, :method-params ([player options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([player options])), :doc "Given a collection of sorted options, tries to find a good one"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:firingsquad :default :actions :turn :hierarchy :deploy :auto-deploy}, :order [:hierarchy :deploy :turn :default :auto-deploy :firingsquad :actions]}, :doc "Firingsquad bot implementation"}