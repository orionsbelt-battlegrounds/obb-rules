;; Analyzed by ClojureScript 1.7.28
{:use-macros nil, :excludes #{}, :name obb-rules.actions.move, :imports nil, :requires {obb-rules.board obb-rules.board, board obb-rules.board, obb-rules.simplifier obb-rules.simplifier, obb-rules.element obb-rules.element, obb-rules.result obb-rules.result, element obb-rules.element, move-restrictions obb-rules.actions.move-restrictions, obb-rules.actions.move-restrictions obb-rules.actions.move-restrictions, simplify obb-rules.simplifier, unit obb-rules.unit, game obb-rules.game, clojure.set clojure.set, obb-rules.unit obb-rules.unit, obb-rules.game obb-rules.game, result obb-rules.result, laws obb-rules.laws, obb-rules.laws obb-rules.laws}, :uses nil, :defs {reset-action-state {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/actions/move.cljc", :line 144, :column 7, :end-line 144, :end-column 25, :arglists (quote ([board])), :doc "Removes action specific state from the board"}, :name obb-rules.actions.move/reset-action-state, :variadic false, :file "src/obb_rules/actions/move.cljc", :end-column 25, :method-params ([board]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 144, :max-fixed-arity 1, :fn-var true, :arglists (quote ([board])), :doc "Removes action specific state from the board"}, get-quantity {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/actions/move.cljc", :line 125, :column 8, :end-line 125, :end-column 20, :private true, :arglists (quote ([quantity element])), :doc "Tries to get the quantity from the args"}, :private true, :name obb-rules.actions.move/get-quantity, :variadic false, :file "src/obb_rules/actions/move.cljc", :end-column 20, :method-params ([quantity element]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 125, :max-fixed-arity 2, :fn-var true, :arglists (quote ([quantity element])), :doc "Tries to get the quantity from the args"}, build-move {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/actions/move.cljc", :line 133, :column 7, :end-line 133, :end-column 17, :arglists (quote ([[from to quantity]])), :doc "Builds a move action on a board"}, :name obb-rules.actions.move/build-move, :variadic false, :file "src/obb_rules/actions/move.cljc", :end-column 17, :method-params ([p__33979]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 133, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[from to quantity]])), :doc "Builds a move action on a board"}, invalid-move-percentage? {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/actions/move.cljc", :line 13, :column 7, :end-line 13, :end-column 31, :arglists (quote ([total-quantity quantity])), :doc "Checks if a quantity to move is invalid"}, :name obb-rules.actions.move/invalid-move-percentage?, :variadic false, :file "src/obb_rules/actions/move.cljc", :end-column 31, :method-params ([total-quantity quantity]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists (quote ([total-quantity quantity])), :doc "Checks if a quantity to move is invalid"}, coordinate-coll-to-map {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/actions/move.cljc", :line 89, :column 8, :end-line 89, :end-column 30, :private true, :arglists (quote ([coll coords cost])), :doc "Adds coordinate info with cost to the given map"}, :private true, :name obb-rules.actions.move/coordinate-coll-to-map, :variadic false, :file "src/obb_rules/actions/move.cljc", :end-column 30, :method-params ([coll coords cost]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 89, :max-fixed-arity 3, :fn-var true, :arglists (quote ([coll coords cost])), :doc "Adds coordinate info with cost to the given map"}, tier-positions {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/actions/move.cljc", :line 66, :column 8, :end-line 66, :end-column 22, :private true, :arglists (quote ([board element coll])), :doc "Find possible destinations for the given coordinates"}, :private true, :name obb-rules.actions.move/tier-positions, :variadic false, :file "src/obb_rules/actions/move.cljc", :end-column 22, :method-params ([board element coll]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 66, :max-fixed-arity 3, :fn-var true, :arglists (quote ([board element coll])), :doc "Find possible destinations for the given coordinates"}, move-restrictions {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/actions/move.cljc", :line 22, :column 8, :end-line 22, :end-column 25, :private true, :arglists (quote ([player board efrom from eto to quantity])), :doc "Restrictions on the move action"}, :private true, :name obb-rules.actions.move/move-restrictions, :variadic false, :file "src/obb_rules/actions/move.cljc", :end-column 25, :method-params ([player board efrom from eto to quantity]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 22, :max-fixed-arity 7, :fn-var true, :arglists (quote ([player board efrom from eto to quantity])), :doc "Restrictions on the move action"}, possible-on-board? {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/actions/move.cljc", :line 45, :column 8, :end-line 45, :end-column 26, :private true, :arglists (quote ([board efrom destination])), :doc "Checks if the given coordinate is a possible move for the\n  element on the given board"}, :private true, :name obb-rules.actions.move/possible-on-board?, :variadic false, :file "src/obb_rules/actions/move.cljc", :end-column 26, :method-params ([board efrom destination]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 45, :max-fixed-arity 3, :fn-var true, :arglists (quote ([board efrom destination])), :doc "Checks if the given coordinate is a possible move for the\n  element on the given board"}, find-possible-destinations {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/actions/move.cljc", :line 58, :column 7, :end-line 58, :end-column 33, :arglists (quote ([board element])), :doc "Returns a collection with possible coordinates to move the given\n  element on the given board"}, :name obb-rules.actions.move/find-possible-destinations, :variadic false, :file "src/obb_rules/actions/move.cljc", :end-column 33, :method-params ([board element]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 58, :max-fixed-arity 2, :fn-var true, :arglists (quote ([board element])), :doc "Returns a collection with possible coordinates to move the given\n  element on the given board"}, movement-cost {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/actions/move.cljc", :line 38, :column 7, :end-line 38, :end-column 20, :arglists (quote ([unit partial-move?])), :doc "Specifies a unit movement cost"}, :name obb-rules.actions.move/movement-cost, :variadic false, :file "src/obb_rules/actions/move.cljc", :end-column 20, :method-params ([unit partial-move?]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists (quote ([unit partial-move?])), :doc "Specifies a unit movement cost"}, find-all-possible-destinations {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/actions/move.cljc", :line 75, :column 7, :end-line 75, :end-column 37, :arglists (quote ([board element] [board element mov-cost curr-cost curr-coords all])), :doc "Returns all possible destinations on a complete turn", :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([board element] [board element mov-cost curr-cost curr-coords all]), :arglists ([board element] [board element mov-cost curr-cost curr-coords all]), :arglists-meta (nil nil)}}, :name obb-rules.actions.move/find-all-possible-destinations, :variadic false, :file "src/obb_rules/actions/move.cljc", :end-column 37, :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([board element] [board element mov-cost curr-cost curr-coords all]), :arglists ([board element] [board element mov-cost curr-cost curr-coords all]), :arglists-meta (nil nil)}, :method-params ([board element] [board element mov-cost curr-cost curr-coords all]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 75, :max-fixed-arity 6, :fn-var true, :arglists ([board element] [board element mov-cost curr-cost curr-coords all]), :doc "Returns all possible destinations on a complete turn"}, process-move {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/actions/move.cljc", :line 114, :column 8, :end-line 114, :end-column 20, :private true, :arglists (quote ([board efrom from eto to quantity])), :doc "Processes the actual move"}, :private true, :name obb-rules.actions.move/process-move, :variadic false, :file "src/obb_rules/actions/move.cljc", :end-column 20, :method-params ([board efrom from eto to quantity]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 114, :max-fixed-arity 6, :fn-var true, :arglists (quote ([board efrom from eto to quantity])), :doc "Processes the actual move"}, find-all-possible-destinations-with-cost {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/actions/move.cljc", :line 99, :column 7, :end-line 99, :end-column 47, :arglists (quote ([board element] [board element mov-cost curr-cost curr-coords all])), :doc "Returns all possible destinations on a complete turn, including cost", :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([board element] [board element mov-cost curr-cost curr-coords all]), :arglists ([board element] [board element mov-cost curr-cost curr-coords all]), :arglists-meta (nil nil)}}, :name obb-rules.actions.move/find-all-possible-destinations-with-cost, :variadic false, :file "src/obb_rules/actions/move.cljc", :end-column 47, :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([board element] [board element mov-cost curr-cost curr-coords all]), :arglists ([board element] [board element mov-cost curr-cost curr-coords all]), :arglists-meta (nil nil)}, :method-params ([board element] [board element mov-cost curr-cost curr-coords all]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 99, :max-fixed-arity 6, :fn-var true, :arglists ([board element] [board element mov-cost curr-cost curr-coords all]), :doc "Returns all possible destinations on a complete turn, including cost"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:else :elements :frozen}, :order [:else :elements :frozen]}, :doc nil}