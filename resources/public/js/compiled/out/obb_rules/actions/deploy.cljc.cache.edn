;; Analyzed by ClojureScript 1.7.28
{:use-macros nil, :excludes #{}, :name obb-rules.actions.deploy, :imports nil, :requires {obb-rules.board obb-rules.board, board obb-rules.board, obb-rules.simplifier obb-rules.simplifier, obb-rules.element obb-rules.element, obb-rules.result obb-rules.result, element obb-rules.element, simplify obb-rules.simplifier, unit obb-rules.unit, game obb-rules.game, obb-rules.unit obb-rules.unit, obb-rules.game obb-rules.game, result obb-rules.result, stash obb-rules.stash, obb-rules.stash obb-rules.stash}, :uses nil, :defs {invalid-deploy-zone? {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/actions/deploy.cljc", :line 11, :column 8, :end-line 11, :end-column 28, :private true, :arglists (quote ([player [x y]])), :doc "Returns true if the coordinate zone is invalid"}, :private true, :name obb-rules.actions.deploy/invalid-deploy-zone?, :variadic false, :file "src/obb_rules/actions/deploy.cljc", :end-column 28, :method-params ([player p__33988]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 11, :max-fixed-arity 2, :fn-var true, :arglists (quote ([player [x y]])), :doc "Returns true if the coordinate zone is invalid"}, deploy-restrictions {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/actions/deploy.cljc", :line 18, :column 8, :end-line 18, :end-column 27, :private true, :arglists (quote ([player board quantity unit coordinate element stash])), :doc "Checks if the deploy can be made"}, :private true, :name obb-rules.actions.deploy/deploy-restrictions, :variadic false, :file "src/obb_rules/actions/deploy.cljc", :end-column 27, :method-params ([player board quantity unit coordinate element stash]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 18, :max-fixed-arity 7, :fn-var true, :arglists (quote ([player board quantity unit coordinate element stash])), :doc "Checks if the deploy can be made"}, process-deploy {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/actions/deploy.cljc", :line 28, :column 8, :end-line 28, :end-column 22, :private true, :arglists (quote ([player board quantity unit coordinate element stash])), :doc "Processes a deploy"}, :private true, :name obb-rules.actions.deploy/process-deploy, :variadic false, :file "src/obb_rules/actions/deploy.cljc", :end-column 22, :method-params ([player board quantity unit coordinate element stash]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 28, :max-fixed-arity 7, :fn-var true, :arglists (quote ([player board quantity unit coordinate element stash])), :doc "Processes a deploy"}, default-direction {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/actions/deploy.cljc", :line 37, :column 8, :end-line 37, :end-column 25, :private true, :arglists (quote ([player])), :doc "Gets the default direction for the given player"}, :private true, :name obb-rules.actions.deploy/default-direction, :variadic false, :file "src/obb_rules/actions/deploy.cljc", :end-column 25, :method-params ([player]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([player])), :doc "Gets the default direction for the given player"}, build-deploy {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/actions/deploy.cljc", :line 44, :column 7, :end-line 44, :end-column 19, :arglists (quote ([[quantity unit-type coordinate]])), :doc "Deploys a unit to the battleground"}, :name obb-rules.actions.deploy/build-deploy, :variadic false, :file "src/obb_rules/actions/deploy.cljc", :end-column 19, :method-params ([p__33991]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[quantity unit-type coordinate]])), :doc "Deploys a unit to the battleground"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:south :p1 :north}, :order [:p1 :north :south]}, :doc nil}