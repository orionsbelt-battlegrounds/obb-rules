;; Analyzed by ClojureScript 0.0-3308
{:use-macros nil, :excludes #{}, :name obb-rules.actions.goto, :imports nil, :requires {obb-rules.board obb-rules.board, math obb-rules.math, board obb-rules.board, obb-rules.element obb-rules.element, obb-rules.result obb-rules.result, element obb-rules.element, obb-rules.actions.move obb-rules.actions.move, move obb-rules.actions.move, obb-rules.math obb-rules.math, result obb-rules.result, laws obb-rules.laws, obb-rules.laws obb-rules.laws}, :uses nil, :defs {resolve-adjacent-move {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/actions/goto.cljc", :line 86, :column 8, :end-line 86, :end-column 29, :private true, :arglists (quote ([board player from target quantity])), :doc "Id the target is adjacent to the source, tries to run a :move action."}, :private true, :name obb-rules.actions.goto/resolve-adjacent-move, :variadic false, :file "src/obb_rules/actions/goto.cljc", :end-column 29, :method-params ([board player from target quantity]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 5, :fn-var true, :arglists (quote ([board player from target quantity])), :doc "Id the target is adjacent to the source, tries to run a :move action."}, possible-coords {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/actions/goto.cljc", :line 49, :column 8, :end-line 49, :end-column 23, :private true, :arglists (quote ([board from target travelled])), :doc "Groups the possible coords for the current scenario"}, :private true, :name obb-rules.actions.goto/possible-coords, :variadic false, :file "src/obb_rules/actions/goto.cljc", :end-column 23, :method-params ([board from target travelled]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 4, :fn-var true, :arglists (quote ([board from target travelled])), :doc "Groups the possible coords for the current scenario"}, resolve-goto {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/actions/goto.cljc", :line 96, :column 8, :end-line 96, :end-column 20, :private true, :arglists (quote ([from target quantity])), :doc "Tries to find the best path between the given coordinates. Fails if can't\n  find it, or the :move action would fail for this scenario."}, :private true, :name obb-rules.actions.goto/resolve-goto, :variadic false, :file "src/obb_rules/actions/goto.cljc", :end-column 20, :method-params ([from target quantity]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 3, :fn-var true, :arglists (quote ([from target quantity])), :doc "Tries to find the best path between the given coordinates. Fails if can't\n  find it, or the :move action would fail for this scenario."}, distance-factor {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/actions/goto.cljc", :line 20, :column 8, :end-line 20, :end-column 23, :private true, :arglists (quote ([source target current])), :doc "Gives proper weight to the distance between coordinates. It calculates the\n  geometric distance to the target. However, if the distance of the current\n  coordinate to evaluate is bigger than the distance of the source coordinate,\n  it will make the diagonals more valuable. Meaning, going one square behind\n  will always be the costest move to make."}, :private true, :name obb-rules.actions.goto/distance-factor, :variadic false, :file "src/obb_rules/actions/goto.cljc", :end-column 23, :method-params ([source target current]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 3, :fn-var true, :arglists (quote ([source target current])), :doc "Gives proper weight to the distance between coordinates. It calculates the\n  geometric distance to the target. However, if the distance of the current\n  coordinate to evaluate is bigger than the distance of the source coordinate,\n  it will make the diagonals more valuable. Meaning, going one square behind\n  will always be the costest move to make."}, distance-to {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/actions/goto.cljc", :line 12, :column 8, :end-line 12, :end-column 19, :private true, :arglists (quote ([[xa ya] [xb yb]])), :doc "Calculates the distance between two coordinates"}, :private true, :name obb-rules.actions.goto/distance-to, :variadic false, :file "src/obb_rules/actions/goto.cljc", :end-column 19, :method-params ([p__33100 p__33101]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[xa ya] [xb yb]])), :doc "Calculates the distance between two coordinates"}, build-goto {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/actions/goto.cljc", :line 107, :column 7, :end-line 107, :end-column 17, :arglists (quote ([[from to quantity]])), :doc "Builds a goto action on a board"}, :name obb-rules.actions.goto/build-goto, :variadic false, :file "src/obb_rules/actions/goto.cljc", :end-column 17, :method-params ([p__33117]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[from to quantity]])), :doc "Builds a goto action on a board"}, sort-by-distance {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/actions/goto.cljc", :line 44, :column 8, :end-line 44, :end-column 24, :private true, :arglists (quote ([coords from target])), :doc "Sorts the given collection by the distance to a target"}, :private true, :name obb-rules.actions.goto/sort-by-distance, :variadic false, :file "src/obb_rules/actions/goto.cljc", :end-column 24, :method-params ([coords from target]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 3, :fn-var true, :arglists (quote ([coords from target])), :doc "Sorts the given collection by the distance to a target"}, process-move {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/actions/goto.cljc", :line 58, :column 8, :end-line 58, :end-column 20, :private true, :arglists (quote ([board from best player])), :doc "Processes a :move action for the given board"}, :private true, :name obb-rules.actions.goto/process-move, :variadic false, :file "src/obb_rules/actions/goto.cljc", :end-column 20, :method-params ([board from best player]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 4, :fn-var true, :arglists (quote ([board from best player])), :doc "Processes a :move action for the given board"}, purge {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/actions/goto.cljc", :line 39, :column 8, :end-line 39, :end-column 13, :private true, :arglists (quote ([possible travelled])), :doc "Removes the travelled coords from the given coordinates to handle"}, :private true, :name obb-rules.actions.goto/purge, :variadic false, :file "src/obb_rules/actions/goto.cljc", :end-column 13, :method-params ([possible travelled]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 2, :fn-var true, :arglists (quote ([possible travelled])), :doc "Removes the travelled coords from the given coordinates to handle"}, find-path {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/actions/goto.cljc", :line 64, :column 8, :end-line 64, :end-column 17, :private true, :arglists (quote ([board player from target cost travelled possible])), :doc "Tries to find a path between two coords"}, :private true, :name obb-rules.actions.goto/find-path, :variadic false, :file "src/obb_rules/actions/goto.cljc", :end-column 17, :method-params ([board player from target cost travelled possible]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 7, :fn-var true, :arglists (quote ([board player from target cost travelled possible])), :doc "Tries to find a path between two coords"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:else}, :order [:else]}, :doc "Allows movement from a unit to non-adjacent coordinates.\n  Translates itself to the best found path via :move actions."}