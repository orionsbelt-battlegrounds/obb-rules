;; Analyzed by ClojureScript 0.0-3308
{:use-macros nil, :excludes #{}, :name obb-rules.game, :imports nil, :requires {obb-rules.board obb-rules.board, board obb-rules.board, obb-rules.simplifier obb-rules.simplifier, obb-rules.result obb-rules.result, simplify obb-rules.simplifier, host obb-rules.host-dependent, result obb-rules.result, stash obb-rules.stash, obb-rules.stash obb-rules.stash, obb-rules.host-dependent obb-rules.host-dependent}, :uses nil, :defs {valid-actions? {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/game.cljc", :line 63, :column 7, :end-line 63, :end-column 21, :arglists (quote ([game])), :doc "Returns true if the actions currently applied to the given game\n  are all successful."}, :name obb-rules.game/valid-actions?, :variadic false, :file "src/obb_rules/game.cljc", :end-column 21, :method-params ([game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 1, :fn-var true, :arglists (quote ([game])), :doc "Returns true if the actions currently applied to the given game\n  are all successful."}, version {:name obb-rules.game/version, :file "src/obb_rules/game.cljc", :line 8, :column 1, :end-line 8, :end-column 13, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/game.cljc", :line 8, :column 6, :end-line 8, :end-column 13}}, push-result {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/game.cljc", :line 56, :column 7, :end-line 56, :end-column 18, :arglists (quote ([game raw-action result])), :doc "Stores an action's result"}, :name obb-rules.game/push-result, :variadic false, :file "src/obb_rules/game.cljc", :end-column 18, :method-params ([game raw-action result]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 3, :fn-var true, :arglists (quote ([game raw-action result])), :doc "Stores an action's result"}, state? {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/game.cljc", :line 10, :column 7, :end-line 10, :end-column 13, :arglists (quote ([game state])), :doc "Checks if the game is in a given state"}, :name obb-rules.game/state?, :variadic false, :file "src/obb_rules/game.cljc", :end-column 13, :method-params ([game state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 2, :fn-var true, :arglists (quote ([game state])), :doc "Checks if the game is in a given state"}, deploy? {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/game.cljc", :line 18, :column 7, :end-line 18, :end-column 14, :arglists (quote ([game])), :doc "True if in deploy state"}, :name obb-rules.game/deploy?, :variadic false, :file "src/obb_rules/game.cljc", :end-column 14, :method-params ([game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([game])), :doc "True if in deploy state"}, get-stash {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/game.cljc", :line 20, :column 7, :end-line 20, :end-column 16, :arglists (quote ([game player])), :doc "Gets the player's stash"}, :name obb-rules.game/get-stash, :variadic false, :file "src/obb_rules/game.cljc", :end-column 16, :method-params ([game player]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([game player])), :doc "Gets the player's stash"}, create {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/game.cljc", :line 30, :column 7, :end-line 30, :end-column 13, :arglists (quote ([stash])), :doc "Creates a game for a given stash"}, :name obb-rules.game/create, :variadic false, :file "src/obb_rules/game.cljc", :end-column 13, :method-params ([stash]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([stash])), :doc "Creates a game for a given stash"}, start-battle {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/game.cljc", :line 44, :column 7, :end-line 44, :end-column 19, :arglists (quote ([game])), :doc "Given a deployed board, starts the battle"}, :name obb-rules.game/start-battle, :variadic false, :file "src/obb_rules/game.cljc", :end-column 19, :method-params ([game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([game])), :doc "Given a deployed board, starts the battle"}, mode {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/game.cljc", :line 21, :column 7, :end-line 21, :end-column 11, :arglists (quote ([game])), :doc "Gets the game mode"}, :name obb-rules.game/mode, :variadic false, :file "src/obb_rules/game.cljc", :end-column 11, :method-params ([game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([game])), :doc "Gets the game mode"}, player-turn? {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/game.cljc", :line 19, :column 7, :end-line 19, :end-column 19, :arglists (quote ([game player])), :doc "True if player's state"}, :name obb-rules.game/player-turn?, :variadic false, :file "src/obb_rules/game.cljc", :end-column 19, :method-params ([game player]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([game player])), :doc "True if player's state"}, state {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/game.cljc", :line 23, :column 7, :end-line 23, :end-column 12, :arglists (quote ([game] [game new-state])), :doc "Gets/Sets the current game's state", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([game] [game new-state]), :arglists ([game] [game new-state]), :arglists-meta (nil nil)}}, :name obb-rules.game/state, :variadic false, :file "src/obb_rules/game.cljc", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([game] [game new-state]), :arglists ([game] [game new-state]), :arglists-meta (nil nil)}, :method-params ([game] [game new-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists ([game] [game new-state]), :doc "Gets/Sets the current game's state"}, random {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/game.cljc", :line 38, :column 7, :end-line 38, :end-column 13, :arglists (quote ([])), :doc "Creates a game with random units"}, :name obb-rules.game/random, :variadic false, :file "src/obb_rules/game.cljc", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Creates a game with random units"}, action-results {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_rules/game.cljc", :line 50, :column 7, :end-line 50, :end-column 21, :arglists (quote ([game])), :doc "Provides the actions a results currently aplied on this game\n  if any."}, :name obb-rules.game/action-results, :variadic false, :file "src/obb_rules/game.cljc", :end-column 21, :method-params ([game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([game])), :doc "Provides the actions a results currently aplied on this game\n  if any."}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:p2 :default :mode :state :p1 :action-results :deploy}, :order [:state :deploy :mode :default :p1 :p2 :action-results]}, :doc nil}