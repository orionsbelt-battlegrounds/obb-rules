;; Analyzed by ClojureScript 0.0-3308
{:use-macros nil, :excludes #{}, :name obb-demo.boardground, :imports nil, :requires {board obb-rules.board, obb-rules.board obb-rules.board, element obb-rules.element, obb-rules.element obb-rules.element, unit obb-rules.unit, obb-rules.unit obb-rules.unit}, :uses nil, :defs {square-position {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_demo/boardground.cljs", :line 7, :column 7, :end-line 7, :end-column 22, :arglists (quote ([x y])), :doc "Calculates the position via left and bottom percentages"}, :name obb-demo.boardground/square-position, :variadic false, :file "src/obb_demo/boardground.cljs", :end-column 22, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y])), :doc "Calculates the position via left and bottom percentages"}, direction {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_demo/boardground.cljs", :line 14, :column 8, :end-line 14, :end-column 17, :private true, :arglists (quote ([element])), :doc "Gets a char code that represents the element's direction"}, :private true, :name obb-demo.boardground/direction, :variadic false, :file "src/obb_demo/boardground.cljs", :end-column 17, :method-params ([element]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([element])), :doc "Gets a char code that represents the element's direction"}, unit-image {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_demo/boardground.cljs", :line 20, :column 8, :end-line 20, :end-column 18, :private true, :arglists (quote ([game element])), :doc "Renders an html element that displays a board element's unit, if present\n  at the given coordinates"}, :private true, :name obb-demo.boardground/unit-image, :variadic false, :file "src/obb_demo/boardground.cljs", :end-column 18, :method-params ([game element]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([game element])), :doc "Renders an html element that displays a board element's unit, if present\n  at the given coordinates"}, enemy-display {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_demo/boardground.cljs", :line 29, :column 8, :end-line 29, :end-column 21, :private true, :arglists (quote ([game element])), :doc "Returns an enemy indication if the given element is an enemy"}, :private true, :name obb-demo.boardground/enemy-display, :variadic false, :file "src/obb_demo/boardground.cljs", :end-column 21, :method-params ([game element]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([game element])), :doc "Returns an enemy indication if the given element is an enemy"}, square {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_demo/boardground.cljs", :line 37, :column 8, :end-line 37, :end-column 14, :private true, :arglists (quote ([game x y])), :doc "Renders a board square"}, :private true, :name obb-demo.boardground/square, :variadic false, :file "src/obb_demo/boardground.cljs", :end-column 14, :method-params ([game x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 3, :fn-var true, :arglists (quote ([game x y])), :doc "Renders a board square"}, boardground-size {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_demo/boardground.cljs", :line 45, :column 8, :end-line 45, :end-column 24, :private true, :arglists (quote ([options])), :doc "Gets the panel size stype"}, :private true, :name obb-demo.boardground/boardground-size, :variadic false, :file "src/obb_demo/boardground.cljs", :end-column 24, :method-params ([options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([options])), :doc "Gets the panel size stype"}, render {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/orionsbelt-battlegrounds/obb-rules/src/obb_demo/boardground.cljs", :line 52, :column 7, :end-line 52, :end-column 13, :arglists (quote ([options game])), :doc "Renders the full game's board"}, :name obb-demo.boardground/render, :variadic false, :file "src/obb_demo/boardground.cljs", :end-column 13, :method-params ([options game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 2, :fn-var true, :arglists (quote ([options game])), :doc "Renders the full game's board"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:div.obb-square :p2 :div.enemy :key :bottom :src :div.obb-board-panel :style :div.obb-board :boardground-style :img.unit :left :img.obb-ice}, :order [:left :bottom :img.unit :src :p2 :div.enemy :div.obb-square :key :style :boardground-style :div.obb-board-panel :img.obb-ice :div.obb-board]}, :doc "Represents an OBB board game"}